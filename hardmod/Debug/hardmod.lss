
hardmod.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800100  000038d0  00003964  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000038d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000408  0080019e  0080019e  00003a02  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00003a04  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  000040d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a8  00000000  00000000  00004155  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000003fd  00000000  00000000  000042fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000011a1  00000000  00000000  000046fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000002c2  00000000  00000000  0000589b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dc4  00000000  00000000  00005b5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000330  00000000  00000000  00006924  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000004de  00000000  00000000  00006c54  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 000000d8  00000000  00000000  00007132  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000198  00000000  00000000  0000720a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 8c 11 	jmp	0x2318	; 0x2318 <__ctors_end>
       4:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
       8:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
       c:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      10:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      14:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      18:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      1c:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      20:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      24:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      28:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      2c:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      30:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      34:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      38:	0c 94 39 1b 	jmp	0x3672	; 0x3672 <__vector_14>
      3c:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      40:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      44:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      48:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      4c:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      50:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      54:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      58:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      5c:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      60:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>
      64:	0c 94 a9 11 	jmp	0x2352	; 0x2352 <__bad_interrupt>

00000068 <songdata>:
      68:	41 56 52 4d 0a 13 00 09 63 00 08 6c 00 0a 6c 18     AVRM....c..l..l.
      78:	00 00 00 2e 02 00 40 00 00 00 00 42 01 00 40 00     ......@....B..@.
      88:	00 00 00 ec 00 00 40 00 00 00 00 3e 00 00 40 06     ......@....>..@.
      98:	00 38 00 14 00 00 40 06 00 0e 00 20 00 00 40 12     .8....@.... ..@.
      a8:	00 0e 00 00 00 00 00 00 00 00 00 20 00 00 40 12     ........... ..@.
      b8:	00 0e 00 14 00 00 40 06 00 0e 00 20 00 00 40 12     ......@.... ..@.
      c8:	00 0e 00 06 05 07 00 02 00 03 04 01 31 08 a2 63     ............1..c
      d8:	c4 05 60 0c 37 61 10 e1 fd 00 00 fc 00 00 60 0a     ..`.7a........`.
      e8:	37 fd 00 00 61 08 00 60 06 00 60 0c 37 fd 00 00     7...a..`..`.7...
      f8:	33 08 1e fc 00 00 60 12 37 fd 00 00 31 08 00 60     3.....`.7...1..`
     108:	02 00 60 0c 37 fd 80 02 fd 80 01 fc 00 00 60 0a     ..`.7.........`.
     118:	37 fd 00 00 63 08 1e 60 06 00 60 12 37 fd 80 02     7...c..`..`.7...
     128:	4d 08 00 fc 00 00 60 12 37 fd 00 00 fd 80 01 60     M.....`.7......`
     138:	04 00 60 0c 37 59 10 00 33 08 1e fc 00 00 60 0a     ..`.7Y..3.....`.
     148:	37 61 14 00 59 08 00 60 06 00 60 0c 37 4d 10 00     7a..Y..`..`.7M..
     158:	fd 80 01 60 06 00 60 12 37 59 14 00 fd 80 01 60     ...`..`.7Y.....`
     168:	02 00 60 0c 27 61 10 00 4f 08 1e fc 00 00 60 0a     ..`.'a..O.....`.
     178:	27 4d 14 00 4c 08 00 60 06 00 60 12 27 69 10 00     'M..L..`..`.'i..
     188:	5b 08 1e 63 02 20 60 12 27 5b 10 1a 31 08 a2 60     [..c. `.'[..1..`
     198:	04 00 60 0c 37 60 d0 1f fd 00 00 63 02 20 60 0a     ..`.7`.....c. `.
     1a8:	37 fd 00 00 61 08 00 60 06 00 60 0c 37 fd 00 00     7...a..`..`.7...
     1b8:	33 08 1e fc 00 00 60 12 37 fd 00 00 31 08 00 60     3.....`.7...1..`
     1c8:	02 00 60 0c 37 fd 80 02 fd 80 01 fc 00 00 60 0a     ..`.7.........`.
     1d8:	37 fd 00 00 63 08 1e 60 06 00 60 12 37 fd 80 02     7...c..`..`.7...
     1e8:	4d 08 00 fc 00 00 60 12 37 fd 00 00 fd 80 01 60     M.....`.7......`
     1f8:	04 00 60 0c 37 61 10 00 33 08 1e fc 00 00 60 0a     ..`.7a..3.....`.
     208:	37 61 14 00 59 08 00 60 06 00 60 0c 37 59 10 00     7a..Y..`..`.7Y..
     218:	fd 80 01 60 06 00 60 12 37 61 14 00 fd 80 01 60     ...`..`.7a.....`
     228:	02 00 60 0c 27 61 10 00 4f 08 1e fc 00 00 60 0a     ..`.'a..O.....`.
     238:	27 59 14 00 4c 08 00 63 02 20 60 12 27 75 10 00     'Y..L..c. `.'u..
     248:	5b 08 1e 63 02 20 60 12 27 63 10 1a 3d 08 a2 60     [..c. `.'c..=..`
     258:	04 00 6c 0c 47 6c d0 1f fd 00 00 fc 00 00 6c 0a     ..l.Gl........l.
     268:	47 fd 00 00 6d 08 00 60 06 00 6c 0c 47 fd 00 00     G...m..`..l.G...
     278:	3f 08 1e fc 00 00 6c 12 47 fd 00 00 3d 08 00 60     ?.....l.G...=..`
     288:	02 00 6c 0c 47 fd 80 02 fd 80 01 fc 00 00 6c 0a     ..l.G.........l.
     298:	47 fd 00 00 6f 08 1e 60 06 00 6c 12 47 fd 80 02     G...o..`..l.G...
     2a8:	59 08 00 fc 00 00 6c 12 47 fd 00 00 fd 80 01 60     Y.....l.G......`
     2b8:	04 00 6c 0c 47 68 d0 02 3f 08 1e fc 00 00 6c 0a     ..l.Gh..?.....l.
     2c8:	47 fc c0 02 65 08 00 60 06 00 6c 0c 47 fc c0 02     G...e..`..l.G...
     2d8:	fd 80 01 60 06 00 6c 12 47 fc c0 02 fd 80 01 60     ...`..l.G......`
     2e8:	02 00 68 0c 58 61 10 00 5b 08 1e fc 00 00 68 0a     ..h.Xa..[.....h.
     2f8:	58 fd 00 00 58 08 00 60 06 00 68 12 58 fd 00 00     X...X..`..h.X...
     308:	67 08 1e 63 02 20 68 12 58 fd 00 00 29 08 a2 60     g..c. h.X...)..`
     318:	04 00 58 0c 47 59 10 00 fd 00 00 63 02 20 58 0a     ..X.GY.....c. X.
     328:	47 fd 80 02 59 08 00 60 06 00 58 0c 47 fd 80 02     G...Y..`..X.G...
     338:	2b 08 1e fc 00 00 58 12 47 61 10 00 29 08 00 60     +.....X.Ga..)..`
     348:	02 00 58 0c 47 fd 80 02 fd 80 01 fc 00 00 58 0a     ..X.G.........X.
     358:	47 fd 80 02 5b 08 1e 60 06 00 58 12 47 6c d0 0f     G...[..`..X.Gl..
     368:	45 08 00 fc 00 00 58 12 47 fd 00 00 fd 80 01 60     E.....X.G......`
     378:	04 00 58 0c 47 fd 80 02 2b 08 1e fc 00 00 58 0a     ..X.G...+.....X.
     388:	47 fd 80 02 51 08 00 60 06 00 58 0c 47 61 10 00     G...Q..`..X.Ga..
     398:	fd 80 01 60 06 00 58 12 47 6d 14 00 fd 80 01 60     ...`..X.Gm.....`
     3a8:	02 00 58 0c 57 4d 10 00 47 08 1e fc 00 00 58 0a     ..X.WM..G.....X.
     3b8:	57 61 14 00 44 08 00 63 02 20 58 12 57 59 10 00     Wa..D..c. X.WY..
     3c8:	53 08 1e 63 02 20 58 12 57 4d 14 00 3e 88 04 60     S..c. X.WM..>..`
     3d8:	04 00 3c 0c 37 6d 10 e1 fe 80 04 fc 00 00 3c 0c     ..<.7m........<.
     3e8:	37 fd 00 00 fe 88 04 60 06 00 ff 00 00 fd 00 00     7......`........
     3f8:	fe 80 04 fc 00 00 fc 00 00 fd 00 00 fe 88 04 60     ...............`
     408:	02 00 3c 0c 37 fd 80 01 fe 80 04 fc 00 00 ff 00     ..<.7...........
     418:	00 fd 80 01 fe 80 04 60 06 00 fc 00 00 fd 80 01     .......`........
     428:	fe 88 04 fc 00 00 3c 0c 27 fd 80 01 fe 80 04 60     ......<.'......`
     438:	04 00 ff 00 00 fd 80 01 fe 80 04 fc 00 00 fc 00     ................
     448:	00 fd 80 01 fe 88 04 60 06 00 3c 0c 37 fd 80 01     .......`..<.7...
     458:	fe 80 04 fc 00 00 ff 00 00 fd 80 01 36 88 04 60     ............6..`
     468:	02 00 3c 0c 27 79 10 00 fe 80 04 fc 00 00 3c 0c     ..<.'y........<.
     478:	27 6d 14 00 fe 88 04 60 06 00 ff 00 00 75 10 00     'm.....`.....u..
     488:	fe 80 04 fc 00 00 fc 00 00 79 14 00 3e 88 04 60     .........y..>..`
     498:	04 00 3c 0c 37 6d 10 00 fe 80 04 fc 00 00 3c 0c     ..<.7m........<.
     4a8:	37 fd 00 00 fe 88 04 60 06 00 ff 00 00 fd 00 00     7......`........
     4b8:	fe 80 04 fc 00 00 fc 00 00 fd 00 00 fe 88 04 60     ...............`
     4c8:	02 00 3c 0c 37 fd 80 01 fe 80 04 fc 00 00 ff 00     ..<.7...........
     4d8:	00 fd 80 01 fe 80 04 60 06 00 fc 00 00 fd 80 01     .......`........
     4e8:	fe 88 04 fc 00 00 3c 0c 27 fd 80 01 fe 80 04 60     ......<.'......`
     4f8:	04 00 ff 00 00 fd 80 01 fe 80 04 fc 00 00 fc 00     ................
     508:	00 fd 80 01 fe 88 04 60 06 00 3c 0c 37 fd 80 01     .......`..<.7...
     518:	fe 80 04 fc 00 00 ff 00 00 fd 80 01 36 88 04 60     ............6..`
     528:	02 00 3c 0c 27 65 10 00 fe 80 04 fc 00 00 3c 0c     ..<.'e........<.
     538:	27 6d 14 00 fe 88 04 60 06 00 ff 00 00 79 10 00     'm.....`.....y..
     548:	fe 80 04 fc 00 00 fc 00 00 65 14 00 4a 88 04 60     .........e..J..`
     558:	04 00 48 0c 47 89 10 00 fe 80 04 fc 00 00 48 0c     ..H.G.........H.
     568:	47 fd 00 00 fe 88 04 60 06 00 ff 00 00 fd 00 00     G......`........
     578:	fe 80 04 fc 00 00 fc 00 00 fd 00 00 fe 88 04 60     ...............`
     588:	02 00 48 0c 47 fd 80 01 fe 80 04 fc 00 00 ff 00     ..H.G...........
     598:	00 fd 80 01 fe 80 04 60 06 00 fc 00 00 fd 80 01     .......`........
     5a8:	fe 88 04 fc 00 00 44 0c 58 fd 80 01 fe 80 04 60     ......D.X......`
     5b8:	04 00 ff 00 00 fd 80 01 fe 80 04 fc 00 00 fc 00     ................
     5c8:	00 fd 80 01 fe 88 04 60 06 00 48 0c 47 fd 80 01     .......`..H.G...
     5d8:	fe 80 04 fc 00 00 ff 00 00 fd 80 01 fe 88 04 60     ...............`
     5e8:	02 00 44 0c 58 79 10 00 fe 80 04 fc 00 00 44 0c     ..D.Xy........D.
     5f8:	58 fd 00 00 fe 88 04 60 06 00 ff 00 00 fd 80 02     X......`........
     608:	fe 80 04 fc 00 00 fc 00 00 fd 80 02 36 88 04 60     ............6..`
     618:	04 00 34 0c 47 75 10 00 fe 80 04 fc 00 00 34 0c     ..4.Gu........4.
     628:	47 fd 00 00 fe 88 04 60 06 00 ff 00 00 fd 00 00     G......`........
     638:	fe 80 04 fc 00 00 fc 00 00 fd 00 00 fe 88 04 60     ...............`
     648:	02 00 34 0c 47 fd 80 01 fe 80 04 fc 00 00 ff 00     ..4.G...........
     658:	00 fd 80 01 fe 80 04 60 06 00 fc 00 00 fd 80 01     .......`........
     668:	fe 88 04 63 86 94 34 0c 57 fd 80 01 58 88 0a 60     ...c..4.W...X..`
     678:	04 00 ff 00 00 fc 80 04 fc 80 0a fc 00 00 fc 00     ................
     688:	00 fc 80 04 fc 80 0a 60 02 00 34 0c 47 ff 00 00     .......`..4.G...
     698:	fc 80 0a fc 00 00 ff 00 00 fc 00 00 fc 80 0a 60     ...............`
     6a8:	04 00 28 0c 57 6d 10 00 fc 80 0a fc 00 00 28 0c     ..(.Wm........(.
     6b8:	57 7d 14 00 fc 80 0a 60 02 00 ff 00 00 69 10 00     W}.....`.....i..
     6c8:	fc 80 0a 62 c2 03 fc 00 00 6d 14 00 31 08 a2 60     ...b.....m..1..`
     6d8:	04 00 60 0c 37 61 10 e1 fd 00 00 fc 00 00 60 0a     ..`.7a........`.
     6e8:	37 fd 00 00 61 08 00 60 06 00 60 0c 37 fd 00 00     7...a..`..`.7...
     6f8:	33 08 1e fc 00 00 60 12 37 fd 00 00 31 08 00 60     3.....`.7...1..`
     708:	02 00 60 0c 37 fd 80 02 fd 80 01 fc 00 00 60 0a     ..`.7.........`.
     718:	37 fd 00 00 63 08 1e 60 06 00 60 12 37 fd 80 02     7...c..`..`.7...
     728:	4d 08 00 fc 00 00 60 12 37 fd 00 00 fd 80 01 60     M.....`.7......`
     738:	04 00 60 0c 37 59 10 00 33 08 1e fc 00 00 60 0a     ..`.7Y..3.....`.
     748:	37 61 14 00 59 08 00 60 06 00 60 0c 37 4d 10 00     7a..Y..`..`.7M..
     758:	fd 80 01 60 06 00 60 12 37 59 14 00 fd 80 01 60     ...`..`.7Y.....`
     768:	02 00 60 0c 27 61 10 00 4f 08 1e fc 00 00 60 0a     ..`.'a..O.....`.
     778:	27 4d 14 00 4c 08 00 60 06 00 60 12 27 69 10 00     'M..L..`..`.'i..
     788:	5b 08 1e 63 02 20 60 12 27 5b 10 1a 31 08 a2 60     [..c. `.'[..1..`
     798:	04 00 60 0c 37 60 d0 1f fd 00 00 63 02 20 60 0a     ..`.7`.....c. `.
     7a8:	37 fd 00 00 61 08 00 60 06 00 60 0c 37 fd 00 00     7...a..`..`.7...
     7b8:	33 08 1e fc 00 00 60 12 37 fd 00 00 31 08 00 60     3.....`.7...1..`
     7c8:	02 00 60 0c 37 fd 80 02 fd 80 01 fc 00 00 60 0a     ..`.7.........`.
     7d8:	37 fd 00 00 63 08 1e 60 06 00 60 12 37 fd 80 02     7...c..`..`.7...
     7e8:	4d 08 00 fc 00 00 60 12 37 fd 00 00 fd 80 01 60     M.....`.7......`
     7f8:	04 00 60 0c 37 61 10 00 33 08 1e fc 00 00 60 0a     ..`.7a..3.....`.
     808:	37 61 14 00 59 08 00 60 06 00 60 0c 37 59 10 00     7a..Y..`..`.7Y..
     818:	fd 80 01 60 06 00 60 12 37 61 14 00 fd 80 01 60     ...`..`.7a.....`
     828:	02 00 60 0c 27 6d 10 00 4f 08 1e fc 00 00 60 0a     ..`.'m..O.....`.
     838:	27 59 14 00 4c 08 00 63 02 20 60 12 27 89 10 00     'Y..L..c. `.'...
     848:	5b 08 1e 63 02 20 60 12 27 6f 10 1a 3d 08 a2 60     [..c. `.'o..=..`
     858:	04 00 6c 0c 47 7d 10 00 fd 00 00 fc 00 00 6c 0a     ..l.G}........l.
     868:	47 fd 00 00 6d 08 00 60 06 00 6c 0c 47 fd 00 00     G...m..`..l.G...
     878:	3f 08 1e fc 00 00 6c 12 47 fd 00 00 3d 08 00 60     ?.....l.G...=..`
     888:	02 00 6c 0c 47 fd 80 02 fd 80 01 fc 00 00 6c 0a     ..l.G.........l.
     898:	47 fd 00 00 6f 08 1e 60 06 00 6c 12 47 fd 80 02     G...o..`..l.G...
     8a8:	59 08 00 fc 00 00 6c 12 47 fd 00 00 fd 80 01 60     Y.....l.G......`
     8b8:	04 00 6c 0c 47 75 10 00 3f 08 1e fc 00 00 6c 0a     ..l.Gu..?.....l.
     8c8:	47 fd 00 00 65 08 00 60 06 00 6c 0c 47 fd 00 00     G...e..`..l.G...
     8d8:	fd 80 01 60 06 00 6c 12 47 fd 00 00 fd 80 01 60     ...`..l.G......`
     8e8:	02 00 68 0c 58 6d 10 00 5b 08 1e fc 00 00 68 0a     ..h.Xm..[.....h.
     8f8:	58 fd 00 00 58 08 00 60 06 00 68 12 58 fd 00 00     X...X..`..h.X...
     908:	67 08 1e 63 02 20 68 12 58 fd 00 00 29 08 a2 60     g..c. h.X...)..`
     918:	04 00 58 0c 47 69 10 00 fd 00 00 63 02 20 58 0a     ..X.Gi.....c. X.
     928:	47 fd 80 02 59 08 00 60 06 00 58 0c 47 fd 80 02     G...Y..`..X.G...
     938:	2b 08 1e fc 00 00 58 12 47 6d 10 00 29 08 00 60     +.....X.Gm..)..`
     948:	02 00 58 0c 47 fd 80 02 fd 80 01 fc 00 00 58 0a     ..X.G.........X.
     958:	47 fd 80 02 5b 08 1e 60 06 00 58 12 47 74 d0 0f     G...[..`..X.Gt..
     968:	45 08 00 fc 00 00 58 12 47 fd 00 00 fd 80 01 60     E.....X.G......`
     978:	04 00 58 0c 47 fd 80 02 2b 08 1e fc 00 00 58 0a     ..X.G...+.....X.
     988:	47 fd 80 02 51 08 00 60 06 00 58 0c 47 61 10 00     G...Q..`..X.Ga..
     998:	fd 80 01 60 06 00 58 12 47 75 14 00 fd 80 01 60     ...`..X.Gu.....`
     9a8:	02 00 58 0c 57 6d 10 00 47 08 1e fc 00 00 58 0a     ..X.Wm..G.....X.
     9b8:	57 7d 14 00 44 08 00 63 02 20 58 12 57 69 10 00     W}..D..c. X.Wi..
     9c8:	53 08 1e 63 02 20 58 12 57 6d 14 00 31 08 a2 60     S..c. X.Wm..1..`
     9d8:	04 00 60 0c 37 61 10 e1 fd 00 00 fc 00 00 60 0a     ..`.7a........`.
     9e8:	37 fd 00 00 61 08 00 60 06 00 60 0c 37 fd 00 00     7...a..`..`.7...
     9f8:	33 08 1e fc 00 00 60 12 37 fd 00 00 31 08 00 60     3.....`.7...1..`
     a08:	02 00 60 0c 37 fd 80 02 fd 80 01 fc 00 00 60 0a     ..`.7.........`.
     a18:	37 fd 00 00 63 08 1e 60 06 00 60 12 37 fd 80 02     7...c..`..`.7...
     a28:	4d 08 00 fc 00 00 60 12 37 fd 00 00 fd 80 01 60     M.....`.7......`
     a38:	04 00 60 0c 37 59 10 00 33 08 1e fc 00 00 60 0a     ..`.7Y..3.....`.
     a48:	37 61 14 00 59 08 00 60 06 00 60 0c 37 4d 10 00     7a..Y..`..`.7M..
     a58:	fd 80 01 60 06 00 60 12 37 59 14 00 fd 80 01 60     ...`..`.7Y.....`
     a68:	02 00 60 0c 27 61 10 00 4f 08 1e fc 00 00 60 0a     ..`.'a..O.....`.
     a78:	27 4d 14 00 4c 08 00 60 06 00 60 12 27 69 10 00     'M..L..`..`.'i..
     a88:	5b 08 1e 63 02 20 60 12 27 5b 10 1a 31 08 a2 60     [..c. `.'[..1..`
     a98:	04 00 60 0c 37 60 d0 1f fd 00 00 63 02 20 60 0a     ..`.7`.....c. `.
     aa8:	37 fd 00 00 61 08 00 60 06 00 60 0c 37 fd 00 00     7...a..`..`.7...
     ab8:	33 08 1e fc 00 00 60 12 37 fd 00 00 31 08 00 60     3.....`.7...1..`
     ac8:	02 00 60 0c 37 fd 80 02 fd 80 01 fc 00 00 60 0a     ..`.7.........`.
     ad8:	37 fd 00 00 63 08 1e 60 06 00 60 12 37 fd 80 02     7...c..`..`.7...
     ae8:	4d 08 00 fc 00 00 60 12 37 fd 00 00 fd 80 01 60     M.....`.7......`
     af8:	04 00 60 0c 37 61 10 00 33 08 1e fc 00 00 60 0a     ..`.7a..3.....`.
     b08:	37 61 14 00 59 08 00 60 06 00 60 0c 37 59 10 00     7a..Y..`..`.7Y..
     b18:	fd 80 01 60 06 00 60 12 37 61 14 00 fd 80 01 60     ...`..`.7a.....`
     b28:	02 00 60 0c 27 6d 10 00 4f 08 1e fc 00 00 60 0a     ..`.'m..O.....`.
     b38:	27 59 14 00 4c 08 00 63 02 20 60 12 27 89 10 00     'Y..L..c. `.'...
     b48:	5b 08 1e 63 02 20 60 12 27 6f 10 1a 3d 08 a2 60     [..c. `.'o..=..`
     b58:	04 00 6c 0c 47 7d 10 00 fd 00 00 fc 00 00 6c 0a     ..l.G}........l.
     b68:	47 fd 00 00 6d 08 00 60 06 00 6c 0c 47 fd 00 00     G...m..`..l.G...
     b78:	3f 08 1e fc 00 00 6c 12 47 fd 00 00 3d 08 00 60     ?.....l.G...=..`
     b88:	02 00 6c 0c 47 fd 80 02 fd 80 01 fc 00 00 6c 0a     ..l.G.........l.
     b98:	47 fd 00 00 6f 08 1e 60 06 00 6c 12 47 fd 80 02     G...o..`..l.G...
     ba8:	59 08 00 fc 00 00 6c 12 47 fd 00 00 fd 80 01 60     Y.....l.G......`
     bb8:	04 00 6c 0c 47 75 10 00 3f 08 1e fc 00 00 6c 0a     ..l.Gu..?.....l.
     bc8:	47 fd 00 00 65 08 00 60 06 00 6c 0c 47 fd 00 00     G...e..`..l.G...
     bd8:	fd 80 01 60 06 00 6c 12 47 fd 00 00 fd 80 01 60     ...`..l.G......`
     be8:	02 00 68 0c 58 6d 10 00 5b 08 1e fc 00 00 68 0a     ..h.Xm..[.....h.
     bf8:	58 fd 00 00 58 08 00 60 06 00 68 12 58 fd 00 00     X...X..`..h.X...
     c08:	67 08 1e 62 82 0a 68 12 58 fd 00 00 29 08 a2 60     g..b..h.X...)..`
     c18:	04 00 58 0c 47 69 10 00 fd 00 00 fc 00 00 58 0a     ..X.Gi........X.
     c28:	47 fd 80 02 59 08 00 60 02 00 58 0c 47 fd 80 02     G...Y..`..X.G...
     c38:	2b 08 1e fc 00 00 58 12 47 6d 10 00 29 08 00 60     +.....X.Gm..)..`
     c48:	04 00 58 0c 47 fd 80 02 fd 80 01 fc 00 00 58 0a     ..X.G.........X.
     c58:	47 fd 80 02 5b 08 1e fc 00 00 58 12 47 74 d0 0f     G...[.....X.Gt..
     c68:	45 08 00 fc 00 00 58 12 47 fd 00 00 fd 80 01 60     E.....X.G......`
     c78:	02 00 58 0c 47 fc 80 04 2b 08 1e fc 00 00 58 0a     ..X.G...+.....X.
     c88:	47 fc 80 04 50 88 0a 60 04 00 58 0c 47 ff 00 00     G...P..`..X.G...
     c98:	fc 80 0a fc 00 00 58 12 47 fc 00 00 fc 80 0a 60     ......X.G......`
     ca8:	04 00 58 0c 57 78 10 00 fc 80 0a fc 00 00 58 0a     ..X.Wx........X.
     cb8:	57 74 14 00 fc 80 0a 62 82 0a 58 12 57 74 10 00     Wt.....b..X.Wt..
     cc8:	fc 80 0a 62 82 0a 58 12 57 78 14 00 3e 88 04 60     ...b..X.Wx..>..`
     cd8:	04 00 3c 0c 37 6d 10 e1 fe 80 04 fc 00 00 3c 0c     ..<.7m........<.
     ce8:	37 fd 00 00 fe 88 04 60 06 00 ff 00 00 fd 00 00     7......`........
     cf8:	fe 80 04 fc 00 00 fc 00 00 fd 00 00 fe 88 04 60     ...............`
     d08:	02 00 3c 0c 37 fd 80 01 fe 80 04 fc 00 00 ff 00     ..<.7...........
     d18:	00 fd 80 01 fe 80 04 60 06 00 fc 00 00 fd 80 01     .......`........
     d28:	fe 88 04 fc 00 00 3c 0c 27 fd 80 01 fe 80 04 60     ......<.'......`
     d38:	04 00 ff 00 00 fd 80 01 fe 80 04 fc 00 00 fc 00     ................
     d48:	00 fd 80 01 fe 88 04 60 06 00 3c 0c 37 fd 80 01     .......`..<.7...
     d58:	fe 80 04 fc 00 00 ff 00 00 fd 80 01 36 88 04 60     ............6..`
     d68:	02 00 3c 0c 27 79 10 00 fe 80 04 fc 00 00 3c 0c     ..<.'y........<.
     d78:	27 6d 14 00 fe 88 04 60 06 00 ff 00 00 75 10 00     'm.....`.....u..
     d88:	fe 80 04 fc 00 00 fc 00 00 79 14 00 3e 88 04 60     .........y..>..`
     d98:	04 00 3c 0c 37 6d 10 00 fe 80 04 fc 00 00 3c 0c     ..<.7m........<.
     da8:	37 fd 00 00 fe 88 04 60 06 00 ff 00 00 fd 00 00     7......`........
     db8:	fe 80 04 fc 00 00 fc 00 00 fd 00 00 fe 88 04 60     ...............`
     dc8:	02 00 3c 0c 37 fd 80 01 fe 80 04 fc 00 00 ff 00     ..<.7...........
     dd8:	00 fd 80 01 fe 80 04 60 06 00 fc 00 00 fd 80 01     .......`........
     de8:	fe 88 04 fc 00 00 3c 0c 27 fd 80 01 fe 80 04 60     ......<.'......`
     df8:	04 00 ff 00 00 fd 80 01 fe 80 04 fc 00 00 fc 00     ................
     e08:	00 fd 80 01 fe 88 04 60 06 00 3c 0c 37 fd 80 01     .......`..<.7...
     e18:	fe 80 04 fc 00 00 ff 00 00 fd 80 01 36 88 04 60     ............6..`
     e28:	02 00 3c 0c 27 65 10 00 fe 80 04 fc 00 00 3c 0c     ..<.'e........<.
     e38:	27 6d 14 00 fe 88 04 60 06 00 ff 00 00 6d 10 00     'm.....`.....m..
     e48:	fe 80 04 fc 00 00 fc 00 00 65 14 00 4a 88 04 60     .........e..J..`
     e58:	04 00 48 0c 47 79 10 00 fe 80 04 fc 00 00 48 0c     ..H.Gy........H.
     e68:	47 fd 00 00 fe 88 04 60 06 00 ff 00 00 fd 00 00     G......`........
     e78:	fe 80 04 fc 00 00 fc 00 00 fd 00 00 fe 88 04 60     ...............`
     e88:	02 00 48 0c 47 fd 80 01 fe 80 04 fc 00 00 ff 00     ..H.G...........
     e98:	00 fd 80 01 fe 80 04 60 06 00 fc 00 00 fd 80 01     .......`........
     ea8:	fe 88 04 fc 00 00 44 0c 58 fd 80 01 fe 80 04 60     ......D.X......`
     eb8:	04 00 ff 00 00 fd 80 01 fe 80 04 fc 00 00 fc 00     ................
     ec8:	00 fd 80 01 fe 88 04 60 06 00 48 0c 47 fd 80 01     .......`..H.G...
     ed8:	fe 80 04 fc 00 00 ff 00 00 fd 80 01 46 88 04 60     ............F..`
     ee8:	02 00 44 0c 58 74 d0 0f fe 80 04 fc 00 00 44 0c     ..D.Xt........D.
     ef8:	58 fd 00 00 fe 88 04 60 06 00 ff 00 00 fd 80 02     X......`........
     f08:	fe 80 04 fc 00 00 fc 00 00 fd 80 02 36 88 04 60     ............6..`
     f18:	04 00 34 0c 47 65 10 00 fe 80 04 fc 00 00 34 0c     ..4.Ge........4.
     f28:	47 fd 00 00 fe 88 04 60 06 00 ff 00 00 fd 00 00     G......`........
     f38:	fe 80 04 fc 00 00 fc 00 00 fd 00 00 fe 88 04 60     ...............`
     f48:	02 00 34 0c 47 fd 80 01 fe 80 04 fc 00 00 ff 00     ..4.G...........
     f58:	00 fd 80 01 fe 80 04 60 06 00 fc 00 00 fd 80 01     .......`........
     f68:	fe 88 04 fc 00 00 34 0c 57 fd 80 01 fe 80 04 60     ......4.W......`
     f78:	04 00 ff 00 00 fd 80 01 fe 80 04 fc 00 00 fc 00     ................
     f88:	00 fd 80 01 fe 88 04 60 06 00 34 0c 47 fd 80 01     .......`..4.G...
     f98:	fe 80 04 fc 00 00 ff 00 00 fd 80 01 2a 88 04 60     ............*..`
     fa8:	02 00 34 0c 57 79 10 00 fe 80 04 fc 00 00 34 0c     ..4.Wy........4.
     fb8:	57 65 14 00 36 88 04 60 02 00 ff 00 00 75 10 00     We..6..`.....u..
     fc8:	fe 80 04 fc 00 00 fc 00 00 79 14 00 31 08 a2 60     .........y..1..`
     fd8:	04 00 60 0c 37 fc 00 00 fd 00 00 fc 00 00 60 0a     ..`.7.........`.
     fe8:	37 fc 00 00 61 08 00 60 06 00 60 0c 37 fc 00 00     7...a..`..`.7...
     ff8:	33 08 1e fc 00 00 60 12 37 fc 00 00 31 08 00 60     3.....`.7...1..`
    1008:	02 00 60 0c 37 fc 00 00 fd 80 01 fc 00 00 60 0a     ..`.7.........`.
    1018:	37 fc 00 00 63 08 1e 60 06 00 60 12 37 fc 00 00     7...c..`..`.7...
    1028:	4d 08 00 fc 00 00 60 12 37 fc 00 00 fd 80 01 60     M.....`.7......`
    1038:	04 00 60 0c 37 fc 00 00 33 08 1e fc 00 00 60 0a     ..`.7...3.....`.
    1048:	37 fc 00 00 59 08 00 60 06 00 60 0c 37 fc 00 00     7...Y..`..`.7...
    1058:	fd 80 01 fc 00 00 60 12 37 fc 00 00 fd 80 01 60     ......`.7......`
    1068:	02 00 60 0c 27 fc 00 00 4f 08 1e fc 00 00 60 0a     ..`.'...O.....`.
    1078:	27 fc 00 00 4c 08 00 60 06 00 60 12 27 fc 00 00     '...L..`..`.'...
    1088:	5b 08 1e fc 00 00 60 12 27 fc 00 00 31 08 a2 60     [.....`.'...1..`
    1098:	04 00 60 0c 37 fc 00 00 fd 00 00 fc 00 00 60 0a     ..`.7.........`.
    10a8:	37 fc 00 00 61 08 00 60 06 00 60 0c 37 fc 00 00     7...a..`..`.7...
    10b8:	33 08 1e fc 00 00 60 12 37 fc 00 00 31 08 00 60     3.....`.7...1..`
    10c8:	02 00 60 0c 37 fc 00 00 fd 80 01 fc 00 00 60 0a     ..`.7.........`.
    10d8:	37 fc 00 00 63 08 1e 60 06 00 60 12 37 fc 00 00     7...c..`..`.7...
    10e8:	4d 08 00 fc 00 00 60 12 37 fc 00 00 fd 80 01 60     M.....`.7......`
    10f8:	04 00 60 0c 37 fc 00 00 33 08 1e fc 00 00 60 0a     ..`.7...3.....`.
    1108:	37 fc 00 00 59 08 00 60 06 00 60 0c 37 fc 00 00     7...Y..`..`.7...
    1118:	fd 80 01 fc 00 00 60 12 37 fc 00 00 fd 80 01 60     ......`.7......`
    1128:	02 00 60 0c 27 fc 00 00 4f 08 1e fc 00 00 60 0a     ..`.'...O.....`.
    1138:	27 fc 00 00 4c 08 00 60 06 00 60 12 27 fc 00 00     '...L..`..`.'...
    1148:	5b 08 1e fc 00 00 60 12 27 fc 00 00 3d 08 a2 60     [.....`.'...=..`
    1158:	04 00 6c 0c 47 fc 00 00 fd 00 00 fc 00 00 6c 0a     ..l.G.........l.
    1168:	47 fc 00 00 6d 08 00 60 06 00 6c 0c 47 fc 00 00     G...m..`..l.G...
    1178:	3f 08 1e fc 00 00 6c 12 47 fc 00 00 3d 08 00 60     ?.....l.G...=..`
    1188:	02 00 6c 0c 47 fc 00 00 fd 80 01 fc 00 00 6c 0a     ..l.G.........l.
    1198:	47 fc 00 00 6f 08 1e 60 06 00 6c 12 47 fc 00 00     G...o..`..l.G...
    11a8:	59 08 00 fc 00 00 6c 12 47 fc 00 00 fd 80 01 60     Y.....l.G......`
    11b8:	04 00 6c 0c 47 fc 00 00 3f 08 1e fc 00 00 6c 0a     ..l.G...?.....l.
    11c8:	47 fc 00 00 65 08 00 60 06 00 6c 0c 47 fc 00 00     G...e..`..l.G...
    11d8:	fd 80 01 fc 00 00 6c 12 47 fc 00 00 fd 80 01 60     ......l.G......`
    11e8:	02 00 68 0c 58 fc 00 00 5b 08 1e fc 00 00 68 0a     ..h.X...[.....h.
    11f8:	58 fc 00 00 58 08 00 60 06 00 68 12 58 fc 00 00     X...X..`..h.X...
    1208:	67 08 1e fc 00 00 68 12 58 fc 00 00 29 08 a2 60     g.....h.X...)..`
    1218:	04 00 58 0c 47 fc 00 00 fd 00 00 fc 00 00 58 0a     ..X.G.........X.
    1228:	47 fc 00 00 59 08 00 60 06 00 58 0c 47 fc 00 00     G...Y..`..X.G...
    1238:	2b 08 1e fc 00 00 58 12 47 fc 00 00 29 08 00 60     +.....X.G...)..`
    1248:	02 00 58 0c 47 fc 00 00 fd 80 01 fc 00 00 58 0a     ..X.G.........X.
    1258:	47 fc 00 00 5b 08 1e 60 06 00 58 12 47 fc 00 00     G...[..`..X.G...
    1268:	45 08 00 fc 00 00 58 12 47 fc 00 00 fd 80 01 60     E.....X.G......`
    1278:	04 00 58 0c 47 fc 00 00 2b 08 1e fc 00 00 58 0a     ..X.G...+.....X.
    1288:	47 fc 00 00 51 08 00 60 06 00 58 0c 47 fc 00 00     G...Q..`..X.G...
    1298:	fd 80 01 fc 00 00 58 12 47 fc 00 00 fd 80 01 60     ......X.G......`
    12a8:	02 00 58 0c 57 fc 00 00 47 08 1e fc 00 00 58 0a     ..X.W...G.....X.
    12b8:	57 fc 00 00 44 08 00 60 02 00 58 12 57 fc 00 00     W...D..`..X.W...
    12c8:	53 08 1e fc 00 00 58 12 57 fc 00 00 31 08 a2 63     S.....X.W...1..c
    12d8:	c4 05 fc 00 00 fc 00 00 fd 00 00 fc 00 00 fc 00     ................
    12e8:	00 fc 00 00 61 08 00 60 06 00 fc 00 00 fc 00 00     ....a..`........
    12f8:	33 08 1e fc 00 00 fc 00 00 fc 00 00 31 08 00 60     3...........1..`
    1308:	02 00 fc 00 00 fc 00 00 fd 80 01 fc 00 00 fc 00     ................
    1318:	00 fc 00 00 63 08 1e 60 06 00 fc 00 00 fc 00 00     ....c..`........
    1328:	4d 08 00 63 86 92 fc 00 00 fc 00 00 fd 80 01 60     M..c...........`
    1338:	04 00 fc 00 00 fc 00 00 33 08 1e fc 00 00 fc 00     ........3.......
    1348:	00 fc 00 00 58 88 0a 60 02 00 fc 00 00 fc 00 00     ....X..`........
    1358:	fc 80 0a fc 00 00 fc 00 00 fc 00 00 fc 80 0a 60     ...............`
    1368:	04 00 fc 00 00 fc 00 00 fc 80 0a fc 00 00 fc 00     ................
    1378:	00 fc 00 00 fc 80 0a 62 82 0a fc 00 00 fc 00 00     .......b........
    1388:	fc 80 0a 63 82 94 ff 40 00 fc 00 00 fc 00 00 fc     ...c...@........
    1398:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    13a8:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    13b8:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    13c8:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    13d8:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    13e8:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    13f8:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    1408:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    1418:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    1428:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    1438:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    1448:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    1458:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    1468:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    1478:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    1488:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    1498:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    14a8:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    14b8:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    14c8:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    14d8:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    14e8:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    14f8:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    1508:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    1518:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    1528:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    1538:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    1548:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    1558:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    1568:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    1578:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    1588:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    1598:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc     ................
    15a8:	00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00     ................
    15b8:	00 fc 00 00 fc 00 00 fc 00 00 fc 00 00 fc 00 00     ................
    15c8:	fc 00 00 fc 00 00 fc 00 00 fc 00 00 31 08 a2 60     ............1..`
    15d8:	04 00 60 0c 37 fc 00 00 fd 00 00 fc 00 00 60 0a     ..`.7.........`.
    15e8:	37 fc 00 00 61 08 00 60 06 00 60 0c 37 fc 00 00     7...a..`..`.7...
    15f8:	33 08 1e fc 00 00 60 12 37 fc 00 00 31 08 00 60     3.....`.7...1..`
    1608:	02 00 60 0c 37 fc 00 00 fd 80 01 fc 00 00 60 0a     ..`.7.........`.
    1618:	37 fc 00 00 63 08 1e 60 06 00 60 12 37 fc 00 00     7...c..`..`.7...
    1628:	4d 08 00 fc 00 00 60 12 37 fc 00 00 fd 80 01 60     M.....`.7......`
    1638:	04 00 60 0c 37 fc 00 00 33 08 1e fc 00 00 60 0a     ..`.7...3.....`.
    1648:	37 fc 00 00 59 08 00 60 06 00 60 0c 37 fc 00 00     7...Y..`..`.7...
    1658:	fd 80 01 fc 00 00 60 12 37 fc 00 00 fd 80 01 60     ......`.7......`
    1668:	02 00 60 0c 27 fc 00 00 4f 08 1e fc 00 00 60 0a     ..`.'...O.....`.
    1678:	27 fc 00 00 4c 08 00 60 06 00 60 12 27 fc 00 00     '...L..`..`.'...
    1688:	5b 08 1e fc 00 00 60 12 27 fc 00 00 31 08 a2 60     [.....`.'...1..`
    1698:	04 00 60 0c 37 fc 00 00 fd 00 00 fc 00 00 60 0a     ..`.7.........`.
    16a8:	37 fc 00 00 61 08 00 60 06 00 60 0c 37 fc 00 00     7...a..`..`.7...
    16b8:	33 08 1e fc 00 00 60 12 37 fc 00 00 31 08 00 60     3.....`.7...1..`
    16c8:	02 00 60 0c 37 fc 00 00 fd 80 01 fc 00 00 60 0a     ..`.7.........`.
    16d8:	37 fc 00 00 63 08 1e 60 06 00 60 12 37 fc 00 00     7...c..`..`.7...
    16e8:	4d 08 00 fc 00 00 60 12 37 fc 00 00 fd 80 01 60     M.....`.7......`
    16f8:	04 00 60 0c 37 fc 00 00 33 08 1e fc 00 00 60 0a     ..`.7...3.....`.
    1708:	37 fc 00 00 59 08 00 60 06 00 60 0c 37 fc 00 00     7...Y..`..`.7...
    1718:	fd 80 01 fc 00 00 60 12 37 fc 00 00 fd 80 01 60     ......`.7......`
    1728:	02 00 60 0c 27 fc 00 00 4f 08 1e fc 00 00 60 0a     ..`.'...O.....`.
    1738:	27 fc 00 00 4c 08 00 60 06 00 60 12 27 fc 00 00     '...L..`..`.'...
    1748:	5b 08 1e fc 00 00 60 12 27 fc 00 00 3d 08 a2 60     [.....`.'...=..`
    1758:	04 00 6c 0c 47 fc 00 00 fd 00 00 fc 00 00 6c 0a     ..l.G.........l.
    1768:	47 fc 00 00 6d 08 00 60 06 00 6c 0c 47 fc 00 00     G...m..`..l.G...
    1778:	3f 08 1e fc 00 00 6c 12 47 fc 00 00 3d 08 00 60     ?.....l.G...=..`
    1788:	02 00 6c 0c 47 fc 00 00 fd 80 01 fc 00 00 6c 0a     ..l.G.........l.
    1798:	47 fc 00 00 6f 08 1e 60 06 00 6c 12 47 fc 00 00     G...o..`..l.G...
    17a8:	59 08 00 fc 00 00 6c 12 47 fc 00 00 fd 80 01 60     Y.....l.G......`
    17b8:	04 00 6c 0c 47 fc 00 00 3f 08 1e fc 00 00 6c 0a     ..l.G...?.....l.
    17c8:	47 fc 00 00 65 08 00 60 06 00 6c 0c 47 fc 00 00     G...e..`..l.G...
    17d8:	fd 80 01 fc 00 00 6c 12 47 fc 00 00 fd 80 01 60     ......l.G......`
    17e8:	02 00 68 0c 58 fc 00 00 5b 08 1e fc 00 00 68 0a     ..h.X...[.....h.
    17f8:	58 fc 00 00 58 08 00 60 06 00 68 12 58 fc 00 00     X...X..`..h.X...
    1808:	67 08 1e fc 00 00 68 12 58 fc 00 00 29 08 a2 60     g.....h.X...)..`
    1818:	04 00 58 0c 47 fc 00 00 fd 00 00 fc 00 00 58 0a     ..X.G.........X.
    1828:	47 fc 00 00 59 08 00 60 06 00 58 0c 47 fc 00 00     G...Y..`..X.G...
    1838:	2b 08 1e fc 00 00 58 12 47 fc 00 00 29 08 00 60     +.....X.G...)..`
    1848:	02 00 58 0c 47 fc 00 00 fd 80 01 fc 00 00 58 0a     ..X.G.........X.
    1858:	47 fc 00 00 5b 08 1e 60 06 00 58 12 47 fc 00 00     G...[..`..X.G...
    1868:	45 08 00 63 86 94 58 12 47 fc 00 00 fd 80 01 60     E..c..X.G......`
    1878:	04 00 58 0c 47 fc 00 00 2b 08 1e fc 00 00 58 0a     ..X.G...+.....X.
    1888:	47 fc 00 00 51 08 00 60 02 00 58 0c 47 61 10 00     G...Q..`..X.Ga..
    1898:	fd 80 01 fc 00 00 58 12 47 75 14 00 fd 80 01 60     ......X.Gu.....`
    18a8:	04 00 58 0c 57 6d 10 00 47 08 1e fc 00 00 58 0a     ..X.Wm..G.....X.
    18b8:	57 7d 14 00 44 08 00 60 02 00 58 12 57 69 10 00     W}..D..`..X.Wi..
    18c8:	53 08 1e 62 c2 03 58 12 57 6d 14 00 00 00 fa f8     S..b..X.Wm......
    18d8:	fb f8 fa f4 00 fa fa fb fa f7 ff fb fe fe fa 01     ................
    18e8:	fb fe fd f4 f4 d5 ac 6b 3d ae cb cd cd 6b da 93     .......k=....k..
    18f8:	5a 6b 1f 93 fa 6b 6b 6b dd 2c 64 39 9a e0 6b 6b     Zk...kkk.,d9..kk
    1908:	43 fd 01 48 3d c7 d2 da 32 44 d3 fa 35 f3 fb bc     C..H=...2D..5...
    1918:	d5 3b 13 93 97 93 c8 3b b7 93 de 01 93 93 6b 6b     .;.....;......kk
    1928:	93 4f 6b 9b 93 93 93 6b 6b 6b 93 93 a5 93 4f 6b     .Ok....kkk....Ok
    1938:	c2 93 93 6b 6b 93 93 44 29 11 f2 93 c7 6b 6b ec     ...kk..D)....kk.
    1948:	93 94 6b 6b 2c a5 bc 64 6b 6b 37 4f c0 6b 6b 6b     ..kk,..dkk7O.kkk
    1958:	2a 25 5c 6b 6b 40 6b 25 6b 66 4f 6b 6b 0b 5c 22     *%\kk@k%kfOkk.\"
    1968:	6b 35 58 1a e5 52 58 25 2a e1 53 f0 cc 51 2c ef     k5X..RX%*.S..Q,.
    1978:	22 d1 cb 93 f7 0c eb 33 d6 93 93 93 93 1b ad c6     "......3........
    1988:	93 dc 98 93 93 93 93 93 93 93 93 93 93 93 93 93     ................
    1998:	93 93 93 93 93 93 93 93 93 93 93 93 93 93 93 93     ................
    19a8:	93 93 a7 a9 bd 09 bc ca 13 c7 e7 2d fb 14 0f 0d     ...........-....
    19b8:	3d 6b 43 39 5e 6b 6b 67 6b 6b 6b 6b 6b 6b 6b 6b     =kC9^kkgkkkkkkkk
    19c8:	6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b     kkkkkkkkkkkkkkkk
    19d8:	6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 4e     kkkkkkkkkkkkkkkN
    19e8:	6b 44 6b 4f 44 5a 55 1d 3e 1d 1d e9 e2 1d e3 cf     kDkODZU.>.......
    19f8:	01 93 eb 9e aa d2 93 93 b4 93 93 93 ac 93 93 93     ................
    1a08:	93 93 93 93 93 93 93 93 93 93 93 93 93 93 93 93     ................
    1a18:	93 93 93 93 93 93 93 93 93 93 93 93 93 93 93 93     ................
    1a28:	93 93 93 aa 93 93 9f a9 93 bc ad b0 93 a7 a1 16     ................
    1a38:	93 00 a1 0c b6 f2 05 11 bf 26 c7 13 26 3c 30 12     .........&..&<0.
    1a48:	c2 e4 6b 6b 00 5a ec 38 44 6b 6b 3e 5e 28 2d 6b     ..kk.Z.8Dkk>^(-k
    1a58:	6b 6b 6b 5d 6b 52 6b 6b 67 6b 6b 61 6b 58 6b 6b     kkk]kRkkgkkakXkk
    1a68:	6b 6b 6b 58 6b 6b 6b 67 5d 6b 6b 5d 6b 6b 6b 48     kkkXkkkg]kk]kkkH
    1a78:	38 6b 6b 6b 6b 6b 51 33 6b 43 1f 6b 6b f4 6b 60     8kkkkkQ3kC.kk.k`
    1a88:	ed 46 5d 55 6b e1 38 05 e9 6b 46 e2 ff f3 ef 1d     .F]Uk.8..kF.....
    1a98:	05 51 32 dc 0b e0 de 12 30 93 d8 0c 4f de d5 ae     .Q2.....0...O...
    1aa8:	d9 00 ca f4 05 f0 93 05 f2 de ed cc 04 e2 12 9f     ................
    1ab8:	ed 1c 30 eb 0c fe 93 11 c2 4d 05 05 08 e2 fb 11     ..0......M......
    1ac8:	d3 f6 44 05 fb bc de fd d8 44 dd a3 e5 d5 13 ef     ..D......D......
    1ad8:	93 f4 ef b0 93 a2 94 cb a3 b6 93 ce 93 93 e9 97     ................
    1ae8:	93 93 93 b0 93 a5 93 93 93 93 93 93 b7 93 93 93     ................
    1af8:	93 93 93 93 93 93 93 93 93 93 93 93 93 93 93 93     ................
    1b08:	93 93 93 93 93 ac 93 93 93 93 bc 93 93 a7 93 9f     ................
    1b18:	aa eb 93 b1 0b 9e ce f7 c7 07 14 c8 14 5e 1b f7     .............^..
    1b28:	18 4b 25 37 48 3f 6b 2a 6b 6b 6b 6b 2d 6b 6b 6b     .K%7H?k*kkkk-kkk
    1b38:	6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b     kkkkkkkkkkkkkkkk
    1b48:	6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b     kkkkkkkkkkkkkkkk
    1b58:	6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b 6b     kkkkkkkkkkkkkkkk
    1b68:	4e 63 6b 68 6b 37 6b 6b 08 2e 6b 60 05 34 48 3b     Nckhk7kk..k`.4H;
    1b78:	39 39 22 07 1b 48 05 33 2e fe 21 16 22 ff 3c 0f     99"..H.3..!.".<.
    1b88:	ef 01 32 3e ed 13 22 07 0b 3d f7 0d 14 14 0b 23     ..2>.."..=.....#
    1b98:	12 1a 2a fb 1b 1c 1a 0f 1d 08 0d e2 43 1a 11 00     ..*.........C...
    1ba8:	ed ef 22 1c da fb f3 f6 ef e9 ce e9 13 ef cc d9     ..".............
    1bb8:	e3 d1 b5 c0 bd e0 bc e4 b6 93 bf d9 a5 c6 a9 94     ................
    1bc8:	b0 b1 9f 93 a1 ad 94 94 ad a2 ae b2 93 93 9b 93     ................
    1bd8:	97 93 b2 9a 9b 93 93 93 9c 9c 93 93 93 9a 93 bc     ................
    1be8:	93 93 a1 93 98 b5 93 93 93 a3 b0 94 93 93 a6 93     ................
    1bf8:	9f 98 93 b9 93 93 bc 9f 93 9b 93 ae 9e 93 93 b7     ................
    1c08:	93 bc a9 93 93 a6 cf 9f 93 bc a5 93 ac b4 b8 a6     ................
    1c18:	bd 9f d9 d7 bb a7 b9 ae c6 e9 e7 c4 d9 ed c7 d5     ................
    1c28:	cd eb 02 fb f0 bb 02 12 e9 fe 1e ef 1a 23 00 09     .............#..
    1c38:	28 39 17 11 4f 4d 4b 38 2a 49 6b 4b 44 6b 4a 3e     (9..OMK8*IkKDkJ>
    1c48:	58 6b 6b 6b 60 5a 6b 6b 6b 67 55 6b 6b 65 6b 6b     Xkkk`ZkkkgUkkekk
    1c58:	6b 6b 6b 6b 6b 6b 6b 69 6b 6b 6b 6b 6b 53 61 6b     kkkkkkkikkkkkSak
    1c68:	6b 6b 6b 56 66 6b 6b 55 6b 68 55 5d 6b 6b 49 38     kkkVfkkUkhU]kkI8
    1c78:	53 4d 29 60 4f 35 0c 48 40 34 26 f2 2c 29 07 11     SM)`O5.H@4&.,)..
    1c88:	28 4a eb f0 38 fa 3c 08 d6 23 1c d9 18 ff 09 02     (J..8.<..#......
    1c98:	e5 e8 2d 21 f2 c3 e1 00 07 ec f4 eb f8 e0 07 f4     ..-!............
    1ca8:	fa cd de ed e8 fe d2 ec e0 e1 10 f0 de d2 c8 ef     ................
    1cb8:	fa ef da ce de f2 fe d3 c7 f4 e5 18 e2 a2 f0 37     ...............7
    1cc8:	e3 b8 00 f3 13 ef ed f7 fd e3 fb fe d5 08 01 00     ................
    1cd8:	11 08 02 f2 f4 05 e3 05 2d f2 e4 27 ec 12 13 d2     ........-..'....
    1ce8:	f6 30 fd dd e8 0d ff 0b eb 0b e4 00 f2 fd e2 02     .0..............
    1cf8:	11 ed ca d7 fd 08 f8 bc f4 e5 e8 f4 d2 d1 dd ef     ................
    1d08:	c1 d6 d1 de a7 cb cd ce c3 ae b2 c8 b9 b4 c6 b5     ................
    1d18:	b0 c2 96 9c c7 b0 ad cd 93 bf b1 a7 93 a7 e3 a7     ................
    1d28:	a5 a7 c3 9c b6 d3 c0 b0 00 00 00 00 fc 30 3e 00     .............0>.
    1d38:	a5 d6 30 21 e8 b1 ca 0d 50 4a 3a 00 e5 e4 cb 16     ..0!....PJ:.....
    1d48:	18 e5 c4 ca 1e ac b0 fc fc 72 29 8c 4b 30 32 13     .........r).K02.
    1d58:	8c 96 8c 4a 4b 30 4b 8c 57 99 fc cb 8c 72 32 a9     ...JK0K.W....r2.
    1d68:	57 b1 8c 30 72 8c ca 72 d8 94 63 72 99 8c ca 72     W..0r..r..cr...r
    1d78:	18 99 fc 72 72 99 8c fc 72 72 32 8c 8c fc 72 72     ...rr...rr2...rr
    1d88:	72 8c 8c fc 72 72 72 00 8c 8c 8c 8c bc 30 5a 72     r...rrr......0Zr
    1d98:	3e 99 8c bc 63 72 72 05 99 8c 96 fc 50 4a 58 46     >...crr.....PJXF
    1da8:	25 3e 00 eb c3 8c 8c 8c fc 63 72 72 65 35 d2 8c     %>.......crre5..
    1db8:	8c 8c 8c ca f0 25 18 0b e9 8c a4 a4 dd 18 b8 8c     .....%..........
    1dc8:	8c 8c 8c 8c 96 0a 30 4a 50 72 6f 18 00 bc e9 b7     ......0JPro.....
    1dd8:	de fb c1 c9 a8 e5 d6 15 5d 72 72 72 68 72 72 72     ........]rrrhrrr
    1de8:	5f 20 28 32 f0 f9 03 15 1d 02 12 25 3d 51 72 72     _ (2.......%=Qrr
    1df8:	72 72 72 72 72 72 72 72 72 72 72 65 4b 1e f7 ee     rrrrrrrrrrreK...
    1e08:	05 fc ee dc d8 e0 fc 05 0a de f7 fc 30 0b 00 e4     ............0...
    1e18:	f1 e8 e4 00 18 ee eb fc de d1 8c 8c 8c 8c 8c 8c     ................
    1e28:	8c 8c 8c 8c 8c 8c 8c 8c 8c 94 8c 8c 8c 8c 8c 99     ................
    1e38:	a4 bc a9 a8 b9 b6 b8 af af 96 a2 a2 8c 8c 8c 8e     ................
    1e48:	8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c a6 a4 b1 ca d6     ................
    1e58:	d8 06 fc 21 29 28 4d 53 63 70 72 72 72 72 72 72     ...!)(MScprrrrrr
    1e68:	72 72 72 72 72 72 72 72 72 72 72 72 72 72 72 72     rrrrrrrrrrrrrrrr
    1e78:	72 72 72 72 72 72 72 72 72 72 72 72 72 72 72 72     rrrrrrrrrrrrrrrr
    1e88:	72 70 72 72 72 72 65 72 6b 72 6c 63 6f 70 65 5d     rprrrrerkrlcope]
    1e98:	3b 48 46 43 3a 28 25 2f 0a 18 10 f1 00 00 ee db     ;HFC:(%/........
    1ea8:	e8 bf d8 c1 bb b1 b1 a4 9e 99 9f 8c 8c 8c 8c 8c     ................
    1eb8:	8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c     ................
    1ec8:	8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c     ................
    1ed8:	8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c     ................
    1ee8:	8c 8c 8c 8c 8c 8c 8c 8c 8c 96 99 96 ac ca c6 d3     ................
    1ef8:	e0 e5 f3 0d 15 1d 37 2b 46 4b 62 63 63 72 72 72     ......7+FKbccrrr
    1f08:	72 72 72 72 72 72 72 72 72 72 72 72 72 72 72 72     rrrrrrrrrrrrrrrr
    1f18:	72 72 72 72 72 72 72 72 72 72 72 72 72 72 72 72     rrrrrrrrrrrrrrrr
    1f28:	72 72 72 72 72 72 72 72 72 72 72 72 72 72 72 72     rrrrrrrrrrrrrrrr
    1f38:	72 72 72 72 72 72 72 72 72 72 72 72 6a 60 67 50     rrrrrrrrrrrrj`gP
    1f48:	51 4d 38 35 35 20 20 0e 0b 00 f9 eb eb d5 d3 ca     QM855  .........
    1f58:	c9 b9 c1 b7 b1 a2 9e 96 8c 94 91 91 8c 8c 8c 8c     ................
    1f68:	8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c     ................
    1f78:	8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c     ................
    1f88:	8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c     ................
    1f98:	8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c 8c     ................
    1fa8:	8c 8c 8c 8c 8e 96 94 9e a4 a8 af b6 00 00 00 ff     ................
    1fb8:	00 00 00 00 00 fe 00 ef 08 fe de 2a e3 20 d2 13     ...........*. ..
    1fc8:	15 00 d8 13 f3 20 f5 fa 00 f3 19 f1 00 13 d8 20     ..... ......... 
    1fd8:	0b f3 00 fe 00 dc 5a 99 5a 00 b5 36 00 fe e9 0b     ......Z.Z..6....
    1fe8:	ed 34 c6 4b b0 41 de e2 65 9b 43 d1 2d dc 21 d5     .4.K.A..e.C.-.!.
    1ff8:	13 f8 0b f3 21 f3 d6 47 c7 4f c1 09 09 21 d1 0b     ....!..G.O...!..
    2008:	fe 0b fe e9 20 00 da fe 33 d2 27 cb 32 e7 00 fe     .... ...3.'.2...
    2018:	2d ed c6 52 e9 2b de dc 17 16 00 dc 16 03 ea de     -..R.+..........
    2028:	2b e9 1c bc 52 e9 fc fe 00 fe 16 ba 5c c0 03 03     +...R.......\...
    2038:	fe 2d c6 02 2b 00 dc 21 f3 0b fe cf 41 e9 00 de     .-..+..!....A...
    2048:	25 e9 2b ab 63 d2 e0 2b 0b ea dc 14 10 03 d8 18     %.+.c..+........
    2058:	e4 32 d8 fe 0f 16 cb 18 f8 10 06 c8 56 9e 6a d2     .2..........V.j.
    2068:	2b e3 ed 09 2d d6 e9 2b 00 fe 05 10 c1 2b 05 d1     +...-..+.....+..
    2078:	34 e0 0f 00 fe 00 09 d2 3e d2 14 00 3e a9 1e 06     4.......>...>...
    2088:	2d ce ed 21 10 de f3 10 ef 27 d2 03 03 16 d9 06     -..!.....'......
    2098:	14 00 f3 00 14 e9 fe 0b 00 f3 eb fe 16 e2 ef 03     ................
    20a8:	18 f3 f4 14 d6 43 ba 36 e9 14 fb ed 09 0b ed f1     .....C.6........
    20b8:	43 a6 20 2d d3 f1 14 00 e2 25 de 2b d2 2b e9 f8     C. -.....%.+.+..
    20c8:	1a 00 d8 fe 43 a8 fe 5a dc 00 fe 00 fe 00 f3 0b     ....C..Z........
    20d8:	fe de fe 16 e9 14 e3 fe 21 00 d2 20 10 00 b5 58     ........!.. ...X
    20e8:	e9 06 e7 fa 20 e9 fe 2d af 34 f4 fe f8 07 e7 25     .... ..-.4.....%
    20f8:	d8 20 00 fe 00 e7 10 fe 00 09 dc 34 d6 03 09 0b     . .........4....
    2108:	cb 2b e9 03 fe 03 de 0f 14 ed fe fe 00 fe e6 2b     .+.............+
    2118:	00 cb 07 36 e9 f3 f1 09 1c de dc 5a b1 22 fc 00     ...6.......Z."..
    2128:	e7 10 13 d6 fe 27 e9 ed 2b d2 20 00 fe fe de 2b     .....'..+. ....+
    2138:	de 14 00 f3 fa 30 b3 2b e9 22 d6 27 de 1a f4 0b     .....0.+.".'....
    2148:	da 20 00 ed 36 b1 3d e2 16 d3 2b fc e0 fe 0b f3     . ..6.=...+.....
    2158:	16 e7 0b e7 3a de e9 20 eb 14 de 2b d2 22 fa d6     ....:.. ...+."..
    2168:	34 e0 fe 00 1a de fe 16 e3 0b fc fe fa 27 cb fe     4............'..
    2178:	27 f4 f4 fe f1 2f d9 17 de 07 20 e3 f8 21 f4 fe     '..../.... ..!..
    2188:	f1 09 0b f3 00 00 00 00 ac ac a7 a7 a4 a4 a4 a4     ................
    2198:	a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4     ................
    21a8:	a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4     ................
    21b8:	a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4 a4     ................
    21c8:	a4 a4 4f 4f 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 5a     ..OOZZZZZZZZZZZZ
    21d8:	5a 5a 5a 5a 5a 5a 5a 5a 5a 5a 55 55 4f 4f 4b 4b     ZZZZZZZZZZUUOOKK
    21e8:	46 46 41 41 3c 3c 36 36 31 31 2b 2b 26 26 20 20     FFAA<<6611++&&  
    21f8:	1a 1a 14 14 0f 0f 0a 0a 05 05 00 00 fa fa f5 f5     ................
    2208:	00 00 00 00 00 0b 18 1b 17 fe e3 07 3a 1b e5 ed     ............:...
    2218:	00 ff fc fd fc f3 e6 ec f5 06 16 06 ec 04 25 0f     ..............%.
    2228:	ed 08 31 17 ee 00 21 0d 00 00 00 00 d3 d3 d0 d0     ..1...!.........
    2238:	cf cf ce ce ce ce ce ce ce ce ce ce ce ce ce ce     ................
    2248:	ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce     ................
    2258:	ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce ce     ................
    2268:	ce ce ce ce ce ce 2a 2a 00 00 9c 36 f4 9a cc 9a     ......**...6....
    2278:	9c 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a     ................
    2288:	9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a     ................
    2298:	9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a     ................
    22a8:	9c 9c ca b0 44 ee 00 fe 00 00 00 00 00 03 07 08     ....D...........
    22b8:	06 ff f7 02 11 08 f7 fa 00 ff fe ff fe fc f8 fa     ................
    22c8:	fc 01 06 01 fa 01 0b 04 fa 02 0e 06 fa 00 09 03     ................
    22d8:	00 00 d8 15 fb d7 eb d7 d8 d7 d7 d7 d7 d7 d7 d7     ................
    22e8:	d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7     ................
    22f8:	d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7 d7     ................
    2308:	d7 d7 d7 d7 d7 d7 d7 d7 d8 d8 ea e0 1b f8 00 ff     ................

00002318 <__ctors_end>:
    2318:	11 24       	eor	r1, r1
    231a:	1f be       	out	0x3f, r1	; 63
    231c:	cf ef       	ldi	r28, 0xFF	; 255
    231e:	d8 e0       	ldi	r29, 0x08	; 8
    2320:	de bf       	out	0x3e, r29	; 62
    2322:	cd bf       	out	0x3d, r28	; 61

00002324 <__do_copy_data>:
    2324:	11 e0       	ldi	r17, 0x01	; 1
    2326:	a0 e0       	ldi	r26, 0x00	; 0
    2328:	b1 e0       	ldi	r27, 0x01	; 1
    232a:	e0 ed       	ldi	r30, 0xD0	; 208
    232c:	f8 e3       	ldi	r31, 0x38	; 56
    232e:	02 c0       	rjmp	.+4      	; 0x2334 <__do_copy_data+0x10>
    2330:	05 90       	lpm	r0, Z+
    2332:	0d 92       	st	X+, r0
    2334:	ae 39       	cpi	r26, 0x9E	; 158
    2336:	b1 07       	cpc	r27, r17
    2338:	d9 f7       	brne	.-10     	; 0x2330 <__do_copy_data+0xc>

0000233a <__do_clear_bss>:
    233a:	15 e0       	ldi	r17, 0x05	; 5
    233c:	ae e9       	ldi	r26, 0x9E	; 158
    233e:	b1 e0       	ldi	r27, 0x01	; 1
    2340:	01 c0       	rjmp	.+2      	; 0x2344 <.do_clear_bss_start>

00002342 <.do_clear_bss_loop>:
    2342:	1d 92       	st	X+, r1

00002344 <.do_clear_bss_start>:
    2344:	a6 3a       	cpi	r26, 0xA6	; 166
    2346:	b1 07       	cpc	r27, r17
    2348:	e1 f7       	brne	.-8      	; 0x2342 <.do_clear_bss_loop>
    234a:	0e 94 47 1c 	call	0x388e	; 0x388e <main>
    234e:	0c 94 66 1c 	jmp	0x38cc	; 0x38cc <_exit>

00002352 <__bad_interrupt>:
    2352:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00002356 <readsongbyte>:
volatile u16 ticktimer;

#include "effects.h"

inline u8 readsongbyte(u16 offset)
{
    2356:	1f 93       	push	r17
    2358:	df 93       	push	r29
    235a:	cf 93       	push	r28
    235c:	00 d0       	rcall	.+0      	; 0x235e <readsongbyte+0x8>
    235e:	00 d0       	rcall	.+0      	; 0x2360 <readsongbyte+0xa>
    2360:	0f 92       	push	r0
    2362:	cd b7       	in	r28, 0x3d	; 61
    2364:	de b7       	in	r29, 0x3e	; 62
    2366:	9d 83       	std	Y+5, r25	; 0x05
    2368:	8c 83       	std	Y+4, r24	; 0x04
	return pgm_read_byte_near(&songdata[0] + offset);
    236a:	8c 81       	ldd	r24, Y+4	; 0x04
    236c:	9d 81       	ldd	r25, Y+5	; 0x05
    236e:	88 59       	subi	r24, 0x98	; 152
    2370:	9f 4f       	sbci	r25, 0xFF	; 255
    2372:	9a 83       	std	Y+2, r25	; 0x02
    2374:	89 83       	std	Y+1, r24	; 0x01
    2376:	89 81       	ldd	r24, Y+1	; 0x01
    2378:	9a 81       	ldd	r25, Y+2	; 0x02
    237a:	fc 01       	movw	r30, r24
    237c:	14 91       	lpm	r17, Z+
    237e:	1b 83       	std	Y+3, r17	; 0x03
    2380:	8b 81       	ldd	r24, Y+3	; 0x03
}
    2382:	0f 90       	pop	r0
    2384:	0f 90       	pop	r0
    2386:	0f 90       	pop	r0
    2388:	0f 90       	pop	r0
    238a:	0f 90       	pop	r0
    238c:	cf 91       	pop	r28
    238e:	df 91       	pop	r29
    2390:	1f 91       	pop	r17
    2392:	08 95       	ret

00002394 <readsongbytesigned>:

inline s8 readsongbytesigned(u16 offset)
{
    2394:	1f 93       	push	r17
    2396:	df 93       	push	r29
    2398:	cf 93       	push	r28
    239a:	00 d0       	rcall	.+0      	; 0x239c <readsongbytesigned+0x8>
    239c:	00 d0       	rcall	.+0      	; 0x239e <readsongbytesigned+0xa>
    239e:	0f 92       	push	r0
    23a0:	cd b7       	in	r28, 0x3d	; 61
    23a2:	de b7       	in	r29, 0x3e	; 62
    23a4:	9d 83       	std	Y+5, r25	; 0x05
    23a6:	8c 83       	std	Y+4, r24	; 0x04
	return (s8)pgm_read_byte_near(&songdata[0] + offset);
    23a8:	8c 81       	ldd	r24, Y+4	; 0x04
    23aa:	9d 81       	ldd	r25, Y+5	; 0x05
    23ac:	88 59       	subi	r24, 0x98	; 152
    23ae:	9f 4f       	sbci	r25, 0xFF	; 255
    23b0:	9a 83       	std	Y+2, r25	; 0x02
    23b2:	89 83       	std	Y+1, r24	; 0x01
    23b4:	89 81       	ldd	r24, Y+1	; 0x01
    23b6:	9a 81       	ldd	r25, Y+2	; 0x02
    23b8:	fc 01       	movw	r30, r24
    23ba:	14 91       	lpm	r17, Z+
    23bc:	1b 83       	std	Y+3, r17	; 0x03
    23be:	8b 81       	ldd	r24, Y+3	; 0x03
}
    23c0:	0f 90       	pop	r0
    23c2:	0f 90       	pop	r0
    23c4:	0f 90       	pop	r0
    23c6:	0f 90       	pop	r0
    23c8:	0f 90       	pop	r0
    23ca:	cf 91       	pop	r28
    23cc:	df 91       	pop	r29
    23ce:	1f 91       	pop	r17
    23d0:	08 95       	ret

000023d2 <readsongword>:

inline u16 readsongword(u16 offset)
{
    23d2:	ef 92       	push	r14
    23d4:	ff 92       	push	r15
    23d6:	0f 93       	push	r16
    23d8:	1f 93       	push	r17
    23da:	df 93       	push	r29
    23dc:	cf 93       	push	r28
    23de:	00 d0       	rcall	.+0      	; 0x23e0 <readsongword+0xe>
    23e0:	00 d0       	rcall	.+0      	; 0x23e2 <readsongword+0x10>
    23e2:	00 d0       	rcall	.+0      	; 0x23e4 <readsongword+0x12>
    23e4:	cd b7       	in	r28, 0x3d	; 61
    23e6:	de b7       	in	r29, 0x3e	; 62
    23e8:	9e 83       	std	Y+6, r25	; 0x06
    23ea:	8d 83       	std	Y+5, r24	; 0x05
	return pgm_read_word_near(&songdata[0] + offset);
    23ec:	8d 81       	ldd	r24, Y+5	; 0x05
    23ee:	9e 81       	ldd	r25, Y+6	; 0x06
    23f0:	88 59       	subi	r24, 0x98	; 152
    23f2:	9f 4f       	sbci	r25, 0xFF	; 255
    23f4:	9a 83       	std	Y+2, r25	; 0x02
    23f6:	89 83       	std	Y+1, r24	; 0x01
    23f8:	89 81       	ldd	r24, Y+1	; 0x01
    23fa:	9a 81       	ldd	r25, Y+2	; 0x02
    23fc:	8c 01       	movw	r16, r24
    23fe:	f8 01       	movw	r30, r16
    2400:	e5 90       	lpm	r14, Z+
    2402:	f4 90       	lpm	r15, Z+
    2404:	8f 01       	movw	r16, r30
    2406:	fc 82       	std	Y+4, r15	; 0x04
    2408:	eb 82       	std	Y+3, r14	; 0x03
    240a:	1a 83       	std	Y+2, r17	; 0x02
    240c:	09 83       	std	Y+1, r16	; 0x01
    240e:	8b 81       	ldd	r24, Y+3	; 0x03
    2410:	9c 81       	ldd	r25, Y+4	; 0x04
}
    2412:	26 96       	adiw	r28, 0x06	; 6
    2414:	0f b6       	in	r0, 0x3f	; 63
    2416:	f8 94       	cli
    2418:	de bf       	out	0x3e, r29	; 62
    241a:	0f be       	out	0x3f, r0	; 63
    241c:	cd bf       	out	0x3d, r28	; 61
    241e:	cf 91       	pop	r28
    2420:	df 91       	pop	r29
    2422:	1f 91       	pop	r17
    2424:	0f 91       	pop	r16
    2426:	ff 90       	pop	r15
    2428:	ef 90       	pop	r14
    242a:	08 95       	ret

0000242c <readsongblock>:

void readsongblock(u16 offset, void* dest, u16 num)
{
    242c:	0f 93       	push	r16
    242e:	1f 93       	push	r17
    2430:	df 93       	push	r29
    2432:	cf 93       	push	r28
    2434:	cd b7       	in	r28, 0x3d	; 61
    2436:	de b7       	in	r29, 0x3e	; 62
    2438:	2a 97       	sbiw	r28, 0x0a	; 10
    243a:	0f b6       	in	r0, 0x3f	; 63
    243c:	f8 94       	cli
    243e:	de bf       	out	0x3e, r29	; 62
    2440:	0f be       	out	0x3f, r0	; 63
    2442:	cd bf       	out	0x3d, r28	; 61
    2444:	9e 83       	std	Y+6, r25	; 0x06
    2446:	8d 83       	std	Y+5, r24	; 0x05
    2448:	78 87       	std	Y+8, r23	; 0x08
    244a:	6f 83       	std	Y+7, r22	; 0x07
    244c:	5a 87       	std	Y+10, r21	; 0x0a
    244e:	49 87       	std	Y+9, r20	; 0x09
	u16 n;
	u8* block;
	
	block = (u8*)dest;
    2450:	8f 81       	ldd	r24, Y+7	; 0x07
    2452:	98 85       	ldd	r25, Y+8	; 0x08
    2454:	9c 83       	std	Y+4, r25	; 0x04
    2456:	8b 83       	std	Y+3, r24	; 0x03
	for( n=0; n<num; ++n )
    2458:	1a 82       	std	Y+2, r1	; 0x02
    245a:	19 82       	std	Y+1, r1	; 0x01
    245c:	16 c0       	rjmp	.+44     	; 0x248a <readsongblock+0x5e>
	{
		block[n] = readsongbyte(offset+n);
    245e:	2b 81       	ldd	r18, Y+3	; 0x03
    2460:	3c 81       	ldd	r19, Y+4	; 0x04
    2462:	89 81       	ldd	r24, Y+1	; 0x01
    2464:	9a 81       	ldd	r25, Y+2	; 0x02
    2466:	89 01       	movw	r16, r18
    2468:	08 0f       	add	r16, r24
    246a:	19 1f       	adc	r17, r25
    246c:	2d 81       	ldd	r18, Y+5	; 0x05
    246e:	3e 81       	ldd	r19, Y+6	; 0x06
    2470:	89 81       	ldd	r24, Y+1	; 0x01
    2472:	9a 81       	ldd	r25, Y+2	; 0x02
    2474:	82 0f       	add	r24, r18
    2476:	93 1f       	adc	r25, r19
    2478:	0e 94 ab 11 	call	0x2356	; 0x2356 <readsongbyte>
    247c:	f8 01       	movw	r30, r16
    247e:	80 83       	st	Z, r24
{
	u16 n;
	u8* block;
	
	block = (u8*)dest;
	for( n=0; n<num; ++n )
    2480:	89 81       	ldd	r24, Y+1	; 0x01
    2482:	9a 81       	ldd	r25, Y+2	; 0x02
    2484:	01 96       	adiw	r24, 0x01	; 1
    2486:	9a 83       	std	Y+2, r25	; 0x02
    2488:	89 83       	std	Y+1, r24	; 0x01
    248a:	29 81       	ldd	r18, Y+1	; 0x01
    248c:	3a 81       	ldd	r19, Y+2	; 0x02
    248e:	89 85       	ldd	r24, Y+9	; 0x09
    2490:	9a 85       	ldd	r25, Y+10	; 0x0a
    2492:	28 17       	cp	r18, r24
    2494:	39 07       	cpc	r19, r25
    2496:	18 f3       	brcs	.-58     	; 0x245e <readsongblock+0x32>
	{
		block[n] = readsongbyte(offset+n);
	}
}
    2498:	2a 96       	adiw	r28, 0x0a	; 10
    249a:	0f b6       	in	r0, 0x3f	; 63
    249c:	f8 94       	cli
    249e:	de bf       	out	0x3e, r29	; 62
    24a0:	0f be       	out	0x3f, r0	; 63
    24a2:	cd bf       	out	0x3d, r28	; 61
    24a4:	cf 91       	pop	r28
    24a6:	df 91       	pop	r29
    24a8:	1f 91       	pop	r17
    24aa:	0f 91       	pop	r16
    24ac:	08 95       	ret

000024ae <havevalidsong>:

u8 havevalidsong()
{
    24ae:	df 93       	push	r29
    24b0:	cf 93       	push	r28
    24b2:	00 d0       	rcall	.+0      	; 0x24b4 <havevalidsong+0x6>
    24b4:	00 d0       	rcall	.+0      	; 0x24b6 <havevalidsong+0x8>
    24b6:	cd b7       	in	r28, 0x3d	; 61
    24b8:	de b7       	in	r29, 0x3e	; 62
	s8 sig[4];
	
	readsongblock(0, sig, 4);
    24ba:	80 e0       	ldi	r24, 0x00	; 0
    24bc:	90 e0       	ldi	r25, 0x00	; 0
    24be:	9e 01       	movw	r18, r28
    24c0:	2f 5f       	subi	r18, 0xFF	; 255
    24c2:	3f 4f       	sbci	r19, 0xFF	; 255
    24c4:	b9 01       	movw	r22, r18
    24c6:	44 e0       	ldi	r20, 0x04	; 4
    24c8:	50 e0       	ldi	r21, 0x00	; 0
    24ca:	0e 94 16 12 	call	0x242c	; 0x242c <readsongblock>
	if( (sig[0] == 'A') && (sig[1] == 'V') && (sig[2] == 'R') && (sig[3] == 'M') )
    24ce:	89 81       	ldd	r24, Y+1	; 0x01
    24d0:	81 34       	cpi	r24, 0x41	; 65
    24d2:	59 f4       	brne	.+22     	; 0x24ea <havevalidsong+0x3c>
    24d4:	8a 81       	ldd	r24, Y+2	; 0x02
    24d6:	86 35       	cpi	r24, 0x56	; 86
    24d8:	41 f4       	brne	.+16     	; 0x24ea <havevalidsong+0x3c>
    24da:	8b 81       	ldd	r24, Y+3	; 0x03
    24dc:	82 35       	cpi	r24, 0x52	; 82
    24de:	29 f4       	brne	.+10     	; 0x24ea <havevalidsong+0x3c>
    24e0:	8c 81       	ldd	r24, Y+4	; 0x04
    24e2:	8d 34       	cpi	r24, 0x4D	; 77
    24e4:	11 f4       	brne	.+4      	; 0x24ea <havevalidsong+0x3c>
	{
		return 1;
    24e6:	81 e0       	ldi	r24, 0x01	; 1
    24e8:	01 c0       	rjmp	.+2      	; 0x24ec <havevalidsong+0x3e>
	}
	
	return 0;
    24ea:	80 e0       	ldi	r24, 0x00	; 0
}
    24ec:	0f 90       	pop	r0
    24ee:	0f 90       	pop	r0
    24f0:	0f 90       	pop	r0
    24f2:	0f 90       	pop	r0
    24f4:	cf 91       	pop	r28
    24f6:	df 91       	pop	r29
    24f8:	08 95       	ret

000024fa <setpattern>:

u8 setpattern(struct pattern_s* pat, u8 n, u8 row)
{
    24fa:	df 93       	push	r29
    24fc:	cf 93       	push	r28
    24fe:	00 d0       	rcall	.+0      	; 0x2500 <setpattern+0x6>
    2500:	00 d0       	rcall	.+0      	; 0x2502 <setpattern+0x8>
    2502:	cd b7       	in	r28, 0x3d	; 61
    2504:	de b7       	in	r29, 0x3e	; 62
    2506:	9a 83       	std	Y+2, r25	; 0x02
    2508:	89 83       	std	Y+1, r24	; 0x01
    250a:	6b 83       	std	Y+3, r22	; 0x03
    250c:	4c 83       	std	Y+4, r20	; 0x04
	if(n >= sections.numpatterns)
    250e:	90 91 a3 02 	lds	r25, 0x02A3
    2512:	8b 81       	ldd	r24, Y+3	; 0x03
    2514:	89 17       	cp	r24, r25
    2516:	10 f0       	brcs	.+4      	; 0x251c <setpattern+0x22>
	{
		return 0; //false, invalid pattern
    2518:	80 e0       	ldi	r24, 0x00	; 0
    251a:	2f c0       	rjmp	.+94     	; 0x257a <setpattern+0x80>
	}
	
	pat->number = n;
    251c:	89 81       	ldd	r24, Y+1	; 0x01
    251e:	9a 81       	ldd	r25, Y+2	; 0x02
    2520:	2b 81       	ldd	r18, Y+3	; 0x03
    2522:	fc 01       	movw	r30, r24
    2524:	20 83       	st	Z, r18
	pat->offset = sections.offsetpatterns + (n*PATTERN_SIZE);
    2526:	20 91 a4 02 	lds	r18, 0x02A4
    252a:	30 91 a5 02 	lds	r19, 0x02A5
    252e:	8b 81       	ldd	r24, Y+3	; 0x03
    2530:	68 2f       	mov	r22, r24
    2532:	70 e0       	ldi	r23, 0x00	; 0
    2534:	40 e0       	ldi	r20, 0x00	; 0
    2536:	53 e0       	ldi	r21, 0x03	; 3
    2538:	64 9f       	mul	r22, r20
    253a:	c0 01       	movw	r24, r0
    253c:	65 9f       	mul	r22, r21
    253e:	90 0d       	add	r25, r0
    2540:	74 9f       	mul	r23, r20
    2542:	90 0d       	add	r25, r0
    2544:	11 24       	eor	r1, r1
    2546:	28 0f       	add	r18, r24
    2548:	39 1f       	adc	r19, r25
    254a:	89 81       	ldd	r24, Y+1	; 0x01
    254c:	9a 81       	ldd	r25, Y+2	; 0x02
    254e:	fc 01       	movw	r30, r24
    2550:	32 83       	std	Z+2, r19	; 0x02
    2552:	21 83       	std	Z+1, r18	; 0x01
	pat->index = NOTE_SIZE * PATTERN_CHANNELS * row;
    2554:	8c 81       	ldd	r24, Y+4	; 0x04
    2556:	28 2f       	mov	r18, r24
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	c9 01       	movw	r24, r18
    255c:	88 0f       	add	r24, r24
    255e:	99 1f       	adc	r25, r25
    2560:	82 0f       	add	r24, r18
    2562:	93 1f       	adc	r25, r19
    2564:	88 0f       	add	r24, r24
    2566:	99 1f       	adc	r25, r25
    2568:	88 0f       	add	r24, r24
    256a:	99 1f       	adc	r25, r25
    256c:	9c 01       	movw	r18, r24
    256e:	89 81       	ldd	r24, Y+1	; 0x01
    2570:	9a 81       	ldd	r25, Y+2	; 0x02
    2572:	fc 01       	movw	r30, r24
    2574:	34 83       	std	Z+4, r19	; 0x04
    2576:	23 83       	std	Z+3, r18	; 0x03
	
	return 1;
    2578:	81 e0       	ldi	r24, 0x01	; 1
}
    257a:	0f 90       	pop	r0
    257c:	0f 90       	pop	r0
    257e:	0f 90       	pop	r0
    2580:	0f 90       	pop	r0
    2582:	cf 91       	pop	r28
    2584:	df 91       	pop	r29
    2586:	08 95       	ret

00002588 <initmodule>:

u8 seek(u8 order, u8 row);

void initmodule()
{
    2588:	df 93       	push	r29
    258a:	cf 93       	push	r28
    258c:	00 d0       	rcall	.+0      	; 0x258e <initmodule+0x6>
    258e:	0f 92       	push	r0
    2590:	cd b7       	in	r28, 0x3d	; 61
    2592:	de b7       	in	r29, 0x3e	; 62
	u8 idx;
	u16 offset;
	
	// we gotta read the section table
	readsongblock(4, &sections, sizeof(struct sections_s));	
    2594:	2d e9       	ldi	r18, 0x9D	; 157
    2596:	32 e0       	ldi	r19, 0x02	; 2
    2598:	84 e0       	ldi	r24, 0x04	; 4
    259a:	90 e0       	ldi	r25, 0x00	; 0
    259c:	b9 01       	movw	r22, r18
    259e:	4f e0       	ldi	r20, 0x0F	; 15
    25a0:	50 e0       	ldi	r21, 0x00	; 0
    25a2:	0e 94 16 12 	call	0x242c	; 0x242c <readsongblock>
	
	// get the order table
	readsongblock(sections.offsetorders, order, sections.numorders * sizeof(u8));
    25a6:	80 91 a1 02 	lds	r24, 0x02A1
    25aa:	90 91 a2 02 	lds	r25, 0x02A2
    25ae:	20 91 a0 02 	lds	r18, 0x02A0
    25b2:	22 2f       	mov	r18, r18
    25b4:	30 e0       	ldi	r19, 0x00	; 0
    25b6:	4d ed       	ldi	r20, 0xDD	; 221
    25b8:	52 e0       	ldi	r21, 0x02	; 2
    25ba:	ba 01       	movw	r22, r20
    25bc:	a9 01       	movw	r20, r18
    25be:	0e 94 16 12 	call	0x242c	; 0x242c <readsongblock>
	
	// get the instruments
	readsongblock(sections.offsetinsts, inst, sections.numinsts * sizeof(struct inst_s));
    25c2:	80 91 9e 02 	lds	r24, 0x029E
    25c6:	90 91 9f 02 	lds	r25, 0x029F
    25ca:	20 91 9d 02 	lds	r18, 0x029D
    25ce:	22 2f       	mov	r18, r18
    25d0:	30 e0       	ldi	r19, 0x00	; 0
    25d2:	22 0f       	add	r18, r18
    25d4:	33 1f       	adc	r19, r19
    25d6:	22 0f       	add	r18, r18
    25d8:	33 1f       	adc	r19, r19
    25da:	22 0f       	add	r18, r18
    25dc:	33 1f       	adc	r19, r19
    25de:	4e e9       	ldi	r20, 0x9E	; 158
    25e0:	51 e0       	ldi	r21, 0x01	; 1
    25e2:	ba 01       	movw	r22, r20
    25e4:	a9 01       	movw	r20, r18
    25e6:	0e 94 16 12 	call	0x242c	; 0x242c <readsongblock>
	
	// generate a table for sample offsets
	offset = sections.offsetsamples;
    25ea:	80 91 a7 02 	lds	r24, 0x02A7
    25ee:	90 91 a8 02 	lds	r25, 0x02A8
    25f2:	9b 83       	std	Y+3, r25	; 0x03
    25f4:	8a 83       	std	Y+2, r24	; 0x02
	for( idx=0; idx<sections.numinsts; ++idx )
    25f6:	19 82       	std	Y+1, r1	; 0x01
    25f8:	25 c0       	rjmp	.+74     	; 0x2644 <initmodule+0xbc>
	{
		sample[idx] = offset;
    25fa:	89 81       	ldd	r24, Y+1	; 0x01
    25fc:	88 2f       	mov	r24, r24
    25fe:	90 e0       	ldi	r25, 0x00	; 0
    2600:	88 0f       	add	r24, r24
    2602:	99 1f       	adc	r25, r25
    2604:	88 59       	subi	r24, 0x98	; 152
    2606:	9a 4f       	sbci	r25, 0xFA	; 250
    2608:	2a 81       	ldd	r18, Y+2	; 0x02
    260a:	3b 81       	ldd	r19, Y+3	; 0x03
    260c:	fc 01       	movw	r30, r24
    260e:	31 83       	std	Z+1, r19	; 0x01
    2610:	20 83       	st	Z, r18
		offset += (inst[idx].length<<1); //*2
    2612:	89 81       	ldd	r24, Y+1	; 0x01
    2614:	88 2f       	mov	r24, r24
    2616:	90 e0       	ldi	r25, 0x00	; 0
    2618:	88 0f       	add	r24, r24
    261a:	99 1f       	adc	r25, r25
    261c:	88 0f       	add	r24, r24
    261e:	99 1f       	adc	r25, r25
    2620:	88 0f       	add	r24, r24
    2622:	99 1f       	adc	r25, r25
    2624:	82 56       	subi	r24, 0x62	; 98
    2626:	9e 4f       	sbci	r25, 0xFE	; 254
    2628:	fc 01       	movw	r30, r24
    262a:	80 81       	ld	r24, Z
    262c:	91 81       	ldd	r25, Z+1	; 0x01
    262e:	88 0f       	add	r24, r24
    2630:	99 1f       	adc	r25, r25
    2632:	2a 81       	ldd	r18, Y+2	; 0x02
    2634:	3b 81       	ldd	r19, Y+3	; 0x03
    2636:	82 0f       	add	r24, r18
    2638:	93 1f       	adc	r25, r19
    263a:	9b 83       	std	Y+3, r25	; 0x03
    263c:	8a 83       	std	Y+2, r24	; 0x02
	// get the instruments
	readsongblock(sections.offsetinsts, inst, sections.numinsts * sizeof(struct inst_s));
	
	// generate a table for sample offsets
	offset = sections.offsetsamples;
	for( idx=0; idx<sections.numinsts; ++idx )
    263e:	89 81       	ldd	r24, Y+1	; 0x01
    2640:	8f 5f       	subi	r24, 0xFF	; 255
    2642:	89 83       	std	Y+1, r24	; 0x01
    2644:	90 91 9d 02 	lds	r25, 0x029D
    2648:	89 81       	ldd	r24, Y+1	; 0x01
    264a:	89 17       	cp	r24, r25
    264c:	b0 f2       	brcs	.-84     	; 0x25fa <initmodule+0x72>
		sample[idx] = offset;
		offset += (inst[idx].length<<1); //*2
	}
	
	// generate a BPM table
	for( idx=0; idx<256-32; ++idx )
    264e:	19 82       	std	Y+1, r1	; 0x01
    2650:	20 c0       	rjmp	.+64     	; 0x2692 <initmodule+0x10a>
	{
		bpmtab[idx] = F_DAC / ((((u16)idx+32)<<1)/5);
    2652:	89 81       	ldd	r24, Y+1	; 0x01
    2654:	e8 2f       	mov	r30, r24
    2656:	f0 e0       	ldi	r31, 0x00	; 0
    2658:	89 81       	ldd	r24, Y+1	; 0x01
    265a:	88 2f       	mov	r24, r24
    265c:	90 e0       	ldi	r25, 0x00	; 0
    265e:	80 96       	adiw	r24, 0x20	; 32
    2660:	88 0f       	add	r24, r24
    2662:	99 1f       	adc	r25, r25
    2664:	25 e0       	ldi	r18, 0x05	; 5
    2666:	30 e0       	ldi	r19, 0x00	; 0
    2668:	b9 01       	movw	r22, r18
    266a:	0e 94 52 1c 	call	0x38a4	; 0x38a4 <__udivmodhi4>
    266e:	9b 01       	movw	r18, r22
    2670:	80 e0       	ldi	r24, 0x00	; 0
    2672:	9d e7       	ldi	r25, 0x7D	; 125
    2674:	b9 01       	movw	r22, r18
    2676:	0e 94 52 1c 	call	0x38a4	; 0x38a4 <__udivmodhi4>
    267a:	9b 01       	movw	r18, r22
    267c:	cf 01       	movw	r24, r30
    267e:	88 0f       	add	r24, r24
    2680:	99 1f       	adc	r25, r25
    2682:	83 5a       	subi	r24, 0xA3	; 163
    2684:	9c 4f       	sbci	r25, 0xFC	; 252
    2686:	fc 01       	movw	r30, r24
    2688:	31 83       	std	Z+1, r19	; 0x01
    268a:	20 83       	st	Z, r18
		sample[idx] = offset;
		offset += (inst[idx].length<<1); //*2
	}
	
	// generate a BPM table
	for( idx=0; idx<256-32; ++idx )
    268c:	89 81       	ldd	r24, Y+1	; 0x01
    268e:	8f 5f       	subi	r24, 0xFF	; 255
    2690:	89 83       	std	Y+1, r24	; 0x01
    2692:	89 81       	ldd	r24, Y+1	; 0x01
    2694:	80 3e       	cpi	r24, 0xE0	; 224
    2696:	e8 f2       	brcs	.-70     	; 0x2652 <initmodule+0xca>
	{
		bpmtab[idx] = F_DAC / ((((u16)idx+32)<<1)/5);
	}
	
	dacPeriod = HzToPeriod(F_DAC)<<8;
    2698:	80 e0       	ldi	r24, 0x00	; 0
    269a:	9f e6       	ldi	r25, 0x6F	; 111
    269c:	90 93 ae 02 	sts	0x02AE, r25
    26a0:	80 93 ad 02 	sts	0x02AD, r24
	/*for( idx=0; idx<NUM_NOTES; ++idx )
	{
		noteTable[idx] = PeriodToInc(periodTable[idx]);
	}*/
	
	seek(0, 0);
    26a4:	80 e0       	ldi	r24, 0x00	; 0
    26a6:	60 e0       	ldi	r22, 0x00	; 0
    26a8:	0e 94 4b 16 	call	0x2c96	; 0x2c96 <seek>
	
	currow = -1;
    26ac:	8f ef       	ldi	r24, 0xFF	; 255
    26ae:	80 93 1d 05 	sts	0x051D, r24
	curtick = DEFAULT_SPEED;
    26b2:	86 e0       	ldi	r24, 0x06	; 6
    26b4:	80 93 9b 02 	sts	0x029B, r24
	speed = DEFAULT_SPEED; 
    26b8:	86 e0       	ldi	r24, 0x06	; 6
    26ba:	80 93 1e 05 	sts	0x051E, r24
	bpm   = BPM(DEFAULT_BPM);
    26be:	80 91 17 04 	lds	r24, 0x0417
    26c2:	90 91 18 04 	lds	r25, 0x0418
    26c6:	90 93 dc 02 	sts	0x02DC, r25
    26ca:	80 93 db 02 	sts	0x02DB, r24
	
	channel[0].note =		 NO_NOTE;
    26ce:	8f e3       	ldi	r24, 0x3F	; 63
    26d0:	80 93 b1 02 	sts	0x02B1, r24
	channel[0].portaperiod = NO_PERIOD;
    26d4:	8f ef       	ldi	r24, 0xFF	; 255
    26d6:	9f ef       	ldi	r25, 0xFF	; 255
    26d8:	90 93 b9 02 	sts	0x02B9, r25
    26dc:	80 93 b8 02 	sts	0x02B8, r24
	channel[1].note =		 NO_NOTE;
    26e0:	8f e3       	ldi	r24, 0x3F	; 63
    26e2:	80 93 bc 02 	sts	0x02BC, r24
	channel[1].portaperiod = NO_PERIOD;
    26e6:	8f ef       	ldi	r24, 0xFF	; 255
    26e8:	9f ef       	ldi	r25, 0xFF	; 255
    26ea:	90 93 c4 02 	sts	0x02C4, r25
    26ee:	80 93 c3 02 	sts	0x02C3, r24
	channel[2].note =		 NO_NOTE;
    26f2:	8f e3       	ldi	r24, 0x3F	; 63
    26f4:	80 93 c7 02 	sts	0x02C7, r24
	channel[2].portaperiod = NO_PERIOD;
    26f8:	8f ef       	ldi	r24, 0xFF	; 255
    26fa:	9f ef       	ldi	r25, 0xFF	; 255
    26fc:	90 93 cf 02 	sts	0x02CF, r25
    2700:	80 93 ce 02 	sts	0x02CE, r24
	channel[3].note =		 NO_NOTE;
    2704:	8f e3       	ldi	r24, 0x3F	; 63
    2706:	80 93 d2 02 	sts	0x02D2, r24
	channel[3].portaperiod = NO_PERIOD;
    270a:	8f ef       	ldi	r24, 0xFF	; 255
    270c:	9f ef       	ldi	r25, 0xFF	; 255
    270e:	90 93 da 02 	sts	0x02DA, r25
    2712:	80 93 d9 02 	sts	0x02D9, r24
	
	mixchn[0].offset = 0;
    2716:	10 92 25 05 	sts	0x0525, r1
    271a:	10 92 24 05 	sts	0x0524, r1
	mixchn[1].offset = 0;
    271e:	10 92 36 05 	sts	0x0536, r1
    2722:	10 92 35 05 	sts	0x0535, r1
	mixchn[2].offset = 0;
    2726:	10 92 47 05 	sts	0x0547, r1
    272a:	10 92 46 05 	sts	0x0546, r1
	mixchn[3].offset = 0;
    272e:	10 92 58 05 	sts	0x0558, r1
    2732:	10 92 57 05 	sts	0x0557, r1
	
	song_state = SONG_STATE_PLAY;
    2736:	81 e0       	ldi	r24, 0x01	; 1
    2738:	80 93 9c 02 	sts	0x029C, r24
}
    273c:	0f 90       	pop	r0
    273e:	0f 90       	pop	r0
    2740:	0f 90       	pop	r0
    2742:	cf 91       	pop	r28
    2744:	df 91       	pop	r29
    2746:	08 95       	ret

00002748 <unpacknote>:

void unpacknote(u16 offset, struct note_s* note)
{
    2748:	df 93       	push	r29
    274a:	cf 93       	push	r28
    274c:	cd b7       	in	r28, 0x3d	; 61
    274e:	de b7       	in	r29, 0x3e	; 62
    2750:	27 97       	sbiw	r28, 0x07	; 7
    2752:	0f b6       	in	r0, 0x3f	; 63
    2754:	f8 94       	cli
    2756:	de bf       	out	0x3e, r29	; 62
    2758:	0f be       	out	0x3f, r0	; 63
    275a:	cd bf       	out	0x3d, r28	; 61
    275c:	9d 83       	std	Y+5, r25	; 0x05
    275e:	8c 83       	std	Y+4, r24	; 0x04
    2760:	7f 83       	std	Y+7, r23	; 0x07
    2762:	6e 83       	std	Y+6, r22	; 0x06
	u8 notepacked[3];
	
	readsongblock(offset, notepacked, 3);
    2764:	8c 81       	ldd	r24, Y+4	; 0x04
    2766:	9d 81       	ldd	r25, Y+5	; 0x05
    2768:	9e 01       	movw	r18, r28
    276a:	2f 5f       	subi	r18, 0xFF	; 255
    276c:	3f 4f       	sbci	r19, 0xFF	; 255
    276e:	b9 01       	movw	r22, r18
    2770:	43 e0       	ldi	r20, 0x03	; 3
    2772:	50 e0       	ldi	r21, 0x00	; 0
    2774:	0e 94 16 12 	call	0x242c	; 0x242c <readsongblock>
	*  INST NUMBER = CCCCC
	*  EFFECT PARM = DDDDDDDD
	*  UNUSED      = X
*/	

	note->number = notepacked[0]>>2;
    2778:	89 81       	ldd	r24, Y+1	; 0x01
    277a:	28 2f       	mov	r18, r24
    277c:	26 95       	lsr	r18
    277e:	26 95       	lsr	r18
    2780:	8e 81       	ldd	r24, Y+6	; 0x06
    2782:	9f 81       	ldd	r25, Y+7	; 0x07
    2784:	fc 01       	movw	r30, r24
    2786:	20 83       	st	Z, r18
	note->effect = ((notepacked[0]&0b00000011)<<2) | (notepacked[1]>>6);
    2788:	89 81       	ldd	r24, Y+1	; 0x01
    278a:	88 2f       	mov	r24, r24
    278c:	90 e0       	ldi	r25, 0x00	; 0
    278e:	83 70       	andi	r24, 0x03	; 3
    2790:	90 70       	andi	r25, 0x00	; 0
    2792:	88 0f       	add	r24, r24
    2794:	99 1f       	adc	r25, r25
    2796:	88 0f       	add	r24, r24
    2798:	99 1f       	adc	r25, r25
    279a:	98 2f       	mov	r25, r24
    279c:	8a 81       	ldd	r24, Y+2	; 0x02
    279e:	82 95       	swap	r24
    27a0:	86 95       	lsr	r24
    27a2:	86 95       	lsr	r24
    27a4:	83 70       	andi	r24, 0x03	; 3
    27a6:	89 2b       	or	r24, r25
    27a8:	28 2f       	mov	r18, r24
    27aa:	8e 81       	ldd	r24, Y+6	; 0x06
    27ac:	9f 81       	ldd	r25, Y+7	; 0x07
    27ae:	fc 01       	movw	r30, r24
    27b0:	21 83       	std	Z+1, r18	; 0x01
	note->inst   = (notepacked[1]>>1)&0b00011111;
    27b2:	8a 81       	ldd	r24, Y+2	; 0x02
    27b4:	86 95       	lsr	r24
    27b6:	28 2f       	mov	r18, r24
    27b8:	2f 71       	andi	r18, 0x1F	; 31
    27ba:	8e 81       	ldd	r24, Y+6	; 0x06
    27bc:	9f 81       	ldd	r25, Y+7	; 0x07
    27be:	fc 01       	movw	r30, r24
    27c0:	22 83       	std	Z+2, r18	; 0x02
	note->param  = notepacked[2];
    27c2:	2b 81       	ldd	r18, Y+3	; 0x03
    27c4:	8e 81       	ldd	r24, Y+6	; 0x06
    27c6:	9f 81       	ldd	r25, Y+7	; 0x07
    27c8:	fc 01       	movw	r30, r24
    27ca:	23 83       	std	Z+3, r18	; 0x03
}
    27cc:	27 96       	adiw	r28, 0x07	; 7
    27ce:	0f b6       	in	r0, 0x3f	; 63
    27d0:	f8 94       	cli
    27d2:	de bf       	out	0x3e, r29	; 62
    27d4:	0f be       	out	0x3f, r0	; 63
    27d6:	cd bf       	out	0x3d, r28	; 61
    27d8:	cf 91       	pop	r28
    27da:	df 91       	pop	r29
    27dc:	08 95       	ret

000027de <playnote>:

void playnote(struct update_s* upd)
{	
    27de:	df 93       	push	r29
    27e0:	cf 93       	push	r28
    27e2:	00 d0       	rcall	.+0      	; 0x27e4 <playnote+0x6>
    27e4:	00 d0       	rcall	.+0      	; 0x27e6 <playnote+0x8>
    27e6:	cd b7       	in	r28, 0x3d	; 61
    27e8:	de b7       	in	r29, 0x3e	; 62
    27ea:	9c 83       	std	Y+4, r25	; 0x04
    27ec:	8b 83       	std	Y+3, r24	; 0x03
	struct inst_s* cur;
	
	if(upd->chn->inst == NO_INST)
    27ee:	8b 81       	ldd	r24, Y+3	; 0x03
    27f0:	9c 81       	ldd	r25, Y+4	; 0x04
    27f2:	fc 01       	movw	r30, r24
    27f4:	80 81       	ld	r24, Z
    27f6:	91 81       	ldd	r25, Z+1	; 0x01
    27f8:	fc 01       	movw	r30, r24
    27fa:	80 81       	ld	r24, Z
    27fc:	8f 3f       	cpi	r24, 0xFF	; 255
    27fe:	09 f4       	brne	.+2      	; 0x2802 <playnote+0x24>
    2800:	92 c0       	rjmp	.+292    	; 0x2926 <playnote+0x148>
	{
		return;
	}
	
	cur = &inst[upd->chn->inst];
    2802:	8b 81       	ldd	r24, Y+3	; 0x03
    2804:	9c 81       	ldd	r25, Y+4	; 0x04
    2806:	fc 01       	movw	r30, r24
    2808:	80 81       	ld	r24, Z
    280a:	91 81       	ldd	r25, Z+1	; 0x01
    280c:	fc 01       	movw	r30, r24
    280e:	80 81       	ld	r24, Z
    2810:	88 2f       	mov	r24, r24
    2812:	90 e0       	ldi	r25, 0x00	; 0
    2814:	88 0f       	add	r24, r24
    2816:	99 1f       	adc	r25, r25
    2818:	88 0f       	add	r24, r24
    281a:	99 1f       	adc	r25, r25
    281c:	88 0f       	add	r24, r24
    281e:	99 1f       	adc	r25, r25
    2820:	82 56       	subi	r24, 0x62	; 98
    2822:	9e 4f       	sbci	r25, 0xFE	; 254
    2824:	9a 83       	std	Y+2, r25	; 0x02
    2826:	89 83       	std	Y+1, r24	; 0x01
		
	upd->sndchn->offset = sample[upd->chn->inst];
    2828:	8b 81       	ldd	r24, Y+3	; 0x03
    282a:	9c 81       	ldd	r25, Y+4	; 0x04
    282c:	fc 01       	movw	r30, r24
    282e:	82 81       	ldd	r24, Z+2	; 0x02
    2830:	93 81       	ldd	r25, Z+3	; 0x03
    2832:	2b 81       	ldd	r18, Y+3	; 0x03
    2834:	3c 81       	ldd	r19, Y+4	; 0x04
    2836:	f9 01       	movw	r30, r18
    2838:	20 81       	ld	r18, Z
    283a:	31 81       	ldd	r19, Z+1	; 0x01
    283c:	f9 01       	movw	r30, r18
    283e:	20 81       	ld	r18, Z
    2840:	22 2f       	mov	r18, r18
    2842:	30 e0       	ldi	r19, 0x00	; 0
    2844:	22 0f       	add	r18, r18
    2846:	33 1f       	adc	r19, r19
    2848:	28 59       	subi	r18, 0x98	; 152
    284a:	3a 4f       	sbci	r19, 0xFA	; 250
    284c:	f9 01       	movw	r30, r18
    284e:	20 81       	ld	r18, Z
    2850:	31 81       	ldd	r19, Z+1	; 0x01
    2852:	fc 01       	movw	r30, r24
    2854:	31 83       	std	Z+1, r19	; 0x01
    2856:	20 83       	st	Z, r18
	upd->sndchn->pos = 0;
    2858:	8b 81       	ldd	r24, Y+3	; 0x03
    285a:	9c 81       	ldd	r25, Y+4	; 0x04
    285c:	fc 01       	movw	r30, r24
    285e:	82 81       	ldd	r24, Z+2	; 0x02
    2860:	93 81       	ldd	r25, Z+3	; 0x03
    2862:	fc 01       	movw	r30, r24
    2864:	12 82       	std	Z+2, r1	; 0x02
    2866:	13 82       	std	Z+3, r1	; 0x03
    2868:	14 82       	std	Z+4, r1	; 0x04
    286a:	15 82       	std	Z+5, r1	; 0x05
	
	upd->flags |= MOD_FLG_UPDATEPITCH;
    286c:	8b 81       	ldd	r24, Y+3	; 0x03
    286e:	9c 81       	ldd	r25, Y+4	; 0x04
    2870:	fc 01       	movw	r30, r24
    2872:	80 85       	ldd	r24, Z+8	; 0x08
    2874:	28 2f       	mov	r18, r24
    2876:	22 60       	ori	r18, 0x02	; 2
    2878:	8b 81       	ldd	r24, Y+3	; 0x03
    287a:	9c 81       	ldd	r25, Y+4	; 0x04
    287c:	fc 01       	movw	r30, r24
    287e:	20 87       	std	Z+8, r18	; 0x08
	
	upd->sndchn->length = (cur->looplength)?(((u32)(cur->loopstart+cur->looplength))<<9):(((u32)cur->length)<<9);
    2880:	8b 81       	ldd	r24, Y+3	; 0x03
    2882:	9c 81       	ldd	r25, Y+4	; 0x04
    2884:	fc 01       	movw	r30, r24
    2886:	22 81       	ldd	r18, Z+2	; 0x02
    2888:	33 81       	ldd	r19, Z+3	; 0x03
    288a:	89 81       	ldd	r24, Y+1	; 0x01
    288c:	9a 81       	ldd	r25, Y+2	; 0x02
    288e:	fc 01       	movw	r30, r24
    2890:	86 81       	ldd	r24, Z+6	; 0x06
    2892:	97 81       	ldd	r25, Z+7	; 0x07
    2894:	00 97       	sbiw	r24, 0x00	; 0
    2896:	d1 f0       	breq	.+52     	; 0x28cc <playnote+0xee>
    2898:	89 81       	ldd	r24, Y+1	; 0x01
    289a:	9a 81       	ldd	r25, Y+2	; 0x02
    289c:	fc 01       	movw	r30, r24
    289e:	44 81       	ldd	r20, Z+4	; 0x04
    28a0:	55 81       	ldd	r21, Z+5	; 0x05
    28a2:	89 81       	ldd	r24, Y+1	; 0x01
    28a4:	9a 81       	ldd	r25, Y+2	; 0x02
    28a6:	fc 01       	movw	r30, r24
    28a8:	86 81       	ldd	r24, Z+6	; 0x06
    28aa:	97 81       	ldd	r25, Z+7	; 0x07
    28ac:	84 0f       	add	r24, r20
    28ae:	95 1f       	adc	r25, r21
    28b0:	aa 27       	eor	r26, r26
    28b2:	97 fd       	sbrc	r25, 7
    28b4:	a0 95       	com	r26
    28b6:	ba 2f       	mov	r27, r26
    28b8:	07 2e       	mov	r0, r23
    28ba:	79 e0       	ldi	r23, 0x09	; 9
    28bc:	88 0f       	add	r24, r24
    28be:	99 1f       	adc	r25, r25
    28c0:	aa 1f       	adc	r26, r26
    28c2:	bb 1f       	adc	r27, r27
    28c4:	7a 95       	dec	r23
    28c6:	d1 f7       	brne	.-12     	; 0x28bc <playnote+0xde>
    28c8:	70 2d       	mov	r23, r0
    28ca:	11 c0       	rjmp	.+34     	; 0x28ee <playnote+0x110>
    28cc:	89 81       	ldd	r24, Y+1	; 0x01
    28ce:	9a 81       	ldd	r25, Y+2	; 0x02
    28d0:	fc 01       	movw	r30, r24
    28d2:	80 81       	ld	r24, Z
    28d4:	91 81       	ldd	r25, Z+1	; 0x01
    28d6:	cc 01       	movw	r24, r24
    28d8:	a0 e0       	ldi	r26, 0x00	; 0
    28da:	b0 e0       	ldi	r27, 0x00	; 0
    28dc:	07 2e       	mov	r0, r23
    28de:	79 e0       	ldi	r23, 0x09	; 9
    28e0:	88 0f       	add	r24, r24
    28e2:	99 1f       	adc	r25, r25
    28e4:	aa 1f       	adc	r26, r26
    28e6:	bb 1f       	adc	r27, r27
    28e8:	7a 95       	dec	r23
    28ea:	d1 f7       	brne	.-12     	; 0x28e0 <playnote+0x102>
    28ec:	70 2d       	mov	r23, r0
    28ee:	f9 01       	movw	r30, r18
    28f0:	81 87       	std	Z+9, r24	; 0x09
    28f2:	92 87       	std	Z+10, r25	; 0x0a
    28f4:	a3 87       	std	Z+11, r26	; 0x0b
    28f6:	b4 87       	std	Z+12, r27	; 0x0c
	upd->sndchn->looplength = cur->looplength<<9;
    28f8:	8b 81       	ldd	r24, Y+3	; 0x03
    28fa:	9c 81       	ldd	r25, Y+4	; 0x04
    28fc:	fc 01       	movw	r30, r24
    28fe:	22 81       	ldd	r18, Z+2	; 0x02
    2900:	33 81       	ldd	r19, Z+3	; 0x03
    2902:	89 81       	ldd	r24, Y+1	; 0x01
    2904:	9a 81       	ldd	r25, Y+2	; 0x02
    2906:	fc 01       	movw	r30, r24
    2908:	86 81       	ldd	r24, Z+6	; 0x06
    290a:	97 81       	ldd	r25, Z+7	; 0x07
    290c:	98 2f       	mov	r25, r24
    290e:	88 27       	eor	r24, r24
    2910:	99 0f       	add	r25, r25
    2912:	aa 27       	eor	r26, r26
    2914:	97 fd       	sbrc	r25, 7
    2916:	a0 95       	com	r26
    2918:	ba 2f       	mov	r27, r26
    291a:	f9 01       	movw	r30, r18
    291c:	85 87       	std	Z+13, r24	; 0x0d
    291e:	96 87       	std	Z+14, r25	; 0x0e
    2920:	a7 87       	std	Z+15, r26	; 0x0f
    2922:	b0 8b       	std	Z+16, r27	; 0x10
    2924:	01 c0       	rjmp	.+2      	; 0x2928 <playnote+0x14a>
{	
	struct inst_s* cur;
	
	if(upd->chn->inst == NO_INST)
	{
		return;
    2926:	00 00       	nop
	
	upd->flags |= MOD_FLG_UPDATEPITCH;
	
	upd->sndchn->length = (cur->looplength)?(((u32)(cur->loopstart+cur->looplength))<<9):(((u32)cur->length)<<9);
	upd->sndchn->looplength = cur->looplength<<9;
}
    2928:	0f 90       	pop	r0
    292a:	0f 90       	pop	r0
    292c:	0f 90       	pop	r0
    292e:	0f 90       	pop	r0
    2930:	cf 91       	pop	r28
    2932:	df 91       	pop	r29
    2934:	08 95       	ret

00002936 <update>:

void update(struct update_s* upd)
{	
    2936:	df 93       	push	r29
    2938:	cf 93       	push	r28
    293a:	00 d0       	rcall	.+0      	; 0x293c <update+0x6>
    293c:	cd b7       	in	r28, 0x3d	; 61
    293e:	de b7       	in	r29, 0x3e	; 62
    2940:	9a 83       	std	Y+2, r25	; 0x02
    2942:	89 83       	std	Y+1, r24	; 0x01
	if((upd->note.number != NO_NOTE) && (upd->flags & MOD_FLG_PLAYNOTE))
    2944:	89 81       	ldd	r24, Y+1	; 0x01
    2946:	9a 81       	ldd	r25, Y+2	; 0x02
    2948:	fc 01       	movw	r30, r24
    294a:	84 81       	ldd	r24, Z+4	; 0x04
    294c:	8f 33       	cpi	r24, 0x3F	; 63
    294e:	71 f0       	breq	.+28     	; 0x296c <update+0x36>
    2950:	89 81       	ldd	r24, Y+1	; 0x01
    2952:	9a 81       	ldd	r25, Y+2	; 0x02
    2954:	fc 01       	movw	r30, r24
    2956:	80 85       	ldd	r24, Z+8	; 0x08
    2958:	88 2f       	mov	r24, r24
    295a:	90 e0       	ldi	r25, 0x00	; 0
    295c:	80 72       	andi	r24, 0x20	; 32
    295e:	90 70       	andi	r25, 0x00	; 0
    2960:	00 97       	sbiw	r24, 0x00	; 0
    2962:	21 f0       	breq	.+8      	; 0x296c <update+0x36>
	{
		playnote(upd);
    2964:	89 81       	ldd	r24, Y+1	; 0x01
    2966:	9a 81       	ldd	r25, Y+2	; 0x02
    2968:	0e 94 ef 13 	call	0x27de	; 0x27de <playnote>
	}
	
	if(upd->flags & MOD_FLG_UPDATEVOL)
    296c:	89 81       	ldd	r24, Y+1	; 0x01
    296e:	9a 81       	ldd	r25, Y+2	; 0x02
    2970:	fc 01       	movw	r30, r24
    2972:	80 85       	ldd	r24, Z+8	; 0x08
    2974:	88 2f       	mov	r24, r24
    2976:	90 e0       	ldi	r25, 0x00	; 0
    2978:	81 70       	andi	r24, 0x01	; 1
    297a:	90 70       	andi	r25, 0x00	; 0
    297c:	88 23       	and	r24, r24
    297e:	71 f0       	breq	.+28     	; 0x299c <update+0x66>
	{
		upd->sndchn->volume = upd->chn->volume;
    2980:	89 81       	ldd	r24, Y+1	; 0x01
    2982:	9a 81       	ldd	r25, Y+2	; 0x02
    2984:	fc 01       	movw	r30, r24
    2986:	82 81       	ldd	r24, Z+2	; 0x02
    2988:	93 81       	ldd	r25, Z+3	; 0x03
    298a:	29 81       	ldd	r18, Y+1	; 0x01
    298c:	3a 81       	ldd	r19, Y+2	; 0x02
    298e:	f9 01       	movw	r30, r18
    2990:	20 81       	ld	r18, Z
    2992:	31 81       	ldd	r19, Z+1	; 0x01
    2994:	f9 01       	movw	r30, r18
    2996:	21 81       	ldd	r18, Z+1	; 0x01
    2998:	fc 01       	movw	r30, r24
    299a:	20 87       	std	Z+8, r18	; 0x08
	}
	
	if(upd->flags & MOD_FLG_UPDATEPITCH)
    299c:	89 81       	ldd	r24, Y+1	; 0x01
    299e:	9a 81       	ldd	r25, Y+2	; 0x02
    29a0:	fc 01       	movw	r30, r24
    29a2:	80 85       	ldd	r24, Z+8	; 0x08
    29a4:	88 2f       	mov	r24, r24
    29a6:	90 e0       	ldi	r25, 0x00	; 0
    29a8:	82 70       	andi	r24, 0x02	; 2
    29aa:	90 70       	andi	r25, 0x00	; 0
    29ac:	00 97       	sbiw	r24, 0x00	; 0
    29ae:	c9 f0       	breq	.+50     	; 0x29e2 <update+0xac>
	{
		upd->sndchn->inc = PeriodToInc(upd->chn->freq);
    29b0:	89 81       	ldd	r24, Y+1	; 0x01
    29b2:	9a 81       	ldd	r25, Y+2	; 0x02
    29b4:	fc 01       	movw	r30, r24
    29b6:	22 81       	ldd	r18, Z+2	; 0x02
    29b8:	33 81       	ldd	r19, Z+3	; 0x03
    29ba:	80 91 ad 02 	lds	r24, 0x02AD
    29be:	90 91 ae 02 	lds	r25, 0x02AE
    29c2:	49 81       	ldd	r20, Y+1	; 0x01
    29c4:	5a 81       	ldd	r21, Y+2	; 0x02
    29c6:	fa 01       	movw	r30, r20
    29c8:	40 81       	ld	r20, Z
    29ca:	51 81       	ldd	r21, Z+1	; 0x01
    29cc:	fa 01       	movw	r30, r20
    29ce:	45 81       	ldd	r20, Z+5	; 0x05
    29d0:	56 81       	ldd	r21, Z+6	; 0x06
    29d2:	ba 01       	movw	r22, r20
    29d4:	0e 94 52 1c 	call	0x38a4	; 0x38a4 <__udivmodhi4>
    29d8:	ab 01       	movw	r20, r22
    29da:	ca 01       	movw	r24, r20
    29dc:	f9 01       	movw	r30, r18
    29de:	97 83       	std	Z+7, r25	; 0x07
    29e0:	86 83       	std	Z+6, r24	; 0x06
	}
}
    29e2:	0f 90       	pop	r0
    29e4:	0f 90       	pop	r0
    29e6:	cf 91       	pop	r28
    29e8:	df 91       	pop	r29
    29ea:	08 95       	ret

000029ec <row>:

void row()
{
    29ec:	df 93       	push	r29
    29ee:	cf 93       	push	r28
    29f0:	cd b7       	in	r28, 0x3d	; 61
    29f2:	de b7       	in	r29, 0x3e	; 62
    29f4:	2a 97       	sbiw	r28, 0x0a	; 10
    29f6:	0f b6       	in	r0, 0x3f	; 63
    29f8:	f8 94       	cli
    29fa:	de bf       	out	0x3e, r29	; 62
    29fc:	0f be       	out	0x3f, r0	; 63
    29fe:	cd bf       	out	0x3d, r28	; 61
	u8 n;
	struct update_s upd = {NULL, NULL, {NO_NOTE, NO_INST_PATTERN, 0, 0}, MOD_FLG_PLAYNOTE};
    2a00:	ce 01       	movw	r24, r28
    2a02:	02 96       	adiw	r24, 0x02	; 2
    2a04:	24 e9       	ldi	r18, 0x94	; 148
    2a06:	31 e0       	ldi	r19, 0x01	; 1
    2a08:	49 e0       	ldi	r20, 0x09	; 9
    2a0a:	f9 01       	movw	r30, r18
    2a0c:	00 80       	ld	r0, Z
    2a0e:	2f 5f       	subi	r18, 0xFF	; 255
    2a10:	3f 4f       	sbci	r19, 0xFF	; 255
    2a12:	fc 01       	movw	r30, r24
    2a14:	00 82       	st	Z, r0
    2a16:	01 96       	adiw	r24, 0x01	; 1
    2a18:	41 50       	subi	r20, 0x01	; 1
    2a1a:	44 23       	and	r20, r20
    2a1c:	b1 f7       	brne	.-20     	; 0x2a0a <row+0x1e>
	
	for( n=0; n<PATTERN_CHANNELS; ++n )
    2a1e:	19 82       	std	Y+1, r1	; 0x01
    2a20:	af c0       	rjmp	.+350    	; 0x2b80 <row+0x194>
	{
		upd.chn = &channel[n];
    2a22:	89 81       	ldd	r24, Y+1	; 0x01
    2a24:	28 2f       	mov	r18, r24
    2a26:	30 e0       	ldi	r19, 0x00	; 0
    2a28:	c9 01       	movw	r24, r18
    2a2a:	88 0f       	add	r24, r24
    2a2c:	99 1f       	adc	r25, r25
    2a2e:	ac 01       	movw	r20, r24
    2a30:	44 0f       	add	r20, r20
    2a32:	55 1f       	adc	r21, r21
    2a34:	44 0f       	add	r20, r20
    2a36:	55 1f       	adc	r21, r21
    2a38:	84 0f       	add	r24, r20
    2a3a:	95 1f       	adc	r25, r21
    2a3c:	82 0f       	add	r24, r18
    2a3e:	93 1f       	adc	r25, r19
    2a40:	81 55       	subi	r24, 0x51	; 81
    2a42:	9d 4f       	sbci	r25, 0xFD	; 253
    2a44:	9b 83       	std	Y+3, r25	; 0x03
    2a46:	8a 83       	std	Y+2, r24	; 0x02
		upd.sndchn = &mixchn[n];
    2a48:	89 81       	ldd	r24, Y+1	; 0x01
    2a4a:	88 2f       	mov	r24, r24
    2a4c:	90 e0       	ldi	r25, 0x00	; 0
    2a4e:	9c 01       	movw	r18, r24
    2a50:	22 95       	swap	r18
    2a52:	32 95       	swap	r19
    2a54:	30 7f       	andi	r19, 0xF0	; 240
    2a56:	32 27       	eor	r19, r18
    2a58:	20 7f       	andi	r18, 0xF0	; 240
    2a5a:	32 27       	eor	r19, r18
    2a5c:	82 0f       	add	r24, r18
    2a5e:	93 1f       	adc	r25, r19
    2a60:	8c 5d       	subi	r24, 0xDC	; 220
    2a62:	9a 4f       	sbci	r25, 0xFA	; 250
    2a64:	9d 83       	std	Y+5, r25	; 0x05
    2a66:	8c 83       	std	Y+4, r24	; 0x04
		
		unpacknote(curpattern.offset + curpattern.index, &upd.note);
    2a68:	20 91 20 05 	lds	r18, 0x0520
    2a6c:	30 91 21 05 	lds	r19, 0x0521
    2a70:	80 91 22 05 	lds	r24, 0x0522
    2a74:	90 91 23 05 	lds	r25, 0x0523
    2a78:	82 0f       	add	r24, r18
    2a7a:	93 1f       	adc	r25, r19
    2a7c:	9e 01       	movw	r18, r28
    2a7e:	2e 5f       	subi	r18, 0xFE	; 254
    2a80:	3f 4f       	sbci	r19, 0xFF	; 255
    2a82:	2c 5f       	subi	r18, 0xFC	; 252
    2a84:	3f 4f       	sbci	r19, 0xFF	; 255
    2a86:	b9 01       	movw	r22, r18
    2a88:	0e 94 a4 13 	call	0x2748	; 0x2748 <unpacknote>
		
		upd.chn->effect = upd.note.effect;
    2a8c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a8e:	9b 81       	ldd	r25, Y+3	; 0x03
    2a90:	2f 81       	ldd	r18, Y+7	; 0x07
    2a92:	fc 01       	movw	r30, r24
    2a94:	23 83       	std	Z+3, r18	; 0x03
		upd.chn->param = upd.note.param;
    2a96:	8a 81       	ldd	r24, Y+2	; 0x02
    2a98:	9b 81       	ldd	r25, Y+3	; 0x03
    2a9a:	29 85       	ldd	r18, Y+9	; 0x09
    2a9c:	fc 01       	movw	r30, r24
    2a9e:	24 83       	std	Z+4, r18	; 0x04
		
		if(upd.note.inst != NO_INST_PATTERN)
    2aa0:	88 85       	ldd	r24, Y+8	; 0x08
    2aa2:	88 23       	and	r24, r24
    2aa4:	e9 f0       	breq	.+58     	; 0x2ae0 <row+0xf4>
		{
			upd.chn->inst = upd.note.inst-1;
    2aa6:	8a 81       	ldd	r24, Y+2	; 0x02
    2aa8:	9b 81       	ldd	r25, Y+3	; 0x03
    2aaa:	28 85       	ldd	r18, Y+8	; 0x08
    2aac:	21 50       	subi	r18, 0x01	; 1
    2aae:	fc 01       	movw	r30, r24
    2ab0:	20 83       	st	Z, r18
			upd.chn->volume = inst[upd.chn->inst].volume;
    2ab2:	8a 81       	ldd	r24, Y+2	; 0x02
    2ab4:	9b 81       	ldd	r25, Y+3	; 0x03
    2ab6:	2a 81       	ldd	r18, Y+2	; 0x02
    2ab8:	3b 81       	ldd	r19, Y+3	; 0x03
    2aba:	f9 01       	movw	r30, r18
    2abc:	20 81       	ld	r18, Z
    2abe:	22 2f       	mov	r18, r18
    2ac0:	30 e0       	ldi	r19, 0x00	; 0
    2ac2:	22 0f       	add	r18, r18
    2ac4:	33 1f       	adc	r19, r19
    2ac6:	22 0f       	add	r18, r18
    2ac8:	33 1f       	adc	r19, r19
    2aca:	22 0f       	add	r18, r18
    2acc:	33 1f       	adc	r19, r19
    2ace:	2f 55       	subi	r18, 0x5F	; 95
    2ad0:	3e 4f       	sbci	r19, 0xFE	; 254
    2ad2:	f9 01       	movw	r30, r18
    2ad4:	20 81       	ld	r18, Z
    2ad6:	fc 01       	movw	r30, r24
    2ad8:	21 83       	std	Z+1, r18	; 0x01
			upd.flags |= MOD_FLG_UPDATEVOL;
    2ada:	8a 85       	ldd	r24, Y+10	; 0x0a
    2adc:	81 60       	ori	r24, 0x01	; 1
    2ade:	8a 87       	std	Y+10, r24	; 0x0a
		}
		
		//do row fx
		if(upd.note.effect || upd.note.param)
    2ae0:	8f 81       	ldd	r24, Y+7	; 0x07
    2ae2:	88 23       	and	r24, r24
    2ae4:	19 f4       	brne	.+6      	; 0x2aec <row+0x100>
    2ae6:	89 85       	ldd	r24, Y+9	; 0x09
    2ae8:	88 23       	and	r24, r24
    2aea:	d1 f0       	breq	.+52     	; 0x2b20 <row+0x134>
		{
			if(roweffect[upd.note.effect])
    2aec:	8f 81       	ldd	r24, Y+7	; 0x07
    2aee:	88 2f       	mov	r24, r24
    2af0:	90 e0       	ldi	r25, 0x00	; 0
    2af2:	88 0f       	add	r24, r24
    2af4:	99 1f       	adc	r25, r25
    2af6:	80 50       	subi	r24, 0x00	; 0
    2af8:	9f 4f       	sbci	r25, 0xFF	; 255
    2afa:	fc 01       	movw	r30, r24
    2afc:	80 81       	ld	r24, Z
    2afe:	91 81       	ldd	r25, Z+1	; 0x01
    2b00:	00 97       	sbiw	r24, 0x00	; 0
    2b02:	71 f0       	breq	.+28     	; 0x2b20 <row+0x134>
			{
				roweffect[upd.note.effect](&upd);
    2b04:	8f 81       	ldd	r24, Y+7	; 0x07
    2b06:	88 2f       	mov	r24, r24
    2b08:	90 e0       	ldi	r25, 0x00	; 0
    2b0a:	88 0f       	add	r24, r24
    2b0c:	99 1f       	adc	r25, r25
    2b0e:	80 50       	subi	r24, 0x00	; 0
    2b10:	9f 4f       	sbci	r25, 0xFF	; 255
    2b12:	fc 01       	movw	r30, r24
    2b14:	20 81       	ld	r18, Z
    2b16:	31 81       	ldd	r19, Z+1	; 0x01
    2b18:	ce 01       	movw	r24, r28
    2b1a:	02 96       	adiw	r24, 0x02	; 2
    2b1c:	f9 01       	movw	r30, r18
    2b1e:	09 95       	icall
			}
		}
		
		if(upd.note.number != NO_NOTE)
    2b20:	8e 81       	ldd	r24, Y+6	; 0x06
    2b22:	8f 33       	cpi	r24, 0x3F	; 63
    2b24:	e9 f0       	breq	.+58     	; 0x2b60 <row+0x174>
		{
			upd.chn->note = upd.note.number;
    2b26:	8a 81       	ldd	r24, Y+2	; 0x02
    2b28:	9b 81       	ldd	r25, Y+3	; 0x03
    2b2a:	2e 81       	ldd	r18, Y+6	; 0x06
    2b2c:	fc 01       	movw	r30, r24
    2b2e:	22 83       	std	Z+2, r18	; 0x02
			if((upd.note.effect != 3) || (upd.note.effect != 5))
    2b30:	8f 81       	ldd	r24, Y+7	; 0x07
    2b32:	83 30       	cpi	r24, 0x03	; 3
    2b34:	19 f4       	brne	.+6      	; 0x2b3c <row+0x150>
    2b36:	8f 81       	ldd	r24, Y+7	; 0x07
    2b38:	85 30       	cpi	r24, 0x05	; 5
    2b3a:	91 f0       	breq	.+36     	; 0x2b60 <row+0x174>
			{
				upd.chn->freq = periodTable[upd.chn->note];
    2b3c:	8a 81       	ldd	r24, Y+2	; 0x02
    2b3e:	9b 81       	ldd	r25, Y+3	; 0x03
    2b40:	2a 81       	ldd	r18, Y+2	; 0x02
    2b42:	3b 81       	ldd	r19, Y+3	; 0x03
    2b44:	f9 01       	movw	r30, r18
    2b46:	22 81       	ldd	r18, Z+2	; 0x02
    2b48:	22 2f       	mov	r18, r18
    2b4a:	30 e0       	ldi	r19, 0x00	; 0
    2b4c:	22 0f       	add	r18, r18
    2b4e:	33 1f       	adc	r19, r19
    2b50:	2f 5b       	subi	r18, 0xBF	; 191
    2b52:	3e 4f       	sbci	r19, 0xFE	; 254
    2b54:	f9 01       	movw	r30, r18
    2b56:	20 81       	ld	r18, Z
    2b58:	31 81       	ldd	r19, Z+1	; 0x01
    2b5a:	fc 01       	movw	r30, r24
    2b5c:	36 83       	std	Z+6, r19	; 0x06
    2b5e:	25 83       	std	Z+5, r18	; 0x05
			}
		}	
		
		update(&upd);
    2b60:	ce 01       	movw	r24, r28
    2b62:	02 96       	adiw	r24, 0x02	; 2
    2b64:	0e 94 9b 14 	call	0x2936	; 0x2936 <update>
		curpattern.index += NOTE_SIZE;	
    2b68:	80 91 22 05 	lds	r24, 0x0522
    2b6c:	90 91 23 05 	lds	r25, 0x0523
    2b70:	03 96       	adiw	r24, 0x03	; 3
    2b72:	90 93 23 05 	sts	0x0523, r25
    2b76:	80 93 22 05 	sts	0x0522, r24
void row()
{
	u8 n;
	struct update_s upd = {NULL, NULL, {NO_NOTE, NO_INST_PATTERN, 0, 0}, MOD_FLG_PLAYNOTE};
	
	for( n=0; n<PATTERN_CHANNELS; ++n )
    2b7a:	89 81       	ldd	r24, Y+1	; 0x01
    2b7c:	8f 5f       	subi	r24, 0xFF	; 255
    2b7e:	89 83       	std	Y+1, r24	; 0x01
    2b80:	89 81       	ldd	r24, Y+1	; 0x01
    2b82:	84 30       	cpi	r24, 0x04	; 4
    2b84:	08 f4       	brcc	.+2      	; 0x2b88 <row+0x19c>
    2b86:	4d cf       	rjmp	.-358    	; 0x2a22 <row+0x36>
		}	
		
		update(&upd);
		curpattern.index += NOTE_SIZE;	
	}
}
    2b88:	2a 96       	adiw	r28, 0x0a	; 10
    2b8a:	0f b6       	in	r0, 0x3f	; 63
    2b8c:	f8 94       	cli
    2b8e:	de bf       	out	0x3e, r29	; 62
    2b90:	0f be       	out	0x3f, r0	; 63
    2b92:	cd bf       	out	0x3d, r28	; 61
    2b94:	cf 91       	pop	r28
    2b96:	df 91       	pop	r29
    2b98:	08 95       	ret

00002b9a <tickefx>:

void tickefx()
{
    2b9a:	df 93       	push	r29
    2b9c:	cf 93       	push	r28
    2b9e:	cd b7       	in	r28, 0x3d	; 61
    2ba0:	de b7       	in	r29, 0x3e	; 62
    2ba2:	2a 97       	sbiw	r28, 0x0a	; 10
    2ba4:	0f b6       	in	r0, 0x3f	; 63
    2ba6:	f8 94       	cli
    2ba8:	de bf       	out	0x3e, r29	; 62
    2baa:	0f be       	out	0x3f, r0	; 63
    2bac:	cd bf       	out	0x3d, r28	; 61
	u8 n;
	struct update_s upd = {NULL, NULL, {NO_NOTE, NO_INST, 0, 0}, MOD_FLG_CLEAR};
    2bae:	ce 01       	movw	r24, r28
    2bb0:	02 96       	adiw	r24, 0x02	; 2
    2bb2:	2b e8       	ldi	r18, 0x8B	; 139
    2bb4:	31 e0       	ldi	r19, 0x01	; 1
    2bb6:	49 e0       	ldi	r20, 0x09	; 9
    2bb8:	f9 01       	movw	r30, r18
    2bba:	00 80       	ld	r0, Z
    2bbc:	2f 5f       	subi	r18, 0xFF	; 255
    2bbe:	3f 4f       	sbci	r19, 0xFF	; 255
    2bc0:	fc 01       	movw	r30, r24
    2bc2:	00 82       	st	Z, r0
    2bc4:	01 96       	adiw	r24, 0x01	; 1
    2bc6:	41 50       	subi	r20, 0x01	; 1
    2bc8:	44 23       	and	r20, r20
    2bca:	b1 f7       	brne	.-20     	; 0x2bb8 <tickefx+0x1e>
	
	for( n=0; n<PATTERN_CHANNELS; ++n )
    2bcc:	19 82       	std	Y+1, r1	; 0x01
    2bce:	56 c0       	rjmp	.+172    	; 0x2c7c <tickefx+0xe2>
	{
		upd.chn = &channel[n];
    2bd0:	89 81       	ldd	r24, Y+1	; 0x01
    2bd2:	28 2f       	mov	r18, r24
    2bd4:	30 e0       	ldi	r19, 0x00	; 0
    2bd6:	c9 01       	movw	r24, r18
    2bd8:	88 0f       	add	r24, r24
    2bda:	99 1f       	adc	r25, r25
    2bdc:	ac 01       	movw	r20, r24
    2bde:	44 0f       	add	r20, r20
    2be0:	55 1f       	adc	r21, r21
    2be2:	44 0f       	add	r20, r20
    2be4:	55 1f       	adc	r21, r21
    2be6:	84 0f       	add	r24, r20
    2be8:	95 1f       	adc	r25, r21
    2bea:	82 0f       	add	r24, r18
    2bec:	93 1f       	adc	r25, r19
    2bee:	81 55       	subi	r24, 0x51	; 81
    2bf0:	9d 4f       	sbci	r25, 0xFD	; 253
    2bf2:	9b 83       	std	Y+3, r25	; 0x03
    2bf4:	8a 83       	std	Y+2, r24	; 0x02
		if(upd.chn->effect || upd.chn->param)
    2bf6:	8a 81       	ldd	r24, Y+2	; 0x02
    2bf8:	9b 81       	ldd	r25, Y+3	; 0x03
    2bfa:	fc 01       	movw	r30, r24
    2bfc:	83 81       	ldd	r24, Z+3	; 0x03
    2bfe:	88 23       	and	r24, r24
    2c00:	31 f4       	brne	.+12     	; 0x2c0e <tickefx+0x74>
    2c02:	8a 81       	ldd	r24, Y+2	; 0x02
    2c04:	9b 81       	ldd	r25, Y+3	; 0x03
    2c06:	fc 01       	movw	r30, r24
    2c08:	84 81       	ldd	r24, Z+4	; 0x04
    2c0a:	88 23       	and	r24, r24
    2c0c:	a1 f1       	breq	.+104    	; 0x2c76 <tickefx+0xdc>
		{
			upd.sndchn = &mixchn[n];
    2c0e:	89 81       	ldd	r24, Y+1	; 0x01
    2c10:	88 2f       	mov	r24, r24
    2c12:	90 e0       	ldi	r25, 0x00	; 0
    2c14:	9c 01       	movw	r18, r24
    2c16:	22 95       	swap	r18
    2c18:	32 95       	swap	r19
    2c1a:	30 7f       	andi	r19, 0xF0	; 240
    2c1c:	32 27       	eor	r19, r18
    2c1e:	20 7f       	andi	r18, 0xF0	; 240
    2c20:	32 27       	eor	r19, r18
    2c22:	82 0f       	add	r24, r18
    2c24:	93 1f       	adc	r25, r19
    2c26:	8c 5d       	subi	r24, 0xDC	; 220
    2c28:	9a 4f       	sbci	r25, 0xFA	; 250
    2c2a:	9d 83       	std	Y+5, r25	; 0x05
    2c2c:	8c 83       	std	Y+4, r24	; 0x04
		
			if(tickeffect[upd.chn->effect])
    2c2e:	8a 81       	ldd	r24, Y+2	; 0x02
    2c30:	9b 81       	ldd	r25, Y+3	; 0x03
    2c32:	fc 01       	movw	r30, r24
    2c34:	83 81       	ldd	r24, Z+3	; 0x03
    2c36:	88 2f       	mov	r24, r24
    2c38:	90 e0       	ldi	r25, 0x00	; 0
    2c3a:	88 0f       	add	r24, r24
    2c3c:	99 1f       	adc	r25, r25
    2c3e:	80 5e       	subi	r24, 0xE0	; 224
    2c40:	9e 4f       	sbci	r25, 0xFE	; 254
    2c42:	fc 01       	movw	r30, r24
    2c44:	80 81       	ld	r24, Z
    2c46:	91 81       	ldd	r25, Z+1	; 0x01
    2c48:	00 97       	sbiw	r24, 0x00	; 0
    2c4a:	89 f0       	breq	.+34     	; 0x2c6e <tickefx+0xd4>
			{
				tickeffect[upd.chn->effect](&upd);
    2c4c:	8a 81       	ldd	r24, Y+2	; 0x02
    2c4e:	9b 81       	ldd	r25, Y+3	; 0x03
    2c50:	fc 01       	movw	r30, r24
    2c52:	83 81       	ldd	r24, Z+3	; 0x03
    2c54:	88 2f       	mov	r24, r24
    2c56:	90 e0       	ldi	r25, 0x00	; 0
    2c58:	88 0f       	add	r24, r24
    2c5a:	99 1f       	adc	r25, r25
    2c5c:	80 5e       	subi	r24, 0xE0	; 224
    2c5e:	9e 4f       	sbci	r25, 0xFE	; 254
    2c60:	fc 01       	movw	r30, r24
    2c62:	20 81       	ld	r18, Z
    2c64:	31 81       	ldd	r19, Z+1	; 0x01
    2c66:	ce 01       	movw	r24, r28
    2c68:	02 96       	adiw	r24, 0x02	; 2
    2c6a:	f9 01       	movw	r30, r18
    2c6c:	09 95       	icall
			}				
		
			update(&upd);
    2c6e:	ce 01       	movw	r24, r28
    2c70:	02 96       	adiw	r24, 0x02	; 2
    2c72:	0e 94 9b 14 	call	0x2936	; 0x2936 <update>
void tickefx()
{
	u8 n;
	struct update_s upd = {NULL, NULL, {NO_NOTE, NO_INST, 0, 0}, MOD_FLG_CLEAR};
	
	for( n=0; n<PATTERN_CHANNELS; ++n )
    2c76:	89 81       	ldd	r24, Y+1	; 0x01
    2c78:	8f 5f       	subi	r24, 0xFF	; 255
    2c7a:	89 83       	std	Y+1, r24	; 0x01
    2c7c:	89 81       	ldd	r24, Y+1	; 0x01
    2c7e:	84 30       	cpi	r24, 0x04	; 4
    2c80:	08 f4       	brcc	.+2      	; 0x2c84 <tickefx+0xea>
    2c82:	a6 cf       	rjmp	.-180    	; 0x2bd0 <tickefx+0x36>
			}				
		
			update(&upd);
		}		
	}	
}
    2c84:	2a 96       	adiw	r28, 0x0a	; 10
    2c86:	0f b6       	in	r0, 0x3f	; 63
    2c88:	f8 94       	cli
    2c8a:	de bf       	out	0x3e, r29	; 62
    2c8c:	0f be       	out	0x3f, r0	; 63
    2c8e:	cd bf       	out	0x3d, r28	; 61
    2c90:	cf 91       	pop	r28
    2c92:	df 91       	pop	r29
    2c94:	08 95       	ret

00002c96 <seek>:

u8 seek(u8 ord, u8 row)
{
    2c96:	df 93       	push	r29
    2c98:	cf 93       	push	r28
    2c9a:	00 d0       	rcall	.+0      	; 0x2c9c <seek+0x6>
    2c9c:	cd b7       	in	r28, 0x3d	; 61
    2c9e:	de b7       	in	r29, 0x3e	; 62
    2ca0:	89 83       	std	Y+1, r24	; 0x01
    2ca2:	6a 83       	std	Y+2, r22	; 0x02
	curorder = ord;
    2ca4:	89 81       	ldd	r24, Y+1	; 0x01
    2ca6:	80 93 ac 02 	sts	0x02AC, r24
	if(curorder >= sections.numorders)
    2caa:	90 91 a0 02 	lds	r25, 0x02A0
    2cae:	80 91 ac 02 	lds	r24, 0x02AC
    2cb2:	89 17       	cp	r24, r25
    2cb4:	20 f0       	brcs	.+8      	; 0x2cbe <seek+0x28>
	{
		song_state = SONG_STATE_STOP;
    2cb6:	10 92 9c 02 	sts	0x029C, r1
		return 0;
    2cba:	80 e0       	ldi	r24, 0x00	; 0
    2cbc:	22 c0       	rjmp	.+68     	; 0x2d02 <seek+0x6c>
	}
	
	currow = row;
    2cbe:	8a 81       	ldd	r24, Y+2	; 0x02
    2cc0:	80 93 1d 05 	sts	0x051D, r24
	if(currow >= PATTERN_ROWS)
    2cc4:	80 91 1d 05 	lds	r24, 0x051D
    2cc8:	80 34       	cpi	r24, 0x40	; 64
    2cca:	14 f0       	brlt	.+4      	; 0x2cd0 <seek+0x3a>
	{
		currow = 0;
    2ccc:	10 92 1d 05 	sts	0x051D, r1
	}
	
	nextorder = curorder + 1;
    2cd0:	80 91 ac 02 	lds	r24, 0x02AC
    2cd4:	8f 5f       	subi	r24, 0xFF	; 255
    2cd6:	80 93 96 02 	sts	0x0296, r24
	breakrow = 0;
    2cda:	10 92 99 02 	sts	0x0299, r1
	setpattern(&curpattern, order[curorder], currow);
    2cde:	80 91 ac 02 	lds	r24, 0x02AC
    2ce2:	88 2f       	mov	r24, r24
    2ce4:	90 e0       	ldi	r25, 0x00	; 0
    2ce6:	83 52       	subi	r24, 0x23	; 35
    2ce8:	9d 4f       	sbci	r25, 0xFD	; 253
    2cea:	fc 01       	movw	r30, r24
    2cec:	30 81       	ld	r19, Z
    2cee:	80 91 1d 05 	lds	r24, 0x051D
    2cf2:	28 2f       	mov	r18, r24
    2cf4:	8f e1       	ldi	r24, 0x1F	; 31
    2cf6:	95 e0       	ldi	r25, 0x05	; 5
    2cf8:	63 2f       	mov	r22, r19
    2cfa:	42 2f       	mov	r20, r18
    2cfc:	0e 94 7d 12 	call	0x24fa	; 0x24fa <setpattern>
	
	return 1;
    2d00:	81 e0       	ldi	r24, 0x01	; 1
}
    2d02:	0f 90       	pop	r0
    2d04:	0f 90       	pop	r0
    2d06:	cf 91       	pop	r28
    2d08:	df 91       	pop	r29
    2d0a:	08 95       	ret

00002d0c <tick>:

void tick()
{
    2d0c:	df 93       	push	r29
    2d0e:	cf 93       	push	r28
    2d10:	cd b7       	in	r28, 0x3d	; 61
    2d12:	de b7       	in	r29, 0x3e	; 62
	if(++curtick >= speed)
    2d14:	80 91 9b 02 	lds	r24, 0x029B
    2d18:	8f 5f       	subi	r24, 0xFF	; 255
    2d1a:	80 93 9b 02 	sts	0x029B, r24
    2d1e:	90 91 9b 02 	lds	r25, 0x029B
    2d22:	80 91 1e 05 	lds	r24, 0x051E
    2d26:	98 17       	cp	r25, r24
    2d28:	f0 f0       	brcs	.+60     	; 0x2d66 <tick+0x5a>
	{
		curtick = 0;
    2d2a:	10 92 9b 02 	sts	0x029B, r1
		if(currow++ >= PATTERN_ROWS)
    2d2e:	90 91 1d 05 	lds	r25, 0x051D
    2d32:	81 e0       	ldi	r24, 0x01	; 1
    2d34:	90 34       	cpi	r25, 0x40	; 64
    2d36:	0c f4       	brge	.+2      	; 0x2d3a <tick+0x2e>
    2d38:	80 e0       	ldi	r24, 0x00	; 0
    2d3a:	9f 5f       	subi	r25, 0xFF	; 255
    2d3c:	90 93 1d 05 	sts	0x051D, r25
    2d40:	88 23       	and	r24, r24
    2d42:	71 f0       	breq	.+28     	; 0x2d60 <tick+0x54>
		{
			if(!seek(nextorder, breakrow))
    2d44:	80 91 96 02 	lds	r24, 0x0296
    2d48:	90 91 99 02 	lds	r25, 0x0299
    2d4c:	69 2f       	mov	r22, r25
    2d4e:	0e 94 4b 16 	call	0x2c96	; 0x2c96 <seek>
    2d52:	88 23       	and	r24, r24
    2d54:	59 f0       	breq	.+22     	; 0x2d6c <tick+0x60>
			{
				return;
			}
			
			currow++;
    2d56:	80 91 1d 05 	lds	r24, 0x051D
    2d5a:	8f 5f       	subi	r24, 0xFF	; 255
    2d5c:	80 93 1d 05 	sts	0x051D, r24
		}
		row();
    2d60:	0e 94 f6 14 	call	0x29ec	; 0x29ec <row>
    2d64:	04 c0       	rjmp	.+8      	; 0x2d6e <tick+0x62>
	}
	else
	{
		tickefx();
    2d66:	0e 94 cd 15 	call	0x2b9a	; 0x2b9a <tickefx>
    2d6a:	01 c0       	rjmp	.+2      	; 0x2d6e <tick+0x62>
		curtick = 0;
		if(currow++ >= PATTERN_ROWS)
		{
			if(!seek(nextorder, breakrow))
			{
				return;
    2d6c:	00 00       	nop
	}
	else
	{
		tickefx();
	}
}
    2d6e:	cf 91       	pop	r28
    2d70:	df 91       	pop	r29
    2d72:	08 95       	ret

00002d74 <efx0_row>:

void efx0_row(struct update_s* upd)
{
    2d74:	df 93       	push	r29
    2d76:	cf 93       	push	r28
    2d78:	00 d0       	rcall	.+0      	; 0x2d7a <efx0_row+0x6>
    2d7a:	cd b7       	in	r28, 0x3d	; 61
    2d7c:	de b7       	in	r29, 0x3e	; 62
    2d7e:	9a 83       	std	Y+2, r25	; 0x02
    2d80:	89 83       	std	Y+1, r24	; 0x01
	upd->chn->arptick = 1;
    2d82:	89 81       	ldd	r24, Y+1	; 0x01
    2d84:	9a 81       	ldd	r25, Y+2	; 0x02
    2d86:	fc 01       	movw	r30, r24
    2d88:	80 81       	ld	r24, Z
    2d8a:	91 81       	ldd	r25, Z+1	; 0x01
    2d8c:	21 e0       	ldi	r18, 0x01	; 1
    2d8e:	fc 01       	movw	r30, r24
    2d90:	27 83       	std	Z+7, r18	; 0x07
	if(upd->chn->note == NO_NOTE)
    2d92:	89 81       	ldd	r24, Y+1	; 0x01
    2d94:	9a 81       	ldd	r25, Y+2	; 0x02
    2d96:	fc 01       	movw	r30, r24
    2d98:	80 81       	ld	r24, Z
    2d9a:	91 81       	ldd	r25, Z+1	; 0x01
    2d9c:	fc 01       	movw	r30, r24
    2d9e:	82 81       	ldd	r24, Z+2	; 0x02
    2da0:	8f 33       	cpi	r24, 0x3F	; 63
    2da2:	81 f4       	brne	.+32     	; 0x2dc4 <efx0_row+0x50>
	{
		upd->chn->effect = upd->chn->param = 0;
    2da4:	89 81       	ldd	r24, Y+1	; 0x01
    2da6:	9a 81       	ldd	r25, Y+2	; 0x02
    2da8:	fc 01       	movw	r30, r24
    2daa:	20 81       	ld	r18, Z
    2dac:	31 81       	ldd	r19, Z+1	; 0x01
    2dae:	89 81       	ldd	r24, Y+1	; 0x01
    2db0:	9a 81       	ldd	r25, Y+2	; 0x02
    2db2:	fc 01       	movw	r30, r24
    2db4:	80 81       	ld	r24, Z
    2db6:	91 81       	ldd	r25, Z+1	; 0x01
    2db8:	fc 01       	movw	r30, r24
    2dba:	14 82       	std	Z+4, r1	; 0x04
    2dbc:	fc 01       	movw	r30, r24
    2dbe:	84 81       	ldd	r24, Z+4	; 0x04
    2dc0:	f9 01       	movw	r30, r18
    2dc2:	83 83       	std	Z+3, r24	; 0x03
	}
}	
    2dc4:	0f 90       	pop	r0
    2dc6:	0f 90       	pop	r0
    2dc8:	cf 91       	pop	r28
    2dca:	df 91       	pop	r29
    2dcc:	08 95       	ret

00002dce <efx1_row>:
void efx1_row(struct update_s* upd)
{
    2dce:	df 93       	push	r29
    2dd0:	cf 93       	push	r28
    2dd2:	00 d0       	rcall	.+0      	; 0x2dd4 <efx1_row+0x6>
    2dd4:	cd b7       	in	r28, 0x3d	; 61
    2dd6:	de b7       	in	r29, 0x3e	; 62
    2dd8:	9a 83       	std	Y+2, r25	; 0x02
    2dda:	89 83       	std	Y+1, r24	; 0x01
}	
    2ddc:	0f 90       	pop	r0
    2dde:	0f 90       	pop	r0
    2de0:	cf 91       	pop	r28
    2de2:	df 91       	pop	r29
    2de4:	08 95       	ret

00002de6 <efx2_row>:
void efx2_row(struct update_s* upd)
{
    2de6:	df 93       	push	r29
    2de8:	cf 93       	push	r28
    2dea:	00 d0       	rcall	.+0      	; 0x2dec <efx2_row+0x6>
    2dec:	cd b7       	in	r28, 0x3d	; 61
    2dee:	de b7       	in	r29, 0x3e	; 62
    2df0:	9a 83       	std	Y+2, r25	; 0x02
    2df2:	89 83       	std	Y+1, r24	; 0x01
}	
    2df4:	0f 90       	pop	r0
    2df6:	0f 90       	pop	r0
    2df8:	cf 91       	pop	r28
    2dfa:	df 91       	pop	r29
    2dfc:	08 95       	ret

00002dfe <efx3_row>:
void efx3_row(struct update_s* upd)
{
    2dfe:	df 93       	push	r29
    2e00:	cf 93       	push	r28
    2e02:	00 d0       	rcall	.+0      	; 0x2e04 <efx3_row+0x6>
    2e04:	cd b7       	in	r28, 0x3d	; 61
    2e06:	de b7       	in	r29, 0x3e	; 62
    2e08:	9a 83       	std	Y+2, r25	; 0x02
    2e0a:	89 83       	std	Y+1, r24	; 0x01
	if(upd->note.number != NO_NOTE)
    2e0c:	89 81       	ldd	r24, Y+1	; 0x01
    2e0e:	9a 81       	ldd	r25, Y+2	; 0x02
    2e10:	fc 01       	movw	r30, r24
    2e12:	84 81       	ldd	r24, Z+4	; 0x04
    2e14:	8f 33       	cpi	r24, 0x3F	; 63
    2e16:	a9 f0       	breq	.+42     	; 0x2e42 <efx3_row+0x44>
	{
		upd->chn->portaperiod = periodTable[upd->note.number];
    2e18:	89 81       	ldd	r24, Y+1	; 0x01
    2e1a:	9a 81       	ldd	r25, Y+2	; 0x02
    2e1c:	fc 01       	movw	r30, r24
    2e1e:	80 81       	ld	r24, Z
    2e20:	91 81       	ldd	r25, Z+1	; 0x01
    2e22:	29 81       	ldd	r18, Y+1	; 0x01
    2e24:	3a 81       	ldd	r19, Y+2	; 0x02
    2e26:	f9 01       	movw	r30, r18
    2e28:	24 81       	ldd	r18, Z+4	; 0x04
    2e2a:	22 2f       	mov	r18, r18
    2e2c:	30 e0       	ldi	r19, 0x00	; 0
    2e2e:	22 0f       	add	r18, r18
    2e30:	33 1f       	adc	r19, r19
    2e32:	2f 5b       	subi	r18, 0xBF	; 191
    2e34:	3e 4f       	sbci	r19, 0xFE	; 254
    2e36:	f9 01       	movw	r30, r18
    2e38:	20 81       	ld	r18, Z
    2e3a:	31 81       	ldd	r19, Z+1	; 0x01
    2e3c:	fc 01       	movw	r30, r24
    2e3e:	32 87       	std	Z+10, r19	; 0x0a
    2e40:	21 87       	std	Z+9, r18	; 0x09
	}
	
	if(upd->chn->param)
    2e42:	89 81       	ldd	r24, Y+1	; 0x01
    2e44:	9a 81       	ldd	r25, Y+2	; 0x02
    2e46:	fc 01       	movw	r30, r24
    2e48:	80 81       	ld	r24, Z
    2e4a:	91 81       	ldd	r25, Z+1	; 0x01
    2e4c:	fc 01       	movw	r30, r24
    2e4e:	84 81       	ldd	r24, Z+4	; 0x04
    2e50:	88 23       	and	r24, r24
    2e52:	71 f0       	breq	.+28     	; 0x2e70 <efx3_row+0x72>
	{
		upd->chn->portaspeed = upd->chn->param;
    2e54:	89 81       	ldd	r24, Y+1	; 0x01
    2e56:	9a 81       	ldd	r25, Y+2	; 0x02
    2e58:	fc 01       	movw	r30, r24
    2e5a:	80 81       	ld	r24, Z
    2e5c:	91 81       	ldd	r25, Z+1	; 0x01
    2e5e:	29 81       	ldd	r18, Y+1	; 0x01
    2e60:	3a 81       	ldd	r19, Y+2	; 0x02
    2e62:	f9 01       	movw	r30, r18
    2e64:	20 81       	ld	r18, Z
    2e66:	31 81       	ldd	r19, Z+1	; 0x01
    2e68:	f9 01       	movw	r30, r18
    2e6a:	24 81       	ldd	r18, Z+4	; 0x04
    2e6c:	fc 01       	movw	r30, r24
    2e6e:	20 87       	std	Z+8, r18	; 0x08
	}
	
	upd->flags &= ~MOD_FLG_PLAYNOTE;
    2e70:	89 81       	ldd	r24, Y+1	; 0x01
    2e72:	9a 81       	ldd	r25, Y+2	; 0x02
    2e74:	fc 01       	movw	r30, r24
    2e76:	80 85       	ldd	r24, Z+8	; 0x08
    2e78:	28 2f       	mov	r18, r24
    2e7a:	2f 7d       	andi	r18, 0xDF	; 223
    2e7c:	89 81       	ldd	r24, Y+1	; 0x01
    2e7e:	9a 81       	ldd	r25, Y+2	; 0x02
    2e80:	fc 01       	movw	r30, r24
    2e82:	20 87       	std	Z+8, r18	; 0x08
}	
    2e84:	0f 90       	pop	r0
    2e86:	0f 90       	pop	r0
    2e88:	cf 91       	pop	r28
    2e8a:	df 91       	pop	r29
    2e8c:	08 95       	ret

00002e8e <efx4_row>:
void efx4_row(struct update_s* upd)
{
    2e8e:	df 93       	push	r29
    2e90:	cf 93       	push	r28
    2e92:	00 d0       	rcall	.+0      	; 0x2e94 <efx4_row+0x6>
    2e94:	cd b7       	in	r28, 0x3d	; 61
    2e96:	de b7       	in	r29, 0x3e	; 62
    2e98:	9a 83       	std	Y+2, r25	; 0x02
    2e9a:	89 83       	std	Y+1, r24	; 0x01
}	
    2e9c:	0f 90       	pop	r0
    2e9e:	0f 90       	pop	r0
    2ea0:	cf 91       	pop	r28
    2ea2:	df 91       	pop	r29
    2ea4:	08 95       	ret

00002ea6 <efx5_row>:
void efx5_row(struct update_s* upd)
{
    2ea6:	df 93       	push	r29
    2ea8:	cf 93       	push	r28
    2eaa:	00 d0       	rcall	.+0      	; 0x2eac <efx5_row+0x6>
    2eac:	cd b7       	in	r28, 0x3d	; 61
    2eae:	de b7       	in	r29, 0x3e	; 62
    2eb0:	9a 83       	std	Y+2, r25	; 0x02
    2eb2:	89 83       	std	Y+1, r24	; 0x01
}	
    2eb4:	0f 90       	pop	r0
    2eb6:	0f 90       	pop	r0
    2eb8:	cf 91       	pop	r28
    2eba:	df 91       	pop	r29
    2ebc:	08 95       	ret

00002ebe <efx6_row>:
void efx6_row(struct update_s* upd)
{
    2ebe:	df 93       	push	r29
    2ec0:	cf 93       	push	r28
    2ec2:	00 d0       	rcall	.+0      	; 0x2ec4 <efx6_row+0x6>
    2ec4:	cd b7       	in	r28, 0x3d	; 61
    2ec6:	de b7       	in	r29, 0x3e	; 62
    2ec8:	9a 83       	std	Y+2, r25	; 0x02
    2eca:	89 83       	std	Y+1, r24	; 0x01
}	
    2ecc:	0f 90       	pop	r0
    2ece:	0f 90       	pop	r0
    2ed0:	cf 91       	pop	r28
    2ed2:	df 91       	pop	r29
    2ed4:	08 95       	ret

00002ed6 <efx7_row>:
void efx7_row(struct update_s* upd)
{
    2ed6:	df 93       	push	r29
    2ed8:	cf 93       	push	r28
    2eda:	00 d0       	rcall	.+0      	; 0x2edc <efx7_row+0x6>
    2edc:	cd b7       	in	r28, 0x3d	; 61
    2ede:	de b7       	in	r29, 0x3e	; 62
    2ee0:	9a 83       	std	Y+2, r25	; 0x02
    2ee2:	89 83       	std	Y+1, r24	; 0x01
}	
    2ee4:	0f 90       	pop	r0
    2ee6:	0f 90       	pop	r0
    2ee8:	cf 91       	pop	r28
    2eea:	df 91       	pop	r29
    2eec:	08 95       	ret

00002eee <efx8_row>:
void efx8_row(struct update_s* upd)
{
    2eee:	df 93       	push	r29
    2ef0:	cf 93       	push	r28
    2ef2:	00 d0       	rcall	.+0      	; 0x2ef4 <efx8_row+0x6>
    2ef4:	cd b7       	in	r28, 0x3d	; 61
    2ef6:	de b7       	in	r29, 0x3e	; 62
    2ef8:	9a 83       	std	Y+2, r25	; 0x02
    2efa:	89 83       	std	Y+1, r24	; 0x01
}	
    2efc:	0f 90       	pop	r0
    2efe:	0f 90       	pop	r0
    2f00:	cf 91       	pop	r28
    2f02:	df 91       	pop	r29
    2f04:	08 95       	ret

00002f06 <efx9_row>:
void efx9_row(struct update_s* upd)
{
    2f06:	df 93       	push	r29
    2f08:	cf 93       	push	r28
    2f0a:	00 d0       	rcall	.+0      	; 0x2f0c <efx9_row+0x6>
    2f0c:	cd b7       	in	r28, 0x3d	; 61
    2f0e:	de b7       	in	r29, 0x3e	; 62
    2f10:	9a 83       	std	Y+2, r25	; 0x02
    2f12:	89 83       	std	Y+1, r24	; 0x01
}
    2f14:	0f 90       	pop	r0
    2f16:	0f 90       	pop	r0
    2f18:	cf 91       	pop	r28
    2f1a:	df 91       	pop	r29
    2f1c:	08 95       	ret

00002f1e <efxA_row>:
void efxA_row(struct update_s* upd)
{
    2f1e:	df 93       	push	r29
    2f20:	cf 93       	push	r28
    2f22:	00 d0       	rcall	.+0      	; 0x2f24 <efxA_row+0x6>
    2f24:	cd b7       	in	r28, 0x3d	; 61
    2f26:	de b7       	in	r29, 0x3e	; 62
    2f28:	9a 83       	std	Y+2, r25	; 0x02
    2f2a:	89 83       	std	Y+1, r24	; 0x01
}	
    2f2c:	0f 90       	pop	r0
    2f2e:	0f 90       	pop	r0
    2f30:	cf 91       	pop	r28
    2f32:	df 91       	pop	r29
    2f34:	08 95       	ret

00002f36 <efxB_row>:
void efxB_row(struct update_s* upd)
{
    2f36:	df 93       	push	r29
    2f38:	cf 93       	push	r28
    2f3a:	00 d0       	rcall	.+0      	; 0x2f3c <efxB_row+0x6>
    2f3c:	cd b7       	in	r28, 0x3d	; 61
    2f3e:	de b7       	in	r29, 0x3e	; 62
    2f40:	9a 83       	std	Y+2, r25	; 0x02
    2f42:	89 83       	std	Y+1, r24	; 0x01
	nextorder = upd->chn->param;
    2f44:	89 81       	ldd	r24, Y+1	; 0x01
    2f46:	9a 81       	ldd	r25, Y+2	; 0x02
    2f48:	fc 01       	movw	r30, r24
    2f4a:	80 81       	ld	r24, Z
    2f4c:	91 81       	ldd	r25, Z+1	; 0x01
    2f4e:	fc 01       	movw	r30, r24
    2f50:	84 81       	ldd	r24, Z+4	; 0x04
    2f52:	80 93 96 02 	sts	0x0296, r24
	currow = PATTERN_ROWS;
    2f56:	80 e4       	ldi	r24, 0x40	; 64
    2f58:	80 93 1d 05 	sts	0x051D, r24
}	
    2f5c:	0f 90       	pop	r0
    2f5e:	0f 90       	pop	r0
    2f60:	cf 91       	pop	r28
    2f62:	df 91       	pop	r29
    2f64:	08 95       	ret

00002f66 <efxC_row>:
void efxC_row(struct update_s* upd)
{
    2f66:	df 93       	push	r29
    2f68:	cf 93       	push	r28
    2f6a:	00 d0       	rcall	.+0      	; 0x2f6c <efxC_row+0x6>
    2f6c:	cd b7       	in	r28, 0x3d	; 61
    2f6e:	de b7       	in	r29, 0x3e	; 62
    2f70:	9a 83       	std	Y+2, r25	; 0x02
    2f72:	89 83       	std	Y+1, r24	; 0x01
	upd->chn->volume = upd->note.param;
    2f74:	89 81       	ldd	r24, Y+1	; 0x01
    2f76:	9a 81       	ldd	r25, Y+2	; 0x02
    2f78:	fc 01       	movw	r30, r24
    2f7a:	80 81       	ld	r24, Z
    2f7c:	91 81       	ldd	r25, Z+1	; 0x01
    2f7e:	29 81       	ldd	r18, Y+1	; 0x01
    2f80:	3a 81       	ldd	r19, Y+2	; 0x02
    2f82:	f9 01       	movw	r30, r18
    2f84:	27 81       	ldd	r18, Z+7	; 0x07
    2f86:	fc 01       	movw	r30, r24
    2f88:	21 83       	std	Z+1, r18	; 0x01
	upd->flags |= MOD_FLG_UPDATEVOL;
    2f8a:	89 81       	ldd	r24, Y+1	; 0x01
    2f8c:	9a 81       	ldd	r25, Y+2	; 0x02
    2f8e:	fc 01       	movw	r30, r24
    2f90:	80 85       	ldd	r24, Z+8	; 0x08
    2f92:	28 2f       	mov	r18, r24
    2f94:	21 60       	ori	r18, 0x01	; 1
    2f96:	89 81       	ldd	r24, Y+1	; 0x01
    2f98:	9a 81       	ldd	r25, Y+2	; 0x02
    2f9a:	fc 01       	movw	r30, r24
    2f9c:	20 87       	std	Z+8, r18	; 0x08
}	
    2f9e:	0f 90       	pop	r0
    2fa0:	0f 90       	pop	r0
    2fa2:	cf 91       	pop	r28
    2fa4:	df 91       	pop	r29
    2fa6:	08 95       	ret

00002fa8 <efxD_row>:
void efxD_row(struct update_s* upd)
{
    2fa8:	df 93       	push	r29
    2faa:	cf 93       	push	r28
    2fac:	00 d0       	rcall	.+0      	; 0x2fae <efxD_row+0x6>
    2fae:	cd b7       	in	r28, 0x3d	; 61
    2fb0:	de b7       	in	r29, 0x3e	; 62
    2fb2:	9a 83       	std	Y+2, r25	; 0x02
    2fb4:	89 83       	std	Y+1, r24	; 0x01
	breakrow = upd->chn->param;
    2fb6:	89 81       	ldd	r24, Y+1	; 0x01
    2fb8:	9a 81       	ldd	r25, Y+2	; 0x02
    2fba:	fc 01       	movw	r30, r24
    2fbc:	80 81       	ld	r24, Z
    2fbe:	91 81       	ldd	r25, Z+1	; 0x01
    2fc0:	fc 01       	movw	r30, r24
    2fc2:	84 81       	ldd	r24, Z+4	; 0x04
    2fc4:	80 93 99 02 	sts	0x0299, r24
	currow = PATTERN_ROWS;
    2fc8:	80 e4       	ldi	r24, 0x40	; 64
    2fca:	80 93 1d 05 	sts	0x051D, r24
}	
    2fce:	0f 90       	pop	r0
    2fd0:	0f 90       	pop	r0
    2fd2:	cf 91       	pop	r28
    2fd4:	df 91       	pop	r29
    2fd6:	08 95       	ret

00002fd8 <efxE_row>:
void efxE_row(struct update_s* upd)
{
    2fd8:	df 93       	push	r29
    2fda:	cf 93       	push	r28
    2fdc:	00 d0       	rcall	.+0      	; 0x2fde <efxE_row+0x6>
    2fde:	cd b7       	in	r28, 0x3d	; 61
    2fe0:	de b7       	in	r29, 0x3e	; 62
    2fe2:	9a 83       	std	Y+2, r25	; 0x02
    2fe4:	89 83       	std	Y+1, r24	; 0x01
}
    2fe6:	0f 90       	pop	r0
    2fe8:	0f 90       	pop	r0
    2fea:	cf 91       	pop	r28
    2fec:	df 91       	pop	r29
    2fee:	08 95       	ret

00002ff0 <efxF_row>:
void efxF_row(struct update_s* upd)
{
    2ff0:	df 93       	push	r29
    2ff2:	cf 93       	push	r28
    2ff4:	00 d0       	rcall	.+0      	; 0x2ff6 <efxF_row+0x6>
    2ff6:	cd b7       	in	r28, 0x3d	; 61
    2ff8:	de b7       	in	r29, 0x3e	; 62
    2ffa:	9a 83       	std	Y+2, r25	; 0x02
    2ffc:	89 83       	std	Y+1, r24	; 0x01
	if(upd->note.param <= 31)
    2ffe:	89 81       	ldd	r24, Y+1	; 0x01
    3000:	9a 81       	ldd	r25, Y+2	; 0x02
    3002:	fc 01       	movw	r30, r24
    3004:	87 81       	ldd	r24, Z+7	; 0x07
    3006:	80 32       	cpi	r24, 0x20	; 32
    3008:	38 f4       	brcc	.+14     	; 0x3018 <efxF_row+0x28>
	{
		speed = upd->note.param;
    300a:	89 81       	ldd	r24, Y+1	; 0x01
    300c:	9a 81       	ldd	r25, Y+2	; 0x02
    300e:	fc 01       	movw	r30, r24
    3010:	87 81       	ldd	r24, Z+7	; 0x07
    3012:	80 93 1e 05 	sts	0x051E, r24
    3016:	12 c0       	rjmp	.+36     	; 0x303c <efxF_row+0x4c>
	}
	else
	{
		bpm = BPM(upd->note.param);
    3018:	89 81       	ldd	r24, Y+1	; 0x01
    301a:	9a 81       	ldd	r25, Y+2	; 0x02
    301c:	fc 01       	movw	r30, r24
    301e:	87 81       	ldd	r24, Z+7	; 0x07
    3020:	88 2f       	mov	r24, r24
    3022:	90 e0       	ldi	r25, 0x00	; 0
    3024:	80 97       	sbiw	r24, 0x20	; 32
    3026:	88 0f       	add	r24, r24
    3028:	99 1f       	adc	r25, r25
    302a:	83 5a       	subi	r24, 0xA3	; 163
    302c:	9c 4f       	sbci	r25, 0xFC	; 252
    302e:	fc 01       	movw	r30, r24
    3030:	80 81       	ld	r24, Z
    3032:	91 81       	ldd	r25, Z+1	; 0x01
    3034:	90 93 dc 02 	sts	0x02DC, r25
    3038:	80 93 db 02 	sts	0x02DB, r24
	}
}
    303c:	0f 90       	pop	r0
    303e:	0f 90       	pop	r0
    3040:	cf 91       	pop	r28
    3042:	df 91       	pop	r29
    3044:	08 95       	ret

00003046 <efx0_tick>:
void efx0_tick(struct update_s* upd)
{
    3046:	df 93       	push	r29
    3048:	cf 93       	push	r28
    304a:	00 d0       	rcall	.+0      	; 0x304c <efx0_tick+0x6>
    304c:	0f 92       	push	r0
    304e:	cd b7       	in	r28, 0x3d	; 61
    3050:	de b7       	in	r29, 0x3e	; 62
    3052:	9b 83       	std	Y+3, r25	; 0x03
    3054:	8a 83       	std	Y+2, r24	; 0x02
	u8 arpnote = upd->chn->note;
    3056:	8a 81       	ldd	r24, Y+2	; 0x02
    3058:	9b 81       	ldd	r25, Y+3	; 0x03
    305a:	fc 01       	movw	r30, r24
    305c:	80 81       	ld	r24, Z
    305e:	91 81       	ldd	r25, Z+1	; 0x01
    3060:	fc 01       	movw	r30, r24
    3062:	82 81       	ldd	r24, Z+2	; 0x02
    3064:	89 83       	std	Y+1, r24	; 0x01
	
	switch(upd->chn->arptick)
    3066:	8a 81       	ldd	r24, Y+2	; 0x02
    3068:	9b 81       	ldd	r25, Y+3	; 0x03
    306a:	fc 01       	movw	r30, r24
    306c:	80 81       	ld	r24, Z
    306e:	91 81       	ldd	r25, Z+1	; 0x01
    3070:	fc 01       	movw	r30, r24
    3072:	87 81       	ldd	r24, Z+7	; 0x07
    3074:	88 2f       	mov	r24, r24
    3076:	90 e0       	ldi	r25, 0x00	; 0
    3078:	81 30       	cpi	r24, 0x01	; 1
    307a:	91 05       	cpc	r25, r1
    307c:	21 f0       	breq	.+8      	; 0x3086 <efx0_tick+0x40>
    307e:	82 30       	cpi	r24, 0x02	; 2
    3080:	91 05       	cpc	r25, r1
    3082:	71 f0       	breq	.+28     	; 0x30a0 <efx0_tick+0x5a>
	{
		default:
		case 0: break;
    3084:	19 c0       	rjmp	.+50     	; 0x30b8 <efx0_tick+0x72>
		case 1: arpnote += (upd->chn->param>>4); break;
    3086:	8a 81       	ldd	r24, Y+2	; 0x02
    3088:	9b 81       	ldd	r25, Y+3	; 0x03
    308a:	fc 01       	movw	r30, r24
    308c:	80 81       	ld	r24, Z
    308e:	91 81       	ldd	r25, Z+1	; 0x01
    3090:	fc 01       	movw	r30, r24
    3092:	84 81       	ldd	r24, Z+4	; 0x04
    3094:	82 95       	swap	r24
    3096:	8f 70       	andi	r24, 0x0F	; 15
    3098:	99 81       	ldd	r25, Y+1	; 0x01
    309a:	89 0f       	add	r24, r25
    309c:	89 83       	std	Y+1, r24	; 0x01
    309e:	0c c0       	rjmp	.+24     	; 0x30b8 <efx0_tick+0x72>
		case 2: arpnote += (upd->chn->param&0x0F); break;
    30a0:	8a 81       	ldd	r24, Y+2	; 0x02
    30a2:	9b 81       	ldd	r25, Y+3	; 0x03
    30a4:	fc 01       	movw	r30, r24
    30a6:	80 81       	ld	r24, Z
    30a8:	91 81       	ldd	r25, Z+1	; 0x01
    30aa:	fc 01       	movw	r30, r24
    30ac:	84 81       	ldd	r24, Z+4	; 0x04
    30ae:	8f 70       	andi	r24, 0x0F	; 15
    30b0:	99 81       	ldd	r25, Y+1	; 0x01
    30b2:	89 0f       	add	r24, r25
    30b4:	89 83       	std	Y+1, r24	; 0x01
    30b6:	00 00       	nop
	}
	
	if(++upd->chn->arptick > 2)
    30b8:	8a 81       	ldd	r24, Y+2	; 0x02
    30ba:	9b 81       	ldd	r25, Y+3	; 0x03
    30bc:	fc 01       	movw	r30, r24
    30be:	80 81       	ld	r24, Z
    30c0:	91 81       	ldd	r25, Z+1	; 0x01
    30c2:	fc 01       	movw	r30, r24
    30c4:	27 81       	ldd	r18, Z+7	; 0x07
    30c6:	2f 5f       	subi	r18, 0xFF	; 255
    30c8:	fc 01       	movw	r30, r24
    30ca:	27 83       	std	Z+7, r18	; 0x07
    30cc:	fc 01       	movw	r30, r24
    30ce:	87 81       	ldd	r24, Z+7	; 0x07
    30d0:	83 30       	cpi	r24, 0x03	; 3
    30d2:	38 f0       	brcs	.+14     	; 0x30e2 <efx0_tick+0x9c>
	{
		upd->chn->arptick = 0;
    30d4:	8a 81       	ldd	r24, Y+2	; 0x02
    30d6:	9b 81       	ldd	r25, Y+3	; 0x03
    30d8:	fc 01       	movw	r30, r24
    30da:	80 81       	ld	r24, Z
    30dc:	91 81       	ldd	r25, Z+1	; 0x01
    30de:	fc 01       	movw	r30, r24
    30e0:	17 82       	std	Z+7, r1	; 0x07
	}
	
	if(arpnote >= NUM_NOTES)
    30e2:	89 81       	ldd	r24, Y+1	; 0x01
    30e4:	84 32       	cpi	r24, 0x24	; 36
    30e6:	10 f0       	brcs	.+4      	; 0x30ec <efx0_tick+0xa6>
	{
		arpnote = NUM_NOTES-1;
    30e8:	83 e2       	ldi	r24, 0x23	; 35
    30ea:	89 83       	std	Y+1, r24	; 0x01
	}
	
	upd->chn->freq = periodTable[arpnote];
    30ec:	8a 81       	ldd	r24, Y+2	; 0x02
    30ee:	9b 81       	ldd	r25, Y+3	; 0x03
    30f0:	fc 01       	movw	r30, r24
    30f2:	80 81       	ld	r24, Z
    30f4:	91 81       	ldd	r25, Z+1	; 0x01
    30f6:	29 81       	ldd	r18, Y+1	; 0x01
    30f8:	22 2f       	mov	r18, r18
    30fa:	30 e0       	ldi	r19, 0x00	; 0
    30fc:	22 0f       	add	r18, r18
    30fe:	33 1f       	adc	r19, r19
    3100:	2f 5b       	subi	r18, 0xBF	; 191
    3102:	3e 4f       	sbci	r19, 0xFE	; 254
    3104:	f9 01       	movw	r30, r18
    3106:	20 81       	ld	r18, Z
    3108:	31 81       	ldd	r19, Z+1	; 0x01
    310a:	fc 01       	movw	r30, r24
    310c:	36 83       	std	Z+6, r19	; 0x06
    310e:	25 83       	std	Z+5, r18	; 0x05
	upd->flags |= MOD_FLG_UPDATEPITCH;
    3110:	8a 81       	ldd	r24, Y+2	; 0x02
    3112:	9b 81       	ldd	r25, Y+3	; 0x03
    3114:	fc 01       	movw	r30, r24
    3116:	80 85       	ldd	r24, Z+8	; 0x08
    3118:	28 2f       	mov	r18, r24
    311a:	22 60       	ori	r18, 0x02	; 2
    311c:	8a 81       	ldd	r24, Y+2	; 0x02
    311e:	9b 81       	ldd	r25, Y+3	; 0x03
    3120:	fc 01       	movw	r30, r24
    3122:	20 87       	std	Z+8, r18	; 0x08
}	
    3124:	0f 90       	pop	r0
    3126:	0f 90       	pop	r0
    3128:	0f 90       	pop	r0
    312a:	cf 91       	pop	r28
    312c:	df 91       	pop	r29
    312e:	08 95       	ret

00003130 <pitchslide>:

s16 pitchslide(s16 period, s8 slide)
{
    3130:	df 93       	push	r29
    3132:	cf 93       	push	r28
    3134:	00 d0       	rcall	.+0      	; 0x3136 <pitchslide+0x6>
    3136:	0f 92       	push	r0
    3138:	cd b7       	in	r28, 0x3d	; 61
    313a:	de b7       	in	r29, 0x3e	; 62
    313c:	9a 83       	std	Y+2, r25	; 0x02
    313e:	89 83       	std	Y+1, r24	; 0x01
    3140:	6b 83       	std	Y+3, r22	; 0x03
	period += slide;
    3142:	8b 81       	ldd	r24, Y+3	; 0x03
    3144:	99 27       	eor	r25, r25
    3146:	87 fd       	sbrc	r24, 7
    3148:	90 95       	com	r25
    314a:	29 81       	ldd	r18, Y+1	; 0x01
    314c:	3a 81       	ldd	r19, Y+2	; 0x02
    314e:	82 0f       	add	r24, r18
    3150:	93 1f       	adc	r25, r19
    3152:	9a 83       	std	Y+2, r25	; 0x02
    3154:	89 83       	std	Y+1, r24	; 0x01
	if(period > MAX_PERIOD)
    3156:	89 81       	ldd	r24, Y+1	; 0x01
    3158:	9a 81       	ldd	r25, Y+2	; 0x02
    315a:	23 e0       	ldi	r18, 0x03	; 3
    315c:	89 35       	cpi	r24, 0x59	; 89
    315e:	92 07       	cpc	r25, r18
    3160:	2c f0       	brlt	.+10     	; 0x316c <pitchslide+0x3c>
	{
		period = MAX_PERIOD;
    3162:	88 e5       	ldi	r24, 0x58	; 88
    3164:	93 e0       	ldi	r25, 0x03	; 3
    3166:	9a 83       	std	Y+2, r25	; 0x02
    3168:	89 83       	std	Y+1, r24	; 0x01
    316a:	09 c0       	rjmp	.+18     	; 0x317e <pitchslide+0x4e>
	}
	else if(period < MIN_PERIOD)
    316c:	89 81       	ldd	r24, Y+1	; 0x01
    316e:	9a 81       	ldd	r25, Y+2	; 0x02
    3170:	81 37       	cpi	r24, 0x71	; 113
    3172:	91 05       	cpc	r25, r1
    3174:	24 f4       	brge	.+8      	; 0x317e <pitchslide+0x4e>
	{
		period = MIN_PERIOD;
    3176:	81 e7       	ldi	r24, 0x71	; 113
    3178:	90 e0       	ldi	r25, 0x00	; 0
    317a:	9a 83       	std	Y+2, r25	; 0x02
    317c:	89 83       	std	Y+1, r24	; 0x01
	}
	
	return period;
    317e:	89 81       	ldd	r24, Y+1	; 0x01
    3180:	9a 81       	ldd	r25, Y+2	; 0x02
}
    3182:	0f 90       	pop	r0
    3184:	0f 90       	pop	r0
    3186:	0f 90       	pop	r0
    3188:	cf 91       	pop	r28
    318a:	df 91       	pop	r29
    318c:	08 95       	ret

0000318e <efx1_tick>:
void efx1_tick(struct update_s* upd)
{
    318e:	0f 93       	push	r16
    3190:	1f 93       	push	r17
    3192:	df 93       	push	r29
    3194:	cf 93       	push	r28
    3196:	00 d0       	rcall	.+0      	; 0x3198 <efx1_tick+0xa>
    3198:	cd b7       	in	r28, 0x3d	; 61
    319a:	de b7       	in	r29, 0x3e	; 62
    319c:	9a 83       	std	Y+2, r25	; 0x02
    319e:	89 83       	std	Y+1, r24	; 0x01
	upd->chn->freq = pitchslide((s16)upd->chn->freq, -(s8)upd->chn->param);
    31a0:	89 81       	ldd	r24, Y+1	; 0x01
    31a2:	9a 81       	ldd	r25, Y+2	; 0x02
    31a4:	fc 01       	movw	r30, r24
    31a6:	00 81       	ld	r16, Z
    31a8:	11 81       	ldd	r17, Z+1	; 0x01
    31aa:	89 81       	ldd	r24, Y+1	; 0x01
    31ac:	9a 81       	ldd	r25, Y+2	; 0x02
    31ae:	fc 01       	movw	r30, r24
    31b0:	80 81       	ld	r24, Z
    31b2:	91 81       	ldd	r25, Z+1	; 0x01
    31b4:	fc 01       	movw	r30, r24
    31b6:	85 81       	ldd	r24, Z+5	; 0x05
    31b8:	96 81       	ldd	r25, Z+6	; 0x06
    31ba:	29 81       	ldd	r18, Y+1	; 0x01
    31bc:	3a 81       	ldd	r19, Y+2	; 0x02
    31be:	f9 01       	movw	r30, r18
    31c0:	20 81       	ld	r18, Z
    31c2:	31 81       	ldd	r19, Z+1	; 0x01
    31c4:	f9 01       	movw	r30, r18
    31c6:	24 81       	ldd	r18, Z+4	; 0x04
    31c8:	21 95       	neg	r18
    31ca:	62 2f       	mov	r22, r18
    31cc:	0e 94 98 18 	call	0x3130	; 0x3130 <pitchslide>
    31d0:	f8 01       	movw	r30, r16
    31d2:	96 83       	std	Z+6, r25	; 0x06
    31d4:	85 83       	std	Z+5, r24	; 0x05
	upd->flags |= MOD_FLG_UPDATEPITCH;
    31d6:	89 81       	ldd	r24, Y+1	; 0x01
    31d8:	9a 81       	ldd	r25, Y+2	; 0x02
    31da:	fc 01       	movw	r30, r24
    31dc:	80 85       	ldd	r24, Z+8	; 0x08
    31de:	28 2f       	mov	r18, r24
    31e0:	22 60       	ori	r18, 0x02	; 2
    31e2:	89 81       	ldd	r24, Y+1	; 0x01
    31e4:	9a 81       	ldd	r25, Y+2	; 0x02
    31e6:	fc 01       	movw	r30, r24
    31e8:	20 87       	std	Z+8, r18	; 0x08
}	
    31ea:	0f 90       	pop	r0
    31ec:	0f 90       	pop	r0
    31ee:	cf 91       	pop	r28
    31f0:	df 91       	pop	r29
    31f2:	1f 91       	pop	r17
    31f4:	0f 91       	pop	r16
    31f6:	08 95       	ret

000031f8 <efx2_tick>:
void efx2_tick(struct update_s* upd)
{
    31f8:	0f 93       	push	r16
    31fa:	1f 93       	push	r17
    31fc:	df 93       	push	r29
    31fe:	cf 93       	push	r28
    3200:	00 d0       	rcall	.+0      	; 0x3202 <efx2_tick+0xa>
    3202:	cd b7       	in	r28, 0x3d	; 61
    3204:	de b7       	in	r29, 0x3e	; 62
    3206:	9a 83       	std	Y+2, r25	; 0x02
    3208:	89 83       	std	Y+1, r24	; 0x01
	upd->chn->freq = pitchslide(upd->chn->freq, (s8)upd->chn->param);
    320a:	89 81       	ldd	r24, Y+1	; 0x01
    320c:	9a 81       	ldd	r25, Y+2	; 0x02
    320e:	fc 01       	movw	r30, r24
    3210:	00 81       	ld	r16, Z
    3212:	11 81       	ldd	r17, Z+1	; 0x01
    3214:	89 81       	ldd	r24, Y+1	; 0x01
    3216:	9a 81       	ldd	r25, Y+2	; 0x02
    3218:	fc 01       	movw	r30, r24
    321a:	80 81       	ld	r24, Z
    321c:	91 81       	ldd	r25, Z+1	; 0x01
    321e:	fc 01       	movw	r30, r24
    3220:	85 81       	ldd	r24, Z+5	; 0x05
    3222:	96 81       	ldd	r25, Z+6	; 0x06
    3224:	29 81       	ldd	r18, Y+1	; 0x01
    3226:	3a 81       	ldd	r19, Y+2	; 0x02
    3228:	f9 01       	movw	r30, r18
    322a:	20 81       	ld	r18, Z
    322c:	31 81       	ldd	r19, Z+1	; 0x01
    322e:	f9 01       	movw	r30, r18
    3230:	24 81       	ldd	r18, Z+4	; 0x04
    3232:	62 2f       	mov	r22, r18
    3234:	0e 94 98 18 	call	0x3130	; 0x3130 <pitchslide>
    3238:	f8 01       	movw	r30, r16
    323a:	96 83       	std	Z+6, r25	; 0x06
    323c:	85 83       	std	Z+5, r24	; 0x05
	upd->flags |= MOD_FLG_UPDATEPITCH;
    323e:	89 81       	ldd	r24, Y+1	; 0x01
    3240:	9a 81       	ldd	r25, Y+2	; 0x02
    3242:	fc 01       	movw	r30, r24
    3244:	80 85       	ldd	r24, Z+8	; 0x08
    3246:	28 2f       	mov	r18, r24
    3248:	22 60       	ori	r18, 0x02	; 2
    324a:	89 81       	ldd	r24, Y+1	; 0x01
    324c:	9a 81       	ldd	r25, Y+2	; 0x02
    324e:	fc 01       	movw	r30, r24
    3250:	20 87       	std	Z+8, r18	; 0x08
}	
    3252:	0f 90       	pop	r0
    3254:	0f 90       	pop	r0
    3256:	cf 91       	pop	r28
    3258:	df 91       	pop	r29
    325a:	1f 91       	pop	r17
    325c:	0f 91       	pop	r16
    325e:	08 95       	ret

00003260 <efx3_tick>:
void efx3_tick(struct update_s* upd)
{
    3260:	0f 93       	push	r16
    3262:	1f 93       	push	r17
    3264:	df 93       	push	r29
    3266:	cf 93       	push	r28
    3268:	00 d0       	rcall	.+0      	; 0x326a <efx3_tick+0xa>
    326a:	cd b7       	in	r28, 0x3d	; 61
    326c:	de b7       	in	r29, 0x3e	; 62
    326e:	9a 83       	std	Y+2, r25	; 0x02
    3270:	89 83       	std	Y+1, r24	; 0x01

	if(upd->chn->freq < upd->chn->portaperiod)
    3272:	89 81       	ldd	r24, Y+1	; 0x01
    3274:	9a 81       	ldd	r25, Y+2	; 0x02
    3276:	fc 01       	movw	r30, r24
    3278:	80 81       	ld	r24, Z
    327a:	91 81       	ldd	r25, Z+1	; 0x01
    327c:	fc 01       	movw	r30, r24
    327e:	25 81       	ldd	r18, Z+5	; 0x05
    3280:	36 81       	ldd	r19, Z+6	; 0x06
    3282:	89 81       	ldd	r24, Y+1	; 0x01
    3284:	9a 81       	ldd	r25, Y+2	; 0x02
    3286:	fc 01       	movw	r30, r24
    3288:	80 81       	ld	r24, Z
    328a:	91 81       	ldd	r25, Z+1	; 0x01
    328c:	fc 01       	movw	r30, r24
    328e:	81 85       	ldd	r24, Z+9	; 0x09
    3290:	92 85       	ldd	r25, Z+10	; 0x0a
    3292:	28 17       	cp	r18, r24
    3294:	39 07       	cpc	r19, r25
    3296:	08 f0       	brcs	.+2      	; 0x329a <efx3_tick+0x3a>
    3298:	3f c0       	rjmp	.+126    	; 0x3318 <efx3_tick+0xb8>
	{
		upd->chn->freq = pitchslide(upd->chn->freq, (s8)upd->chn->portaspeed);
    329a:	89 81       	ldd	r24, Y+1	; 0x01
    329c:	9a 81       	ldd	r25, Y+2	; 0x02
    329e:	fc 01       	movw	r30, r24
    32a0:	00 81       	ld	r16, Z
    32a2:	11 81       	ldd	r17, Z+1	; 0x01
    32a4:	89 81       	ldd	r24, Y+1	; 0x01
    32a6:	9a 81       	ldd	r25, Y+2	; 0x02
    32a8:	fc 01       	movw	r30, r24
    32aa:	80 81       	ld	r24, Z
    32ac:	91 81       	ldd	r25, Z+1	; 0x01
    32ae:	fc 01       	movw	r30, r24
    32b0:	85 81       	ldd	r24, Z+5	; 0x05
    32b2:	96 81       	ldd	r25, Z+6	; 0x06
    32b4:	29 81       	ldd	r18, Y+1	; 0x01
    32b6:	3a 81       	ldd	r19, Y+2	; 0x02
    32b8:	f9 01       	movw	r30, r18
    32ba:	20 81       	ld	r18, Z
    32bc:	31 81       	ldd	r19, Z+1	; 0x01
    32be:	f9 01       	movw	r30, r18
    32c0:	20 85       	ldd	r18, Z+8	; 0x08
    32c2:	62 2f       	mov	r22, r18
    32c4:	0e 94 98 18 	call	0x3130	; 0x3130 <pitchslide>
    32c8:	f8 01       	movw	r30, r16
    32ca:	96 83       	std	Z+6, r25	; 0x06
    32cc:	85 83       	std	Z+5, r24	; 0x05
		if(upd->chn->freq > upd->chn->portaperiod)
    32ce:	89 81       	ldd	r24, Y+1	; 0x01
    32d0:	9a 81       	ldd	r25, Y+2	; 0x02
    32d2:	fc 01       	movw	r30, r24
    32d4:	80 81       	ld	r24, Z
    32d6:	91 81       	ldd	r25, Z+1	; 0x01
    32d8:	fc 01       	movw	r30, r24
    32da:	25 81       	ldd	r18, Z+5	; 0x05
    32dc:	36 81       	ldd	r19, Z+6	; 0x06
    32de:	89 81       	ldd	r24, Y+1	; 0x01
    32e0:	9a 81       	ldd	r25, Y+2	; 0x02
    32e2:	fc 01       	movw	r30, r24
    32e4:	80 81       	ld	r24, Z
    32e6:	91 81       	ldd	r25, Z+1	; 0x01
    32e8:	fc 01       	movw	r30, r24
    32ea:	81 85       	ldd	r24, Z+9	; 0x09
    32ec:	92 85       	ldd	r25, Z+10	; 0x0a
    32ee:	82 17       	cp	r24, r18
    32f0:	93 07       	cpc	r25, r19
    32f2:	08 f0       	brcs	.+2      	; 0x32f6 <efx3_tick+0x96>
    32f4:	63 c0       	rjmp	.+198    	; 0x33bc <efx3_tick+0x15c>
		{
			upd->chn->freq = upd->chn->portaperiod;
    32f6:	89 81       	ldd	r24, Y+1	; 0x01
    32f8:	9a 81       	ldd	r25, Y+2	; 0x02
    32fa:	fc 01       	movw	r30, r24
    32fc:	80 81       	ld	r24, Z
    32fe:	91 81       	ldd	r25, Z+1	; 0x01
    3300:	29 81       	ldd	r18, Y+1	; 0x01
    3302:	3a 81       	ldd	r19, Y+2	; 0x02
    3304:	f9 01       	movw	r30, r18
    3306:	20 81       	ld	r18, Z
    3308:	31 81       	ldd	r19, Z+1	; 0x01
    330a:	f9 01       	movw	r30, r18
    330c:	21 85       	ldd	r18, Z+9	; 0x09
    330e:	32 85       	ldd	r19, Z+10	; 0x0a
    3310:	fc 01       	movw	r30, r24
    3312:	36 83       	std	Z+6, r19	; 0x06
    3314:	25 83       	std	Z+5, r18	; 0x05
    3316:	52 c0       	rjmp	.+164    	; 0x33bc <efx3_tick+0x15c>
		}
	}
	else if (upd->chn->freq > upd->chn->portaperiod)
    3318:	89 81       	ldd	r24, Y+1	; 0x01
    331a:	9a 81       	ldd	r25, Y+2	; 0x02
    331c:	fc 01       	movw	r30, r24
    331e:	80 81       	ld	r24, Z
    3320:	91 81       	ldd	r25, Z+1	; 0x01
    3322:	fc 01       	movw	r30, r24
    3324:	25 81       	ldd	r18, Z+5	; 0x05
    3326:	36 81       	ldd	r19, Z+6	; 0x06
    3328:	89 81       	ldd	r24, Y+1	; 0x01
    332a:	9a 81       	ldd	r25, Y+2	; 0x02
    332c:	fc 01       	movw	r30, r24
    332e:	80 81       	ld	r24, Z
    3330:	91 81       	ldd	r25, Z+1	; 0x01
    3332:	fc 01       	movw	r30, r24
    3334:	81 85       	ldd	r24, Z+9	; 0x09
    3336:	92 85       	ldd	r25, Z+10	; 0x0a
    3338:	82 17       	cp	r24, r18
    333a:	93 07       	cpc	r25, r19
    333c:	08 f0       	brcs	.+2      	; 0x3340 <efx3_tick+0xe0>
    333e:	3e c0       	rjmp	.+124    	; 0x33bc <efx3_tick+0x15c>
	{
		upd->chn->freq = pitchslide(upd->chn->freq, -(s8)upd->chn->portaspeed);
    3340:	89 81       	ldd	r24, Y+1	; 0x01
    3342:	9a 81       	ldd	r25, Y+2	; 0x02
    3344:	fc 01       	movw	r30, r24
    3346:	00 81       	ld	r16, Z
    3348:	11 81       	ldd	r17, Z+1	; 0x01
    334a:	89 81       	ldd	r24, Y+1	; 0x01
    334c:	9a 81       	ldd	r25, Y+2	; 0x02
    334e:	fc 01       	movw	r30, r24
    3350:	80 81       	ld	r24, Z
    3352:	91 81       	ldd	r25, Z+1	; 0x01
    3354:	fc 01       	movw	r30, r24
    3356:	85 81       	ldd	r24, Z+5	; 0x05
    3358:	96 81       	ldd	r25, Z+6	; 0x06
    335a:	29 81       	ldd	r18, Y+1	; 0x01
    335c:	3a 81       	ldd	r19, Y+2	; 0x02
    335e:	f9 01       	movw	r30, r18
    3360:	20 81       	ld	r18, Z
    3362:	31 81       	ldd	r19, Z+1	; 0x01
    3364:	f9 01       	movw	r30, r18
    3366:	20 85       	ldd	r18, Z+8	; 0x08
    3368:	21 95       	neg	r18
    336a:	62 2f       	mov	r22, r18
    336c:	0e 94 98 18 	call	0x3130	; 0x3130 <pitchslide>
    3370:	f8 01       	movw	r30, r16
    3372:	96 83       	std	Z+6, r25	; 0x06
    3374:	85 83       	std	Z+5, r24	; 0x05
		if(upd->chn->freq < upd->chn->portaperiod)
    3376:	89 81       	ldd	r24, Y+1	; 0x01
    3378:	9a 81       	ldd	r25, Y+2	; 0x02
    337a:	fc 01       	movw	r30, r24
    337c:	80 81       	ld	r24, Z
    337e:	91 81       	ldd	r25, Z+1	; 0x01
    3380:	fc 01       	movw	r30, r24
    3382:	25 81       	ldd	r18, Z+5	; 0x05
    3384:	36 81       	ldd	r19, Z+6	; 0x06
    3386:	89 81       	ldd	r24, Y+1	; 0x01
    3388:	9a 81       	ldd	r25, Y+2	; 0x02
    338a:	fc 01       	movw	r30, r24
    338c:	80 81       	ld	r24, Z
    338e:	91 81       	ldd	r25, Z+1	; 0x01
    3390:	fc 01       	movw	r30, r24
    3392:	81 85       	ldd	r24, Z+9	; 0x09
    3394:	92 85       	ldd	r25, Z+10	; 0x0a
    3396:	28 17       	cp	r18, r24
    3398:	39 07       	cpc	r19, r25
    339a:	80 f4       	brcc	.+32     	; 0x33bc <efx3_tick+0x15c>
		{
			upd->chn->freq = upd->chn->portaperiod;
    339c:	89 81       	ldd	r24, Y+1	; 0x01
    339e:	9a 81       	ldd	r25, Y+2	; 0x02
    33a0:	fc 01       	movw	r30, r24
    33a2:	80 81       	ld	r24, Z
    33a4:	91 81       	ldd	r25, Z+1	; 0x01
    33a6:	29 81       	ldd	r18, Y+1	; 0x01
    33a8:	3a 81       	ldd	r19, Y+2	; 0x02
    33aa:	f9 01       	movw	r30, r18
    33ac:	20 81       	ld	r18, Z
    33ae:	31 81       	ldd	r19, Z+1	; 0x01
    33b0:	f9 01       	movw	r30, r18
    33b2:	21 85       	ldd	r18, Z+9	; 0x09
    33b4:	32 85       	ldd	r19, Z+10	; 0x0a
    33b6:	fc 01       	movw	r30, r24
    33b8:	36 83       	std	Z+6, r19	; 0x06
    33ba:	25 83       	std	Z+5, r18	; 0x05
		}
	}
	
	upd->flags |= MOD_FLG_UPDATEPITCH;
    33bc:	89 81       	ldd	r24, Y+1	; 0x01
    33be:	9a 81       	ldd	r25, Y+2	; 0x02
    33c0:	fc 01       	movw	r30, r24
    33c2:	80 85       	ldd	r24, Z+8	; 0x08
    33c4:	28 2f       	mov	r18, r24
    33c6:	22 60       	ori	r18, 0x02	; 2
    33c8:	89 81       	ldd	r24, Y+1	; 0x01
    33ca:	9a 81       	ldd	r25, Y+2	; 0x02
    33cc:	fc 01       	movw	r30, r24
    33ce:	20 87       	std	Z+8, r18	; 0x08
}	
    33d0:	0f 90       	pop	r0
    33d2:	0f 90       	pop	r0
    33d4:	cf 91       	pop	r28
    33d6:	df 91       	pop	r29
    33d8:	1f 91       	pop	r17
    33da:	0f 91       	pop	r16
    33dc:	08 95       	ret

000033de <efx4_tick>:
void efx4_tick(struct update_s* upd)
{
    33de:	df 93       	push	r29
    33e0:	cf 93       	push	r28
    33e2:	00 d0       	rcall	.+0      	; 0x33e4 <efx4_tick+0x6>
    33e4:	cd b7       	in	r28, 0x3d	; 61
    33e6:	de b7       	in	r29, 0x3e	; 62
    33e8:	9a 83       	std	Y+2, r25	; 0x02
    33ea:	89 83       	std	Y+1, r24	; 0x01
}	
    33ec:	0f 90       	pop	r0
    33ee:	0f 90       	pop	r0
    33f0:	cf 91       	pop	r28
    33f2:	df 91       	pop	r29
    33f4:	08 95       	ret

000033f6 <efx5_tick>:
void efx5_tick(struct update_s* upd)
{
    33f6:	df 93       	push	r29
    33f8:	cf 93       	push	r28
    33fa:	00 d0       	rcall	.+0      	; 0x33fc <efx5_tick+0x6>
    33fc:	cd b7       	in	r28, 0x3d	; 61
    33fe:	de b7       	in	r29, 0x3e	; 62
    3400:	9a 83       	std	Y+2, r25	; 0x02
    3402:	89 83       	std	Y+1, r24	; 0x01
	efx3_tick(upd);
    3404:	89 81       	ldd	r24, Y+1	; 0x01
    3406:	9a 81       	ldd	r25, Y+2	; 0x02
    3408:	0e 94 30 19 	call	0x3260	; 0x3260 <efx3_tick>
	efxA_tick(upd);
    340c:	89 81       	ldd	r24, Y+1	; 0x01
    340e:	9a 81       	ldd	r25, Y+2	; 0x02
    3410:	0e 94 3f 1a 	call	0x347e	; 0x347e <efxA_tick>
}	
    3414:	0f 90       	pop	r0
    3416:	0f 90       	pop	r0
    3418:	cf 91       	pop	r28
    341a:	df 91       	pop	r29
    341c:	08 95       	ret

0000341e <efx6_tick>:
void efx6_tick(struct update_s* upd)
{
    341e:	df 93       	push	r29
    3420:	cf 93       	push	r28
    3422:	00 d0       	rcall	.+0      	; 0x3424 <efx6_tick+0x6>
    3424:	cd b7       	in	r28, 0x3d	; 61
    3426:	de b7       	in	r29, 0x3e	; 62
    3428:	9a 83       	std	Y+2, r25	; 0x02
    342a:	89 83       	std	Y+1, r24	; 0x01
}	
    342c:	0f 90       	pop	r0
    342e:	0f 90       	pop	r0
    3430:	cf 91       	pop	r28
    3432:	df 91       	pop	r29
    3434:	08 95       	ret

00003436 <efx7_tick>:
void efx7_tick(struct update_s* upd)
{
    3436:	df 93       	push	r29
    3438:	cf 93       	push	r28
    343a:	00 d0       	rcall	.+0      	; 0x343c <efx7_tick+0x6>
    343c:	cd b7       	in	r28, 0x3d	; 61
    343e:	de b7       	in	r29, 0x3e	; 62
    3440:	9a 83       	std	Y+2, r25	; 0x02
    3442:	89 83       	std	Y+1, r24	; 0x01
}	
    3444:	0f 90       	pop	r0
    3446:	0f 90       	pop	r0
    3448:	cf 91       	pop	r28
    344a:	df 91       	pop	r29
    344c:	08 95       	ret

0000344e <efx8_tick>:
void efx8_tick(struct update_s* upd)
{
    344e:	df 93       	push	r29
    3450:	cf 93       	push	r28
    3452:	00 d0       	rcall	.+0      	; 0x3454 <efx8_tick+0x6>
    3454:	cd b7       	in	r28, 0x3d	; 61
    3456:	de b7       	in	r29, 0x3e	; 62
    3458:	9a 83       	std	Y+2, r25	; 0x02
    345a:	89 83       	std	Y+1, r24	; 0x01
}	
    345c:	0f 90       	pop	r0
    345e:	0f 90       	pop	r0
    3460:	cf 91       	pop	r28
    3462:	df 91       	pop	r29
    3464:	08 95       	ret

00003466 <efx9_tick>:
void efx9_tick(struct update_s* upd)
{
    3466:	df 93       	push	r29
    3468:	cf 93       	push	r28
    346a:	00 d0       	rcall	.+0      	; 0x346c <efx9_tick+0x6>
    346c:	cd b7       	in	r28, 0x3d	; 61
    346e:	de b7       	in	r29, 0x3e	; 62
    3470:	9a 83       	std	Y+2, r25	; 0x02
    3472:	89 83       	std	Y+1, r24	; 0x01
}
    3474:	0f 90       	pop	r0
    3476:	0f 90       	pop	r0
    3478:	cf 91       	pop	r28
    347a:	df 91       	pop	r29
    347c:	08 95       	ret

0000347e <efxA_tick>:
void efxA_tick(struct update_s* upd)
{
    347e:	df 93       	push	r29
    3480:	cf 93       	push	r28
    3482:	00 d0       	rcall	.+0      	; 0x3484 <efxA_tick+0x6>
    3484:	00 d0       	rcall	.+0      	; 0x3486 <efxA_tick+0x8>
    3486:	cd b7       	in	r28, 0x3d	; 61
    3488:	de b7       	in	r29, 0x3e	; 62
    348a:	9c 83       	std	Y+4, r25	; 0x04
    348c:	8b 83       	std	Y+3, r24	; 0x03
	u8 paramx = upd->chn->param>>4;
    348e:	8b 81       	ldd	r24, Y+3	; 0x03
    3490:	9c 81       	ldd	r25, Y+4	; 0x04
    3492:	fc 01       	movw	r30, r24
    3494:	80 81       	ld	r24, Z
    3496:	91 81       	ldd	r25, Z+1	; 0x01
    3498:	fc 01       	movw	r30, r24
    349a:	84 81       	ldd	r24, Z+4	; 0x04
    349c:	82 95       	swap	r24
    349e:	8f 70       	andi	r24, 0x0F	; 15
    34a0:	89 83       	std	Y+1, r24	; 0x01
	u8 paramy = upd->chn->param&0xF;
    34a2:	8b 81       	ldd	r24, Y+3	; 0x03
    34a4:	9c 81       	ldd	r25, Y+4	; 0x04
    34a6:	fc 01       	movw	r30, r24
    34a8:	80 81       	ld	r24, Z
    34aa:	91 81       	ldd	r25, Z+1	; 0x01
    34ac:	fc 01       	movw	r30, r24
    34ae:	84 81       	ldd	r24, Z+4	; 0x04
    34b0:	8f 70       	andi	r24, 0x0F	; 15
    34b2:	8a 83       	std	Y+2, r24	; 0x02
	
	if((paramx>0) ^ (paramy>0))
    34b4:	91 e0       	ldi	r25, 0x01	; 1
    34b6:	89 81       	ldd	r24, Y+1	; 0x01
    34b8:	88 23       	and	r24, r24
    34ba:	09 f4       	brne	.+2      	; 0x34be <efxA_tick+0x40>
    34bc:	90 e0       	ldi	r25, 0x00	; 0
    34be:	81 e0       	ldi	r24, 0x01	; 1
    34c0:	2a 81       	ldd	r18, Y+2	; 0x02
    34c2:	22 23       	and	r18, r18
    34c4:	09 f4       	brne	.+2      	; 0x34c8 <efxA_tick+0x4a>
    34c6:	80 e0       	ldi	r24, 0x00	; 0
    34c8:	89 27       	eor	r24, r25
    34ca:	88 23       	and	r24, r24
    34cc:	09 f4       	brne	.+2      	; 0x34d0 <efxA_tick+0x52>
    34ce:	47 c0       	rjmp	.+142    	; 0x355e <efxA_tick+0xe0>
	{
		if(paramx)
    34d0:	89 81       	ldd	r24, Y+1	; 0x01
    34d2:	88 23       	and	r24, r24
    34d4:	e9 f0       	breq	.+58     	; 0x3510 <efxA_tick+0x92>
		{
			if((upd->chn->volume+=paramx) > MAX_VOLUME)
    34d6:	8b 81       	ldd	r24, Y+3	; 0x03
    34d8:	9c 81       	ldd	r25, Y+4	; 0x04
    34da:	fc 01       	movw	r30, r24
    34dc:	80 81       	ld	r24, Z
    34de:	91 81       	ldd	r25, Z+1	; 0x01
    34e0:	2b 81       	ldd	r18, Y+3	; 0x03
    34e2:	3c 81       	ldd	r19, Y+4	; 0x04
    34e4:	f9 01       	movw	r30, r18
    34e6:	20 81       	ld	r18, Z
    34e8:	31 81       	ldd	r19, Z+1	; 0x01
    34ea:	f9 01       	movw	r30, r18
    34ec:	31 81       	ldd	r19, Z+1	; 0x01
    34ee:	29 81       	ldd	r18, Y+1	; 0x01
    34f0:	23 0f       	add	r18, r19
    34f2:	fc 01       	movw	r30, r24
    34f4:	21 83       	std	Z+1, r18	; 0x01
    34f6:	fc 01       	movw	r30, r24
    34f8:	81 81       	ldd	r24, Z+1	; 0x01
    34fa:	80 34       	cpi	r24, 0x40	; 64
    34fc:	30 f1       	brcs	.+76     	; 0x354a <efxA_tick+0xcc>
			{
				upd->chn->volume = MAX_VOLUME;
    34fe:	8b 81       	ldd	r24, Y+3	; 0x03
    3500:	9c 81       	ldd	r25, Y+4	; 0x04
    3502:	fc 01       	movw	r30, r24
    3504:	80 81       	ld	r24, Z
    3506:	91 81       	ldd	r25, Z+1	; 0x01
    3508:	2f e3       	ldi	r18, 0x3F	; 63
    350a:	fc 01       	movw	r30, r24
    350c:	21 83       	std	Z+1, r18	; 0x01
    350e:	1d c0       	rjmp	.+58     	; 0x354a <efxA_tick+0xcc>
			}
		}
		else
		{
			if((upd->chn->volume-=paramy) > MAX_VOLUME) //wraparound
    3510:	8b 81       	ldd	r24, Y+3	; 0x03
    3512:	9c 81       	ldd	r25, Y+4	; 0x04
    3514:	fc 01       	movw	r30, r24
    3516:	80 81       	ld	r24, Z
    3518:	91 81       	ldd	r25, Z+1	; 0x01
    351a:	2b 81       	ldd	r18, Y+3	; 0x03
    351c:	3c 81       	ldd	r19, Y+4	; 0x04
    351e:	f9 01       	movw	r30, r18
    3520:	20 81       	ld	r18, Z
    3522:	31 81       	ldd	r19, Z+1	; 0x01
    3524:	f9 01       	movw	r30, r18
    3526:	31 81       	ldd	r19, Z+1	; 0x01
    3528:	2a 81       	ldd	r18, Y+2	; 0x02
    352a:	f3 2f       	mov	r31, r19
    352c:	f2 1b       	sub	r31, r18
    352e:	2f 2f       	mov	r18, r31
    3530:	fc 01       	movw	r30, r24
    3532:	21 83       	std	Z+1, r18	; 0x01
    3534:	fc 01       	movw	r30, r24
    3536:	81 81       	ldd	r24, Z+1	; 0x01
    3538:	80 34       	cpi	r24, 0x40	; 64
    353a:	38 f0       	brcs	.+14     	; 0x354a <efxA_tick+0xcc>
			{
				upd->chn->volume = MIN_VOLUME;
    353c:	8b 81       	ldd	r24, Y+3	; 0x03
    353e:	9c 81       	ldd	r25, Y+4	; 0x04
    3540:	fc 01       	movw	r30, r24
    3542:	80 81       	ld	r24, Z
    3544:	91 81       	ldd	r25, Z+1	; 0x01
    3546:	fc 01       	movw	r30, r24
    3548:	11 82       	std	Z+1, r1	; 0x01
			}			
		}
		
		upd->flags |= MOD_FLG_UPDATEVOL;
    354a:	8b 81       	ldd	r24, Y+3	; 0x03
    354c:	9c 81       	ldd	r25, Y+4	; 0x04
    354e:	fc 01       	movw	r30, r24
    3550:	80 85       	ldd	r24, Z+8	; 0x08
    3552:	28 2f       	mov	r18, r24
    3554:	21 60       	ori	r18, 0x01	; 1
    3556:	8b 81       	ldd	r24, Y+3	; 0x03
    3558:	9c 81       	ldd	r25, Y+4	; 0x04
    355a:	fc 01       	movw	r30, r24
    355c:	20 87       	std	Z+8, r18	; 0x08
	}
}	
    355e:	0f 90       	pop	r0
    3560:	0f 90       	pop	r0
    3562:	0f 90       	pop	r0
    3564:	0f 90       	pop	r0
    3566:	cf 91       	pop	r28
    3568:	df 91       	pop	r29
    356a:	08 95       	ret

0000356c <efxB_tick>:
void efxB_tick(struct update_s* upd)
{
    356c:	df 93       	push	r29
    356e:	cf 93       	push	r28
    3570:	00 d0       	rcall	.+0      	; 0x3572 <efxB_tick+0x6>
    3572:	cd b7       	in	r28, 0x3d	; 61
    3574:	de b7       	in	r29, 0x3e	; 62
    3576:	9a 83       	std	Y+2, r25	; 0x02
    3578:	89 83       	std	Y+1, r24	; 0x01
}	
    357a:	0f 90       	pop	r0
    357c:	0f 90       	pop	r0
    357e:	cf 91       	pop	r28
    3580:	df 91       	pop	r29
    3582:	08 95       	ret

00003584 <efxC_tick>:
void efxC_tick(struct update_s* upd)
{
    3584:	df 93       	push	r29
    3586:	cf 93       	push	r28
    3588:	00 d0       	rcall	.+0      	; 0x358a <efxC_tick+0x6>
    358a:	cd b7       	in	r28, 0x3d	; 61
    358c:	de b7       	in	r29, 0x3e	; 62
    358e:	9a 83       	std	Y+2, r25	; 0x02
    3590:	89 83       	std	Y+1, r24	; 0x01
}	
    3592:	0f 90       	pop	r0
    3594:	0f 90       	pop	r0
    3596:	cf 91       	pop	r28
    3598:	df 91       	pop	r29
    359a:	08 95       	ret

0000359c <efxD_tick>:
void efxD_tick(struct update_s* upd)
{
    359c:	df 93       	push	r29
    359e:	cf 93       	push	r28
    35a0:	00 d0       	rcall	.+0      	; 0x35a2 <efxD_tick+0x6>
    35a2:	cd b7       	in	r28, 0x3d	; 61
    35a4:	de b7       	in	r29, 0x3e	; 62
    35a6:	9a 83       	std	Y+2, r25	; 0x02
    35a8:	89 83       	std	Y+1, r24	; 0x01
}	
    35aa:	0f 90       	pop	r0
    35ac:	0f 90       	pop	r0
    35ae:	cf 91       	pop	r28
    35b0:	df 91       	pop	r29
    35b2:	08 95       	ret

000035b4 <efxE_tick>:
void efxE_tick(struct update_s* upd)
{
    35b4:	df 93       	push	r29
    35b6:	cf 93       	push	r28
    35b8:	00 d0       	rcall	.+0      	; 0x35ba <efxE_tick+0x6>
    35ba:	cd b7       	in	r28, 0x3d	; 61
    35bc:	de b7       	in	r29, 0x3e	; 62
    35be:	9a 83       	std	Y+2, r25	; 0x02
    35c0:	89 83       	std	Y+1, r24	; 0x01
}
    35c2:	0f 90       	pop	r0
    35c4:	0f 90       	pop	r0
    35c6:	cf 91       	pop	r28
    35c8:	df 91       	pop	r29
    35ca:	08 95       	ret

000035cc <efxF_tick>:
void efxF_tick(struct update_s* upd)
{
    35cc:	df 93       	push	r29
    35ce:	cf 93       	push	r28
    35d0:	00 d0       	rcall	.+0      	; 0x35d2 <efxF_tick+0x6>
    35d2:	cd b7       	in	r28, 0x3d	; 61
    35d4:	de b7       	in	r29, 0x3e	; 62
    35d6:	9a 83       	std	Y+2, r25	; 0x02
    35d8:	89 83       	std	Y+1, r24	; 0x01
}
    35da:	0f 90       	pop	r0
    35dc:	0f 90       	pop	r0
    35de:	cf 91       	pop	r28
    35e0:	df 91       	pop	r29
    35e2:	08 95       	ret

000035e4 <play>:

// called to begin the song
void play()
{
    35e4:	df 93       	push	r29
    35e6:	cf 93       	push	r28
    35e8:	cd b7       	in	r28, 0x3d	; 61
    35ea:	de b7       	in	r29, 0x3e	; 62
	asm("cli"); // stop interrupts
    35ec:	f8 94       	cli
	CLKPR = 0x80;
    35ee:	81 e6       	ldi	r24, 0x61	; 97
    35f0:	90 e0       	ldi	r25, 0x00	; 0
    35f2:	20 e8       	ldi	r18, 0x80	; 128
    35f4:	fc 01       	movw	r30, r24
    35f6:	20 83       	st	Z, r18
	CLKPR = 0x80;
    35f8:	81 e6       	ldi	r24, 0x61	; 97
    35fa:	90 e0       	ldi	r25, 0x00	; 0
    35fc:	20 e8       	ldi	r18, 0x80	; 128
    35fe:	fc 01       	movw	r30, r24
    3600:	20 83       	st	Z, r18
	
	initmodule(); // setup the module
    3602:	0e 94 c4 12 	call	0x2588	; 0x2588 <initmodule>
	
	TCCR0A =(1<<WGM01); // clear timer on compare match (CTC)
    3606:	84 e4       	ldi	r24, 0x44	; 68
    3608:	90 e0       	ldi	r25, 0x00	; 0
    360a:	22 e0       	ldi	r18, 0x02	; 2
    360c:	fc 01       	movw	r30, r24
    360e:	20 83       	st	Z, r18
	TCCR0B =(1<<CS01);  // clkI/O/8 (From prescaler)
    3610:	85 e4       	ldi	r24, 0x45	; 69
    3612:	90 e0       	ldi	r25, 0x00	; 0
    3614:	22 e0       	ldi	r18, 0x02	; 2
    3616:	fc 01       	movw	r30, r24
    3618:	20 83       	st	Z, r18
	OCR0A  =(F_CPU >> 3) / F_DAC;	// 16Mhz/8 / dacfreq
    361a:	87 e4       	ldi	r24, 0x47	; 71
    361c:	90 e0       	ldi	r25, 0x00	; 0
    361e:	2e e3       	ldi	r18, 0x3E	; 62
    3620:	fc 01       	movw	r30, r24
    3622:	20 83       	st	Z, r18
	//		Clear OC2B on Compare Match, set OC2B at BOTTOM,
	//		(non-inverting mode).
	//		WGM21 & WGM20:
	//		Fast PWM
	*/
    TCCR2A =(1<<COM2A1)|(1<<COM2B1)|(1<<WGM21)|(1<<WGM20);//0b10100011;
    3624:	80 eb       	ldi	r24, 0xB0	; 176
    3626:	90 e0       	ldi	r25, 0x00	; 0
    3628:	23 ea       	ldi	r18, 0xA3	; 163
    362a:	fc 01       	movw	r30, r24
    362c:	20 83       	st	Z, r18
    TCCR2B =(1<<CS20); //clkT2S/(No prescaling)
    362e:	81 eb       	ldi	r24, 0xB1	; 177
    3630:	90 e0       	ldi	r25, 0x00	; 0
    3632:	21 e0       	ldi	r18, 0x01	; 1
    3634:	fc 01       	movw	r30, r24
    3636:	20 83       	st	Z, r18

	TIMSK0 =(1<<OCIE0A); //Timer/Counter0 Output Compare Match A Interrupt Enable
    3638:	8e e6       	ldi	r24, 0x6E	; 110
    363a:	90 e0       	ldi	r25, 0x00	; 0
    363c:	22 e0       	ldi	r18, 0x02	; 2
    363e:	fc 01       	movw	r30, r24
    3640:	20 83       	st	Z, r18
	
	DDRD |= 0b11111100; //enable our output
    3642:	8a e2       	ldi	r24, 0x2A	; 42
    3644:	90 e0       	ldi	r25, 0x00	; 0
    3646:	2a e2       	ldi	r18, 0x2A	; 42
    3648:	30 e0       	ldi	r19, 0x00	; 0
    364a:	f9 01       	movw	r30, r18
    364c:	20 81       	ld	r18, Z
    364e:	2c 6f       	ori	r18, 0xFC	; 252
    3650:	fc 01       	movw	r30, r24
    3652:	20 83       	st	Z, r18
	
	asm("sei");	// enable interrupts (our sound generation one)
    3654:	78 94       	sei
    3656:	01 c0       	rjmp	.+2      	; 0x365a <play+0x76>
		if(playtick > 0)
		{
			playtick--;
			tick();
		}
	}
    3658:	00 00       	nop
	
	asm("sei");	// enable interrupts (our sound generation one)
	
	for(;;)
	{
		if(playtick > 0)
    365a:	80 91 9a 02 	lds	r24, 0x029A
    365e:	88 23       	and	r24, r24
    3660:	d9 f3       	breq	.-10     	; 0x3658 <play+0x74>
		{
			playtick--;
    3662:	80 91 9a 02 	lds	r24, 0x029A
    3666:	81 50       	subi	r24, 0x01	; 1
    3668:	80 93 9a 02 	sts	0x029A, r24
			tick();
    366c:	0e 94 86 16 	call	0x2d0c	; 0x2d0c <tick>
		}
	}
    3670:	f4 cf       	rjmp	.-24     	; 0x365a <play+0x76>

00003672 <__vector_14>:
}

ISR(TIMER0_COMPA_vect)
{
    3672:	1f 92       	push	r1
    3674:	0f 92       	push	r0
    3676:	0f b6       	in	r0, 0x3f	; 63
    3678:	0f 92       	push	r0
    367a:	11 24       	eor	r1, r1
    367c:	ef 92       	push	r14
    367e:	ff 92       	push	r15
    3680:	0f 93       	push	r16
    3682:	1f 93       	push	r17
    3684:	2f 93       	push	r18
    3686:	3f 93       	push	r19
    3688:	4f 93       	push	r20
    368a:	5f 93       	push	r21
    368c:	6f 93       	push	r22
    368e:	7f 93       	push	r23
    3690:	8f 93       	push	r24
    3692:	9f 93       	push	r25
    3694:	af 93       	push	r26
    3696:	bf 93       	push	r27
    3698:	ef 93       	push	r30
    369a:	ff 93       	push	r31
    369c:	df 93       	push	r29
    369e:	cf 93       	push	r28
    36a0:	cd b7       	in	r28, 0x3d	; 61
    36a2:	de b7       	in	r29, 0x3e	; 62
    36a4:	25 97       	sbiw	r28, 0x05	; 5
    36a6:	de bf       	out	0x3e, r29	; 62
    36a8:	cd bf       	out	0x3d, r28	; 61
	static u8 lastsample = 0x7f;
	s16 sample;
	u8 idx;
	struct audiochannel_s* cur;
	
	OCR2B = lastsample;
    36aa:	84 eb       	ldi	r24, 0xB4	; 180
    36ac:	90 e0       	ldi	r25, 0x00	; 0
    36ae:	20 91 40 01 	lds	r18, 0x0140
    36b2:	fc 01       	movw	r30, r24
    36b4:	20 83       	st	Z, r18
	
	if(song_state == SONG_STATE_PLAY)
    36b6:	80 91 9c 02 	lds	r24, 0x029C
    36ba:	81 30       	cpi	r24, 0x01	; 1
    36bc:	e9 f4       	brne	.+58     	; 0x36f8 <__vector_14+0x86>
	{
		if(++ticktimer > bpm)
    36be:	80 91 97 02 	lds	r24, 0x0297
    36c2:	90 91 98 02 	lds	r25, 0x0298
    36c6:	01 96       	adiw	r24, 0x01	; 1
    36c8:	90 93 98 02 	sts	0x0298, r25
    36cc:	80 93 97 02 	sts	0x0297, r24
    36d0:	20 91 97 02 	lds	r18, 0x0297
    36d4:	30 91 98 02 	lds	r19, 0x0298
    36d8:	80 91 db 02 	lds	r24, 0x02DB
    36dc:	90 91 dc 02 	lds	r25, 0x02DC
    36e0:	82 17       	cp	r24, r18
    36e2:	93 07       	cpc	r25, r19
    36e4:	48 f4       	brcc	.+18     	; 0x36f8 <__vector_14+0x86>
		{
			++playtick;
    36e6:	80 91 9a 02 	lds	r24, 0x029A
    36ea:	8f 5f       	subi	r24, 0xFF	; 255
    36ec:	80 93 9a 02 	sts	0x029A, r24
			ticktimer = 0;
    36f0:	10 92 98 02 	sts	0x0298, r1
    36f4:	10 92 97 02 	sts	0x0297, r1
		}
	}	
	
	sample = 0;
    36f8:	1a 82       	std	Y+2, r1	; 0x02
    36fa:	19 82       	std	Y+1, r1	; 0x01
	for( idx=0; idx<PATTERN_CHANNELS; ++idx )
    36fc:	1b 82       	std	Y+3, r1	; 0x03
    36fe:	a1 c0       	rjmp	.+322    	; 0x3842 <__vector_14+0x1d0>
	{
		cur = &mixchn[idx];
    3700:	8b 81       	ldd	r24, Y+3	; 0x03
    3702:	88 2f       	mov	r24, r24
    3704:	90 e0       	ldi	r25, 0x00	; 0
    3706:	9c 01       	movw	r18, r24
    3708:	22 95       	swap	r18
    370a:	32 95       	swap	r19
    370c:	30 7f       	andi	r19, 0xF0	; 240
    370e:	32 27       	eor	r19, r18
    3710:	20 7f       	andi	r18, 0xF0	; 240
    3712:	32 27       	eor	r19, r18
    3714:	82 0f       	add	r24, r18
    3716:	93 1f       	adc	r25, r19
    3718:	8c 5d       	subi	r24, 0xDC	; 220
    371a:	9a 4f       	sbci	r25, 0xFA	; 250
    371c:	9d 83       	std	Y+5, r25	; 0x05
    371e:	8c 83       	std	Y+4, r24	; 0x04
		if(cur->offset)
    3720:	8c 81       	ldd	r24, Y+4	; 0x04
    3722:	9d 81       	ldd	r25, Y+5	; 0x05
    3724:	fc 01       	movw	r30, r24
    3726:	80 81       	ld	r24, Z
    3728:	91 81       	ldd	r25, Z+1	; 0x01
    372a:	00 97       	sbiw	r24, 0x00	; 0
    372c:	09 f4       	brne	.+2      	; 0x3730 <__vector_14+0xbe>
    372e:	86 c0       	rjmp	.+268    	; 0x383c <__vector_14+0x1ca>
		{
			sample += ((s16)readsongbytesigned(cur->offset+(cur->pos>>8))) * cur->volume;
    3730:	8c 81       	ldd	r24, Y+4	; 0x04
    3732:	9d 81       	ldd	r25, Y+5	; 0x05
    3734:	fc 01       	movw	r30, r24
    3736:	20 81       	ld	r18, Z
    3738:	31 81       	ldd	r19, Z+1	; 0x01
    373a:	8c 81       	ldd	r24, Y+4	; 0x04
    373c:	9d 81       	ldd	r25, Y+5	; 0x05
    373e:	fc 01       	movw	r30, r24
    3740:	82 81       	ldd	r24, Z+2	; 0x02
    3742:	93 81       	ldd	r25, Z+3	; 0x03
    3744:	a4 81       	ldd	r26, Z+4	; 0x04
    3746:	b5 81       	ldd	r27, Z+5	; 0x05
    3748:	89 2f       	mov	r24, r25
    374a:	9a 2f       	mov	r25, r26
    374c:	ab 2f       	mov	r26, r27
    374e:	bb 27       	eor	r27, r27
    3750:	82 0f       	add	r24, r18
    3752:	93 1f       	adc	r25, r19
    3754:	0e 94 ca 11 	call	0x2394	; 0x2394 <readsongbytesigned>
    3758:	48 2f       	mov	r20, r24
    375a:	55 27       	eor	r21, r21
    375c:	47 fd       	sbrc	r20, 7
    375e:	50 95       	com	r21
    3760:	8c 81       	ldd	r24, Y+4	; 0x04
    3762:	9d 81       	ldd	r25, Y+5	; 0x05
    3764:	fc 01       	movw	r30, r24
    3766:	80 85       	ldd	r24, Z+8	; 0x08
    3768:	28 2f       	mov	r18, r24
    376a:	30 e0       	ldi	r19, 0x00	; 0
    376c:	42 9f       	mul	r20, r18
    376e:	c0 01       	movw	r24, r0
    3770:	43 9f       	mul	r20, r19
    3772:	90 0d       	add	r25, r0
    3774:	52 9f       	mul	r21, r18
    3776:	90 0d       	add	r25, r0
    3778:	11 24       	eor	r1, r1
    377a:	29 81       	ldd	r18, Y+1	; 0x01
    377c:	3a 81       	ldd	r19, Y+2	; 0x02
    377e:	82 0f       	add	r24, r18
    3780:	93 1f       	adc	r25, r19
    3782:	9a 83       	std	Y+2, r25	; 0x02
    3784:	89 83       	std	Y+1, r24	; 0x01
			
			if((cur->pos += cur->inc) >= cur->length)
    3786:	8c 81       	ldd	r24, Y+4	; 0x04
    3788:	9d 81       	ldd	r25, Y+5	; 0x05
    378a:	fc 01       	movw	r30, r24
    378c:	22 81       	ldd	r18, Z+2	; 0x02
    378e:	33 81       	ldd	r19, Z+3	; 0x03
    3790:	44 81       	ldd	r20, Z+4	; 0x04
    3792:	55 81       	ldd	r21, Z+5	; 0x05
    3794:	8c 81       	ldd	r24, Y+4	; 0x04
    3796:	9d 81       	ldd	r25, Y+5	; 0x05
    3798:	fc 01       	movw	r30, r24
    379a:	86 81       	ldd	r24, Z+6	; 0x06
    379c:	97 81       	ldd	r25, Z+7	; 0x07
    379e:	cc 01       	movw	r24, r24
    37a0:	a0 e0       	ldi	r26, 0x00	; 0
    37a2:	b0 e0       	ldi	r27, 0x00	; 0
    37a4:	82 0f       	add	r24, r18
    37a6:	93 1f       	adc	r25, r19
    37a8:	a4 1f       	adc	r26, r20
    37aa:	b5 1f       	adc	r27, r21
    37ac:	2c 81       	ldd	r18, Y+4	; 0x04
    37ae:	3d 81       	ldd	r19, Y+5	; 0x05
    37b0:	f9 01       	movw	r30, r18
    37b2:	82 83       	std	Z+2, r24	; 0x02
    37b4:	93 83       	std	Z+3, r25	; 0x03
    37b6:	a4 83       	std	Z+4, r26	; 0x04
    37b8:	b5 83       	std	Z+5, r27	; 0x05
    37ba:	8c 81       	ldd	r24, Y+4	; 0x04
    37bc:	9d 81       	ldd	r25, Y+5	; 0x05
    37be:	fc 01       	movw	r30, r24
    37c0:	22 81       	ldd	r18, Z+2	; 0x02
    37c2:	33 81       	ldd	r19, Z+3	; 0x03
    37c4:	44 81       	ldd	r20, Z+4	; 0x04
    37c6:	55 81       	ldd	r21, Z+5	; 0x05
    37c8:	8c 81       	ldd	r24, Y+4	; 0x04
    37ca:	9d 81       	ldd	r25, Y+5	; 0x05
    37cc:	fc 01       	movw	r30, r24
    37ce:	81 85       	ldd	r24, Z+9	; 0x09
    37d0:	92 85       	ldd	r25, Z+10	; 0x0a
    37d2:	a3 85       	ldd	r26, Z+11	; 0x0b
    37d4:	b4 85       	ldd	r27, Z+12	; 0x0c
    37d6:	28 17       	cp	r18, r24
    37d8:	39 07       	cpc	r19, r25
    37da:	4a 07       	cpc	r20, r26
    37dc:	5b 07       	cpc	r21, r27
    37de:	70 f1       	brcs	.+92     	; 0x383c <__vector_14+0x1ca>
			{
				if(cur->looplength)
    37e0:	8c 81       	ldd	r24, Y+4	; 0x04
    37e2:	9d 81       	ldd	r25, Y+5	; 0x05
    37e4:	fc 01       	movw	r30, r24
    37e6:	85 85       	ldd	r24, Z+13	; 0x0d
    37e8:	96 85       	ldd	r25, Z+14	; 0x0e
    37ea:	a7 85       	ldd	r26, Z+15	; 0x0f
    37ec:	b0 89       	ldd	r27, Z+16	; 0x10
    37ee:	00 97       	sbiw	r24, 0x00	; 0
    37f0:	a1 05       	cpc	r26, r1
    37f2:	b1 05       	cpc	r27, r1
    37f4:	f1 f0       	breq	.+60     	; 0x3832 <__vector_14+0x1c0>
				{
					cur->pos -= cur->looplength;
    37f6:	8c 81       	ldd	r24, Y+4	; 0x04
    37f8:	9d 81       	ldd	r25, Y+5	; 0x05
    37fa:	fc 01       	movw	r30, r24
    37fc:	22 81       	ldd	r18, Z+2	; 0x02
    37fe:	33 81       	ldd	r19, Z+3	; 0x03
    3800:	44 81       	ldd	r20, Z+4	; 0x04
    3802:	55 81       	ldd	r21, Z+5	; 0x05
    3804:	8c 81       	ldd	r24, Y+4	; 0x04
    3806:	9d 81       	ldd	r25, Y+5	; 0x05
    3808:	fc 01       	movw	r30, r24
    380a:	85 85       	ldd	r24, Z+13	; 0x0d
    380c:	96 85       	ldd	r25, Z+14	; 0x0e
    380e:	a7 85       	ldd	r26, Z+15	; 0x0f
    3810:	b0 89       	ldd	r27, Z+16	; 0x10
    3812:	79 01       	movw	r14, r18
    3814:	8a 01       	movw	r16, r20
    3816:	e8 1a       	sub	r14, r24
    3818:	f9 0a       	sbc	r15, r25
    381a:	0a 0b       	sbc	r16, r26
    381c:	1b 0b       	sbc	r17, r27
    381e:	d8 01       	movw	r26, r16
    3820:	c7 01       	movw	r24, r14
    3822:	2c 81       	ldd	r18, Y+4	; 0x04
    3824:	3d 81       	ldd	r19, Y+5	; 0x05
    3826:	f9 01       	movw	r30, r18
    3828:	82 83       	std	Z+2, r24	; 0x02
    382a:	93 83       	std	Z+3, r25	; 0x03
    382c:	a4 83       	std	Z+4, r26	; 0x04
    382e:	b5 83       	std	Z+5, r27	; 0x05
    3830:	05 c0       	rjmp	.+10     	; 0x383c <__vector_14+0x1ca>
				}
				else
				{
					cur->offset = 0;
    3832:	8c 81       	ldd	r24, Y+4	; 0x04
    3834:	9d 81       	ldd	r25, Y+5	; 0x05
    3836:	fc 01       	movw	r30, r24
    3838:	11 82       	std	Z+1, r1	; 0x01
    383a:	10 82       	st	Z, r1
			ticktimer = 0;
		}
	}	
	
	sample = 0;
	for( idx=0; idx<PATTERN_CHANNELS; ++idx )
    383c:	8b 81       	ldd	r24, Y+3	; 0x03
    383e:	8f 5f       	subi	r24, 0xFF	; 255
    3840:	8b 83       	std	Y+3, r24	; 0x03
    3842:	8b 81       	ldd	r24, Y+3	; 0x03
    3844:	84 30       	cpi	r24, 0x04	; 4
    3846:	08 f4       	brcc	.+2      	; 0x384a <__vector_14+0x1d8>
    3848:	5b cf       	rjmp	.-330    	; 0x3700 <__vector_14+0x8e>
				}
			}
		}
	}
	
	lastsample = 128 + (sample >> 8);
    384a:	89 81       	ldd	r24, Y+1	; 0x01
    384c:	9a 81       	ldd	r25, Y+2	; 0x02
    384e:	89 2f       	mov	r24, r25
    3850:	99 0f       	add	r25, r25
    3852:	99 0b       	sbc	r25, r25
    3854:	80 58       	subi	r24, 0x80	; 128
    3856:	80 93 40 01 	sts	0x0140, r24
}
    385a:	25 96       	adiw	r28, 0x05	; 5
    385c:	de bf       	out	0x3e, r29	; 62
    385e:	cd bf       	out	0x3d, r28	; 61
    3860:	cf 91       	pop	r28
    3862:	df 91       	pop	r29
    3864:	ff 91       	pop	r31
    3866:	ef 91       	pop	r30
    3868:	bf 91       	pop	r27
    386a:	af 91       	pop	r26
    386c:	9f 91       	pop	r25
    386e:	8f 91       	pop	r24
    3870:	7f 91       	pop	r23
    3872:	6f 91       	pop	r22
    3874:	5f 91       	pop	r21
    3876:	4f 91       	pop	r20
    3878:	3f 91       	pop	r19
    387a:	2f 91       	pop	r18
    387c:	1f 91       	pop	r17
    387e:	0f 91       	pop	r16
    3880:	ff 90       	pop	r15
    3882:	ef 90       	pop	r14
    3884:	0f 90       	pop	r0
    3886:	0f be       	out	0x3f, r0	; 63
    3888:	0f 90       	pop	r0
    388a:	1f 90       	pop	r1
    388c:	18 95       	reti

0000388e <main>:

int main(void)
{
    388e:	df 93       	push	r29
    3890:	cf 93       	push	r28
    3892:	cd b7       	in	r28, 0x3d	; 61
    3894:	de b7       	in	r29, 0x3e	; 62
	//play if we have a valid song
	if(havevalidsong())
    3896:	0e 94 57 12 	call	0x24ae	; 0x24ae <havevalidsong>
    389a:	88 23       	and	r24, r24
    389c:	11 f0       	breq	.+4      	; 0x38a2 <main+0x14>
	{
		play();
    389e:	0e 94 f2 1a 	call	0x35e4	; 0x35e4 <play>
	
	// else just hang
	while(1)
	{
		//TODO: add some sort of notification of invalid song
	}
    38a2:	ff cf       	rjmp	.-2      	; 0x38a2 <main+0x14>

000038a4 <__udivmodhi4>:
    38a4:	aa 1b       	sub	r26, r26
    38a6:	bb 1b       	sub	r27, r27
    38a8:	51 e1       	ldi	r21, 0x11	; 17
    38aa:	07 c0       	rjmp	.+14     	; 0x38ba <__udivmodhi4_ep>

000038ac <__udivmodhi4_loop>:
    38ac:	aa 1f       	adc	r26, r26
    38ae:	bb 1f       	adc	r27, r27
    38b0:	a6 17       	cp	r26, r22
    38b2:	b7 07       	cpc	r27, r23
    38b4:	10 f0       	brcs	.+4      	; 0x38ba <__udivmodhi4_ep>
    38b6:	a6 1b       	sub	r26, r22
    38b8:	b7 0b       	sbc	r27, r23

000038ba <__udivmodhi4_ep>:
    38ba:	88 1f       	adc	r24, r24
    38bc:	99 1f       	adc	r25, r25
    38be:	5a 95       	dec	r21
    38c0:	a9 f7       	brne	.-22     	; 0x38ac <__udivmodhi4_loop>
    38c2:	80 95       	com	r24
    38c4:	90 95       	com	r25
    38c6:	bc 01       	movw	r22, r24
    38c8:	cd 01       	movw	r24, r26
    38ca:	08 95       	ret

000038cc <_exit>:
    38cc:	f8 94       	cli

000038ce <__stop_program>:
    38ce:	ff cf       	rjmp	.-2      	; 0x38ce <__stop_program>
