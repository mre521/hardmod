# 1 ".././hardmod.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 ".././hardmod.c"







# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 1 3
# 99 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 3
# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/sfr_defs.h" 1 3
# 126 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/sfr_defs.h" 3
# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/inttypes.h" 1 3
# 37 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/inttypes.h" 3
# 1 "/usr/lib/gcc/avr/4.5.3/include/stdint.h" 1 3 4


# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h" 1 3 4
# 121 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h" 3 4
typedef int int8_t __attribute__((__mode__(__QI__)));
typedef unsigned int uint8_t __attribute__((__mode__(__QI__)));
typedef int int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int uint16_t __attribute__ ((__mode__ (__HI__)));
typedef int int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int uint32_t __attribute__ ((__mode__ (__SI__)));

typedef int int64_t __attribute__((__mode__(__DI__)));
typedef unsigned int uint64_t __attribute__((__mode__(__DI__)));
# 142 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h" 3 4
typedef int16_t intptr_t;




typedef uint16_t uintptr_t;
# 159 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h" 3 4
typedef int8_t int_least8_t;




typedef uint8_t uint_least8_t;




typedef int16_t int_least16_t;




typedef uint16_t uint_least16_t;




typedef int32_t int_least32_t;




typedef uint32_t uint_least32_t;







typedef int64_t int_least64_t;






typedef uint64_t uint_least64_t;
# 213 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h" 3 4
typedef int8_t int_fast8_t;




typedef uint8_t uint_fast8_t;




typedef int16_t int_fast16_t;




typedef uint16_t uint_fast16_t;




typedef int32_t int_fast32_t;




typedef uint32_t uint_fast32_t;







typedef int64_t int_fast64_t;






typedef uint64_t uint_fast64_t;
# 273 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/stdint.h" 3 4
typedef int64_t intmax_t;




typedef uint64_t uintmax_t;
# 4 "/usr/lib/gcc/avr/4.5.3/include/stdint.h" 2 3 4
# 38 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/inttypes.h" 2 3
# 77 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/inttypes.h" 3
typedef int32_t int_farptr_t;



typedef uint32_t uint_farptr_t;
# 127 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/sfr_defs.h" 2 3
# 100 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 2 3
# 222 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 3
# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/iom328p.h" 1 3
# 223 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 2 3
# 432 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 3
# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/portpins.h" 1 3
# 433 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 2 3

# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/common.h" 1 3
# 435 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 2 3

# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/version.h" 1 3
# 437 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 2 3


# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/fuse.h" 1 3
# 239 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/fuse.h" 3
typedef struct
{
    unsigned char low;
    unsigned char high;
    unsigned char extended;
} __fuse_t;
# 440 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 2 3


# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/lock.h" 1 3
# 443 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/io.h" 2 3
# 9 ".././hardmod.c" 2
# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/interrupt.h" 1 3
# 10 ".././hardmod.c" 2
# 1 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/pgmspace.h" 1 3
# 87 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/pgmspace.h" 3
# 1 "/usr/lib/gcc/avr/4.5.3/include/stddef.h" 1 3 4
# 211 "/usr/lib/gcc/avr/4.5.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 88 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/pgmspace.h" 2 3
# 217 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/pgmspace.h" 3
typedef void prog_void __attribute__((__progmem__));
typedef char prog_char __attribute__((__progmem__));
typedef unsigned char prog_uchar __attribute__((__progmem__));

typedef int8_t prog_int8_t __attribute__((__progmem__));
typedef uint8_t prog_uint8_t __attribute__((__progmem__));
typedef int16_t prog_int16_t __attribute__((__progmem__));
typedef uint16_t prog_uint16_t __attribute__((__progmem__));
typedef int32_t prog_int32_t __attribute__((__progmem__));
typedef uint32_t prog_uint32_t __attribute__((__progmem__));

typedef int64_t prog_int64_t __attribute__((__progmem__));
typedef uint64_t prog_uint64_t __attribute__((__progmem__));
# 907 "/usr/lib/gcc/avr/4.5.3/../../../avr/include/avr/pgmspace.h" 3
extern const prog_void * memchr_P(const prog_void *, int __val, size_t __len) __attribute__((__const__));
extern int memcmp_P(const void *, const prog_void *, size_t) __attribute__((__pure__));
extern void *memccpy_P(void *, const prog_void *, int __val, size_t);
extern void *memcpy_P(void *, const prog_void *, size_t);
extern void *memmem_P(const void *, size_t, const prog_void *, size_t) __attribute__((__pure__));
extern const prog_void * memrchr_P(const prog_void *, int __val, size_t __len) __attribute__((__const__));
extern char *strcat_P(char *, const prog_char *);
extern const prog_char * strchr_P(const prog_char *, int __val) __attribute__((__const__));
extern const prog_char * strchrnul_P(const prog_char *, int __val) __attribute__((__const__));
extern int strcmp_P(const char *, const prog_char *) __attribute__((__pure__));
extern char *strcpy_P(char *, const prog_char *);
extern int strcasecmp_P(const char *, const prog_char *) __attribute__((__pure__));
extern char *strcasestr_P(const char *, const prog_char *) __attribute__((__pure__));
extern size_t strcspn_P(const char *__s, const prog_char * __reject) __attribute__((__pure__));
extern size_t strlcat_P (char *, const prog_char *, size_t );
extern size_t strlcpy_P (char *, const prog_char *, size_t );
extern size_t strlen_P(const prog_char *) __attribute__((__const__));
extern size_t strnlen_P(const prog_char *, size_t) __attribute__((__const__));
extern int strncmp_P(const char *, const prog_char *, size_t) __attribute__((__pure__));
extern int strncasecmp_P(const char *, const prog_char *, size_t) __attribute__((__pure__));
extern char *strncat_P(char *, const prog_char *, size_t);
extern char *strncpy_P(char *, const prog_char *, size_t);
extern char *strpbrk_P(const char *__s, const prog_char * __accept) __attribute__((__pure__));
extern const prog_char * strrchr_P(const prog_char *, int __val) __attribute__((__const__));
extern char *strsep_P(char **__sp, const prog_char * __delim);
extern size_t strspn_P(const char *__s, const prog_char * __accept) __attribute__((__pure__));
extern char *strstr_P(const char *, const prog_char *) __attribute__((__pure__));
extern char *strtok_P(char *__s, const prog_char * __delim);
extern char *strtok_rP(char *__s, const prog_char * __delim, char **__last);

extern size_t strlen_PF (uint_farptr_t src) __attribute__((__const__));
extern size_t strnlen_PF (uint_farptr_t src, size_t len) __attribute__((__const__));
extern void *memcpy_PF (void *dest, uint_farptr_t src, size_t len);
extern char *strcpy_PF (char *dest, uint_farptr_t src);
extern char *strncpy_PF (char *dest, uint_farptr_t src, size_t len);
extern char *strcat_PF (char *dest, uint_farptr_t src);
extern size_t strlcat_PF (char *dst, uint_farptr_t src, size_t siz);
extern char *strncat_PF (char *dest, uint_farptr_t src, size_t len);
extern int strcmp_PF (const char *s1, uint_farptr_t s2) __attribute__((__pure__));
extern int strncmp_PF (const char *s1, uint_farptr_t s2, size_t n) __attribute__((__pure__));
extern int strcasecmp_PF (const char *s1, uint_farptr_t s2) __attribute__((__pure__));
extern int strncasecmp_PF (const char *s1, uint_farptr_t s2, size_t n) __attribute__((__pure__));
extern char *strstr_PF (const char *s1, uint_farptr_t s2);
extern size_t strlcpy_PF (char *dst, uint_farptr_t src, size_t siz);
extern int memcmp_PF(const void *, uint_farptr_t, size_t) __attribute__((__pure__));
# 11 ".././hardmod.c" 2
# 1 ".././format.h" 1



typedef unsigned char u8;
typedef char s8;
typedef unsigned short u16;
typedef short s16;
typedef unsigned long u32;
typedef long s32;


extern const u16 periodTable[(12*3)];
# 25 ".././format.h"
struct sections_s
{
    u8 numinsts;
    u16 offsetinsts;
    u8 numorders;
    u16 offsetorders;
    u8 numpatterns;
    u16 offsetpatterns;
    u8 numsamples;
    u16 offsetsamples;
    u8 numnames;
    u16 offsetnames;
};
# 12 ".././hardmod.c" 2
# 1 ".././song.h" 1

const unsigned short songdata_len = 13583;
unsigned char songdata[13583] __attribute__((__progmem__)) = {
 0x41,0x56,0x52,0x4D,0x08,0x13,0x00,0x20,0x53,0x00,0x10,
 0x73,0x00,0x08,0x73,0x30,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x00,0x66,0x00,0x00,0x40,0x2E,0x00,
 0x38,0x00,0x07,0x00,0x00,0x40,0x00,0x00,0x07,0x00,0xB9,
 0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
 0x00,0x00,0x00,0x00,0x1A,0x01,0x00,0x40,0x00,0x00,0x00,
 0x00,0x07,0x00,0x00,0x40,0x00,0x00,0x07,0x00,0x07,0x00,
 0x00,0x40,0x00,0x00,0x07,0x00,0x01,0x04,0x02,0x03,0x05,
 0x00,0x06,0x00,0x07,0x05,0x08,0x0A,0x08,0x09,0x00,0x06,
 0x00,0x07,0x05,0x08,0x0A,0x08,0x0F,0x0B,0x0C,0x0B,0x0D,
 0x05,0x08,0x0A,0x08,0x0E,0x25,0x04,0xA2,0x54,0x0E,0xC7,
 0x38,0x10,0x02,0x30,0x08,0x00,0xFD,0x00,0x00,0x24,0x06,
 0x37,0x41,0x10,0x00,0x10,0x0E,0xCC,0xFD,0x00,0x00,0xFC,
 0x00,0xC7,0xFD,0x00,0x00,0xFF,0x00,0x0C,0x25,0x04,0x00,
 0xFC,0x00,0x37,0x3B,0x10,0x1E,0xFC,0x00,0xCC,0x30,0x0C,
 0x00,0x24,0x0E,0xC7,0x55,0x10,0x00,0x40,0x06,0xCC,0x33,
 0x0C,0x10,0xFC,0x00,0x37,0x43,0x10,0x1E,0x10,0x0E,0xCC,
 0x25,0x04,0x00,0x24,0x06,0xC7,0x4D,0x10,0x00,0xFF,0x00,
 0x0C,0x25,0x04,0x00,0xFC,0x00,0x37,0x55,0x10,0x00,0xFC,
 0x00,0xCC,0x15,0x04,0x00,0xFC,0x00,0xC8,0xFD,0x00,0x00,
 0x14,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0x38,0x4F,0x10,
 0x1E,0xFF,0x00,0x0C,0x15,0x04,0x00,0x24,0x0E,0xC8,0x57,
 0x10,0x1E,0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x38,
 0x4D,0x10,0x00,0x14,0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,
 0xC8,0x55,0x10,0x00,0x44,0x06,0xCC,0x33,0x0C,0x10,0xFC,
 0x00,0x38,0x4F,0x10,0x1E,0x14,0x0E,0xCC,0x15,0x04,0x00,
 0xFC,0x00,0xC8,0x61,0x10,0x00,0xFF,0x00,0x0C,0xFD,0x00,
 0x00,0xFC,0x00,0x38,0x5C,0x10,0x01,0xFC,0x00,0xCC,0x1D,
 0x04,0x00,0x4C,0x0E,0xC7,0x60,0xD0,0x08,0x30,0x08,0x00,
 0xFD,0x00,0x00,0x1C,0x06,0x47,0xFC,0xC0,0x08,0x1C,0x0E,
 0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC7,0x5D,0x10,0x00,0xFF,
 0x00,0x0C,0x1D,0x04,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,
 0xFC,0x00,0xCC,0x30,0x0C,0x00,0x1C,0x0E,0xC7,0x63,0x10,
 0x1E,0x4C,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x47,0x4D,
 0x10,0x00,0x1C,0x0E,0xCC,0x1D,0x04,0x00,0x1C,0x06,0xC7,
 0x55,0x10,0x00,0x30,0x08,0x00,0x1D,0x04,0x00,0xFC,0x00,
 0x47,0xFD,0x00,0x00,0x2C,0x0E,0xCC,0x11,0x04,0x00,0xFC,
 0x00,0xC9,0x44,0x10,0x02,0xFF,0x00,0x0C,0xFD,0x00,0x00,
 0xFC,0x00,0x49,0x4D,0x10,0x00,0xFC,0x00,0xCC,0x11,0x04,
 0x00,0x1C,0x0E,0xC9,0xFD,0x00,0x00,0xFC,0x00,0xCC,0xFD,
 0x00,0x00,0xFC,0x00,0x49,0x57,0x10,0x1E,0xFC,0x00,0xCC,
 0x30,0x0C,0x00,0x1C,0x06,0xC9,0x39,0x10,0x00,0x5C,0x06,
 0xCC,0x33,0x0C,0x10,0xFC,0x00,0x49,0x41,0x10,0x00,0x2C,
 0x0E,0xCC,0x11,0x04,0x00,0xFC,0x00,0xC7,0xFD,0x00,0x00,
 0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x47,0x4F,0x10,
 0x1E,0x1C,0x0E,0xCC,0x15,0x04,0xA2,0x54,0x0E,0xC8,0x40,
 0x10,0x01,0x30,0x08,0x00,0xFD,0x00,0x00,0x24,0x06,0x38,
 0x45,0x10,0x00,0x24,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,
 0xC8,0xFD,0x00,0x00,0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,
 0x00,0x38,0x43,0x10,0x1E,0xFC,0x00,0xCC,0x30,0x0C,0x00,
 0x24,0x0E,0xC8,0x55,0x10,0x00,0x54,0x06,0xCC,0x33,0x0C,
 0x10,0xFC,0x00,0x38,0xFD,0x00,0x00,0x24,0x0E,0xCC,0x15,
 0x04,0x00,0x24,0x06,0xC8,0x30,0x10,0x02,0xFF,0x00,0x0C,
 0x15,0x04,0x00,0xFC,0x00,0x38,0x39,0x10,0x00,0xFC,0x00,
 0xCC,0x09,0x04,0x00,0xFC,0x00,0xC5,0xFD,0x00,0x00,0x08,
 0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0x35,0x57,0x10,0x1E,
 0xFF,0x00,0x0C,0x09,0x04,0x00,0x24,0x0E,0xC5,0x4D,0x10,
 0x00,0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x35,0x55,
 0x10,0x00,0x08,0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,0xC5,
 0xFD,0x00,0x00,0x38,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,
 0x35,0x3B,0x10,0x1E,0x08,0x0E,0xCC,0x09,0x04,0x00,0xFC,
 0x00,0xC5,0x54,0x10,0x02,0xFF,0x00,0x0C,0xFD,0x00,0x00,
 0xFC,0x00,0x35,0x5C,0xD0,0x10,0xFC,0x00,0xCC,0x11,0x04,
 0x00,0x4C,0x0E,0xC9,0xFC,0xC0,0x10,0x30,0x08,0x00,0xFD,
 0x00,0x00,0x1C,0x06,0x49,0x57,0x10,0x1E,0x10,0x0E,0xCC,
 0xFD,0x00,0x00,0xFC,0x00,0xC9,0x44,0x10,0x02,0xFF,0x00,
 0x0C,0x11,0x04,0x00,0xFC,0x00,0x49,0x4D,0x10,0x00,0xFC,
 0x00,0xCC,0x30,0x0C,0x00,0x1C,0x0E,0xC9,0xFD,0x00,0x00,
 0x40,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x49,0x5F,0x10,
 0x1E,0x10,0x0E,0xCC,0x11,0x04,0x00,0x1C,0x06,0xC9,0x69,
 0x10,0x00,0x30,0x08,0x00,0x11,0x04,0x00,0xFC,0x00,0x49,
 0x4F,0x10,0x1E,0x1C,0x0E,0xCC,0x1D,0x04,0x00,0xFC,0x00,
 0xC7,0x61,0x10,0x00,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,
 0x00,0x47,0x6B,0x10,0x1E,0xFC,0x00,0xCC,0x1D,0x04,0x00,
 0x1C,0x0E,0xC7,0x5D,0x10,0x00,0xFC,0x00,0xCC,0xFD,0x00,
 0x00,0xFC,0x00,0x47,0x63,0x10,0x1E,0xFC,0x00,0xCC,0x30,
 0x0C,0x00,0x1C,0x06,0xC7,0x55,0x10,0x00,0x4C,0x06,0xCC,
 0x33,0x0C,0x10,0xFC,0x00,0x47,0x5F,0x10,0x1E,0x1C,0x0E,
 0xCC,0x21,0x04,0x00,0xFC,0x00,0xC7,0x4D,0x10,0x00,0x30,
 0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x47,0x57,0x10,0x1E,
 0x1C,0x0E,0xCC,0x25,0x04,0xA2,0xFF,0x00,0x00,0xFF,0x00,
 0x00,0x33,0xC8,0x05,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFF,0x00,0x1E,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x25,0x04,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0x15,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFF,0x00,0x1E,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x1D,0x04,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFF,0x00,0x1E,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0x1D,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0x11,0x04,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFF,0x00,
 0x1E,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0x15,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFF,0x00,0x1E,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x15,0x04,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x09,
 0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFF,0x00,0x1E,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x11,0x04,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFF,0x00,0x1E,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0x11,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0x1D,0x04,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFF,0x00,0x1E,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x21,
 0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x30,0x08,0x00,
 0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0x25,0x04,0xA2,0x54,0x0E,0xC7,0xFF,0x00,0x00,0x30,
 0x08,0x00,0xFD,0x00,0x00,0x24,0x06,0x37,0xFC,0x00,0x00,
 0x10,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC7,0xFC,0x00,
 0x00,0xFF,0x00,0x0C,0x25,0x04,0x00,0xFC,0x00,0x37,0xFC,
 0x00,0x00,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,0x0E,0xC7,
 0xFC,0x00,0x00,0x40,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,
 0x37,0xFC,0x00,0x00,0x10,0x0E,0xCC,0x25,0x04,0x00,0x24,
 0x06,0xC7,0xFC,0x00,0x00,0xFF,0x00,0x0C,0x25,0x04,0x00,
 0xFC,0x00,0x37,0xFC,0x00,0x00,0xFC,0x00,0xCC,0x15,0x04,
 0x00,0xFC,0x00,0xC8,0xFC,0x00,0x00,0x14,0x0E,0xCC,0xFD,
 0x00,0x00,0xFC,0x00,0x38,0xFC,0x00,0x00,0xFF,0x00,0x0C,
 0x15,0x04,0x00,0x24,0x0E,0xC8,0xFC,0x00,0x00,0x30,0x08,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0x00,0x00,0x14,
 0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,0xC8,0xFC,0x00,0x00,
 0x44,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x38,0xFC,0x00,
 0x00,0x14,0x0E,0xCC,0x15,0x04,0x00,0xFC,0x00,0xC8,0xFC,
 0x00,0x00,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x38,
 0xFC,0x00,0x00,0xFC,0x00,0xCC,0x1D,0x04,0x00,0x4C,0x0E,
 0xC7,0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,0x00,0x1C,
 0x06,0x47,0xFC,0x00,0x00,0x1C,0x0E,0xCC,0xFD,0x00,0x00,
 0xFC,0x00,0xC7,0xFC,0x00,0x00,0xFF,0x00,0x0C,0x1D,0x04,
 0x00,0xFC,0x00,0x47,0xFC,0x00,0x00,0xFC,0x00,0xCC,0x30,
 0x0C,0x00,0x1C,0x0E,0xC7,0xFC,0x00,0x00,0x4C,0x06,0xCC,
 0x33,0x0C,0x10,0xFC,0x00,0x47,0xFC,0x00,0x00,0x1C,0x0E,
 0xCC,0x1D,0x04,0x00,0x1C,0x06,0xC7,0xFC,0x00,0x00,0x30,
 0x08,0x00,0x1D,0x04,0x00,0xFC,0x00,0x47,0xFC,0x00,0x00,
 0x2C,0x0E,0xCC,0x11,0x04,0x00,0xFC,0x00,0xC9,0xFC,0x00,
 0x00,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x49,0xFC,
 0x00,0x00,0xFC,0x00,0xCC,0x11,0x04,0x00,0x1C,0x0E,0xC9,
 0xFC,0x00,0x00,0xFC,0x00,0xCC,0xFD,0x00,0x00,0xFC,0x00,
 0x49,0xFC,0x00,0x00,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x1C,
 0x06,0xC9,0xFC,0x00,0x00,0x5C,0x06,0xCC,0x33,0x0C,0x10,
 0xFC,0x00,0x49,0xFC,0x00,0x00,0x2C,0x0E,0xCC,0x11,0x04,
 0x00,0xFC,0x00,0xC7,0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,
 0x00,0x00,0xFC,0x00,0x47,0xFC,0x00,0x00,0x1C,0x0E,0xCC,
 0x15,0x04,0xA2,0x54,0x0E,0xC8,0xFC,0x00,0x00,0x30,0x08,
 0x00,0xFD,0x00,0x00,0x24,0x06,0x38,0xFC,0x00,0x00,0x24,
 0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC8,0xFC,0x00,0x00,
 0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,0x00,0x38,0xFC,0x00,
 0x00,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,0x0E,0xC8,0xFC,
 0x00,0x00,0x54,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x38,
 0xFC,0x00,0x00,0x24,0x0E,0xCC,0x15,0x04,0x00,0x24,0x06,
 0xC8,0xFC,0x00,0x00,0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,
 0x00,0x38,0xFC,0x00,0x00,0xFC,0x00,0xCC,0x09,0x04,0x00,
 0xFC,0x00,0xC5,0xFC,0x00,0x00,0x08,0x0E,0xCC,0xFD,0x00,
 0x00,0xFC,0x00,0x35,0xFC,0x00,0x00,0xFF,0x00,0x0C,0x09,
 0x04,0x00,0x24,0x0E,0xC5,0xFC,0x00,0x00,0x30,0x08,0x00,
 0xFD,0x00,0x00,0xFC,0x00,0x35,0xFC,0x00,0x00,0x08,0x0E,
 0xCC,0x30,0x0C,0x00,0x24,0x06,0xC5,0xFC,0x00,0x00,0x38,
 0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x35,0xFC,0x00,0x00,
 0x08,0x0E,0xCC,0x09,0x04,0x00,0xFC,0x00,0xC5,0xFC,0x00,
 0x00,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x35,0xFC,
 0x00,0x00,0xFC,0x00,0xCC,0x11,0x04,0x00,0x4C,0x0E,0xC9,
 0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,0x00,0x1C,0x06,
 0x49,0xFC,0x00,0x00,0x10,0x0E,0xCC,0xFD,0x00,0x00,0xFC,
 0x00,0xC9,0xFC,0x00,0x00,0xFF,0x00,0x0C,0x11,0x04,0x00,
 0xFC,0x00,0x49,0xFC,0x00,0x00,0xFC,0x00,0xCC,0x30,0x0C,
 0x00,0x1C,0x0E,0xC9,0xFC,0x00,0x00,0x40,0x06,0xCC,0x33,
 0x0C,0x10,0xFC,0x00,0x49,0xFC,0x00,0x00,0x10,0x0E,0xCC,
 0x11,0x04,0x00,0x1C,0x06,0xC9,0xFC,0x00,0x00,0x30,0x08,
 0x00,0x11,0x04,0x00,0xFC,0x00,0x49,0xFC,0x00,0x00,0x1C,
 0x0E,0xCC,0x1D,0x04,0x00,0xFC,0x00,0xC7,0xFC,0x00,0x00,
 0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFC,0x00,
 0x00,0xFC,0x00,0xCC,0x1D,0x04,0x00,0x1C,0x0E,0xC7,0xFC,
 0x00,0x00,0xFC,0x00,0xCC,0xFD,0x00,0x00,0xFC,0x00,0x47,
 0xFC,0x00,0x00,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x1C,0x06,
 0xC7,0xFC,0x00,0x00,0x4C,0x06,0xCC,0x33,0x0C,0x10,0xFC,
 0x00,0x47,0xFC,0x00,0x00,0x1C,0x0E,0xCC,0x21,0x04,0x00,
 0xFC,0x00,0xC7,0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,
 0x00,0xFC,0x00,0x47,0xFC,0x00,0x00,0x1C,0x0E,0xCC,0x25,
 0x04,0xA2,0x54,0x0E,0xC7,0xFF,0x00,0x00,0x30,0x08,0x00,
 0xFD,0x00,0x00,0x24,0x06,0x37,0xFC,0x00,0x00,0x10,0x0E,
 0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC7,0xFC,0x00,0x00,0xFF,
 0x00,0x0C,0x25,0x04,0x00,0xFC,0x00,0x37,0xFC,0x00,0x00,
 0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,0x0E,0xC7,0xFC,0x00,
 0x00,0x40,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x37,0xFC,
 0x00,0x00,0x10,0x0E,0xCC,0x25,0x04,0x00,0x24,0x06,0xC7,
 0xFC,0x00,0x00,0xFF,0x00,0x0C,0x25,0x04,0x00,0xFC,0x00,
 0x37,0xFC,0x00,0x00,0xFC,0x00,0xCC,0x15,0x04,0x00,0xFC,
 0x00,0xC8,0xFC,0x00,0x00,0x14,0x0E,0xCC,0xFD,0x00,0x00,
 0xFC,0x00,0x38,0xFC,0x00,0x00,0xFF,0x00,0x0C,0x15,0x04,
 0x00,0x24,0x0E,0xC8,0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,
 0x00,0x00,0xFC,0x00,0x38,0xFC,0x00,0x00,0x14,0x0E,0xCC,
 0x30,0x0C,0x00,0x24,0x06,0xC8,0xFC,0x00,0x00,0x44,0x06,
 0xCC,0x33,0x0C,0x10,0xFC,0x00,0x38,0xFC,0x00,0x00,0x14,
 0x0E,0xCC,0x15,0x04,0x00,0xFC,0x00,0xC8,0xFC,0x00,0x00,
 0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0x00,
 0x00,0xFC,0x00,0xCC,0x1D,0x04,0x00,0x4C,0x0E,0xC7,0xFC,
 0x00,0x00,0x30,0x08,0x00,0xFD,0x00,0x00,0x1C,0x06,0x47,
 0xFC,0x00,0x00,0x1C,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,
 0xC7,0xFC,0x00,0x00,0xFF,0x00,0x0C,0x1D,0x04,0x00,0xFC,
 0x00,0x47,0xFC,0x00,0x00,0xFC,0x00,0xCC,0x30,0x0C,0x00,
 0x1C,0x0E,0xC7,0xFC,0x00,0x00,0x4C,0x06,0xCC,0x33,0x0C,
 0x10,0xFC,0x00,0x47,0xFC,0x00,0x00,0x1C,0x0E,0xCC,0x1D,
 0x04,0x00,0x1C,0x06,0xC7,0xFC,0x00,0x00,0x30,0x08,0x00,
 0x1D,0x04,0x00,0xFC,0x00,0x47,0xFC,0x00,0x00,0x2C,0x0E,
 0xCC,0x11,0x04,0x00,0xFC,0x00,0xC9,0xFC,0x00,0x00,0xFF,
 0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x49,0xFC,0x00,0x00,
 0xFC,0x00,0xCC,0x11,0x04,0x00,0x1C,0x0E,0xC9,0xFC,0x00,
 0x00,0xFC,0x00,0xCC,0xFD,0x00,0x00,0xFC,0x00,0x49,0xFC,
 0x00,0x00,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x1C,0x06,0xC9,
 0xFC,0x00,0x00,0x5C,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,
 0x49,0xFC,0x00,0x00,0x2C,0x0E,0xCC,0x11,0x04,0x00,0xFC,
 0x00,0xC7,0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,0x00,
 0xFC,0x00,0x47,0xFC,0x00,0x00,0x1C,0x0E,0xCC,0x15,0x04,
 0xA2,0x54,0x0E,0xC8,0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,
 0x00,0x00,0x24,0x06,0x38,0xFC,0x00,0x00,0x24,0x0E,0xCC,
 0xFD,0x00,0x00,0xFC,0x00,0xC8,0xFC,0x00,0x00,0xFF,0x00,
 0x0C,0x15,0x04,0x00,0xFC,0x00,0x38,0xFC,0x00,0x00,0xFC,
 0x00,0xCC,0x30,0x0C,0x00,0x24,0x0E,0xC8,0xFC,0x00,0x00,
 0x54,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x38,0xFC,0x00,
 0x00,0x24,0x0E,0xCC,0x15,0x04,0x00,0x24,0x06,0xC8,0xFC,
 0x00,0x00,0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,0x00,0x38,
 0xFC,0x00,0x00,0xFC,0x00,0xCC,0x09,0x04,0x00,0xFC,0x00,
 0xC5,0xFC,0x00,0x00,0x08,0x0E,0xCC,0xFD,0x00,0x00,0xFC,
 0x00,0x35,0xFC,0x00,0x00,0xFF,0x00,0x0C,0x09,0x04,0x00,
 0x24,0x0E,0xC5,0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,
 0x00,0xFC,0x00,0x35,0xFC,0x00,0x00,0x08,0x0E,0xCC,0x30,
 0x0C,0x00,0x24,0x06,0xC5,0xFC,0x00,0x00,0x38,0x06,0xCC,
 0x33,0x0C,0x10,0xFC,0x00,0x35,0xFC,0x00,0x00,0x08,0x0E,
 0xCC,0x09,0x04,0x00,0xFC,0x00,0xC5,0xFC,0x00,0x00,0xFF,
 0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x35,0xFC,0x00,0x00,
 0xFC,0x00,0xCC,0x11,0x04,0x00,0x4C,0x0E,0xC9,0xFC,0x00,
 0x00,0x30,0x08,0x00,0xFD,0x00,0x00,0x1C,0x06,0x49,0xFC,
 0x00,0x00,0x10,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC9,
 0xFC,0x00,0x00,0xFF,0x00,0x0C,0x11,0x04,0x00,0xFC,0x00,
 0x49,0xFC,0x00,0x00,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x1C,
 0x0E,0xC9,0xFC,0x00,0x00,0x40,0x06,0xCC,0x33,0x0C,0x10,
 0xFC,0x00,0x49,0xFC,0x00,0x00,0x10,0x0E,0xCC,0x11,0x04,
 0x00,0x1C,0x06,0xC9,0xFC,0x00,0x00,0x30,0x08,0x00,0x11,
 0x04,0x00,0xFC,0x00,0x49,0xFC,0x00,0x00,0x1C,0x0E,0xCC,
 0x1D,0x04,0x00,0xFC,0x00,0xC7,0xFC,0x00,0x00,0xFF,0x00,
 0x0C,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFC,0x00,0x00,0xFC,
 0x00,0xCC,0x1D,0x04,0x00,0x1C,0x0E,0xC7,0x7C,0x8E,0x20,
 0xFC,0x00,0xCC,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFC,0x80,
 0x20,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x1C,0x06,0xC7,0xFC,
 0x80,0x20,0x4C,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x47,
 0xFC,0x80,0x20,0x1C,0x0E,0xCC,0x30,0x0C,0x00,0xFC,0x00,
 0xC7,0x7C,0x8E,0x20,0x30,0x08,0x00,0x33,0x0C,0x10,0xFC,
 0x00,0x47,0xFC,0x80,0x20,0x1C,0x0E,0xCC,0x25,0x04,0xA2,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0x25,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFF,0x00,0x1E,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0x25,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0x25,0x04,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0x15,0x04,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x15,0x04,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFF,0x00,
 0x1E,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0x15,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0x1D,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0x1D,0x04,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFF,0x00,0x1E,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x1D,0x04,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x1D,0x04,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x11,
 0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x30,0x08,0x00,
 0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0x11,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFF,0x00,0x1E,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0x11,0x04,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x15,0x04,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x15,
 0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFF,0x00,0x1E,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0x15,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0x15,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0x09,0x04,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0x09,0x04,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFF,0x00,0x1E,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFD,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x09,
 0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0x11,0x04,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x30,
 0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0x11,0x04,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0x30,0x0C,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0x33,0x0C,0x10,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0x11,0x04,0x00,0xFC,
 0x00,0x00,0x30,0x0C,0x00,0xFC,0x00,0x00,0x11,0x04,0x00,
 0xFC,0x00,0x00,0x33,0x0C,0x10,0xFC,0x00,0x00,0x1D,0x04,
 0x00,0xFC,0x00,0x00,0x33,0x0C,0x0D,0x30,0x08,0x00,0xFD,
 0x00,0x00,0xFC,0x00,0x00,0x33,0x0C,0x13,0xFC,0x00,0x00,
 0x1D,0x04,0x00,0xFC,0x00,0x00,0x33,0x0C,0x1A,0xFC,0x00,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x00,0x33,0x0C,0x20,0xFC,
 0x00,0x00,0xFF,0x00,0x1E,0x1C,0x06,0xC7,0x30,0x0C,0x00,
 0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x47,0x33,0x0C,
 0x2D,0xFC,0x00,0x00,0x21,0x04,0x00,0xFC,0x00,0xC7,0x33,
 0x0C,0x33,0xFC,0x00,0x00,0xFD,0x00,0x00,0xFC,0x00,0x47,
 0x30,0x0C,0x00,0xFC,0x00,0x00,0x15,0x04,0x00,0x24,0x0E,
 0xC8,0x74,0x8E,0x20,0x14,0x0E,0xCC,0xFD,0x00,0x00,0xFC,
 0x00,0x38,0xFC,0x80,0x20,0xFF,0x00,0x0C,0x15,0x04,0x00,
 0x24,0x0E,0xC8,0xFC,0x80,0x20,0x30,0x08,0x00,0xFD,0x00,
 0x00,0xFC,0x00,0x38,0xFC,0x80,0x20,0x14,0x0E,0xCC,0x30,
 0x0C,0x00,0x24,0x06,0xC8,0xFC,0x80,0x20,0x44,0x06,0xCC,
 0x33,0x0C,0x10,0xFC,0x00,0x38,0xFC,0x80,0x20,0x14,0x0E,
 0xCC,0x14,0x04,0x00,0xFC,0x00,0xC8,0x69,0x10,0x00,0xFF,
 0x00,0x0C,0x14,0x04,0x00,0xFC,0x00,0x38,0x4F,0x10,0x1E,
 0xFC,0x00,0xCC,0x1D,0x04,0x00,0x4C,0x0E,0xC7,0x61,0x10,
 0x00,0x30,0x08,0x00,0xFD,0x00,0x00,0x1C,0x06,0x47,0x6B,
 0x10,0x1E,0x1C,0x0E,0xCC,0x31,0x0C,0x00,0xFC,0x00,0xC7,
 0x5D,0x10,0x00,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,
 0x47,0x63,0x10,0x1E,0xFC,0x00,0xCC,0x33,0x0C,0x20,0xFF,
 0x00,0x00,0x55,0x10,0x00,0xFF,0x00,0x00,0x33,0x0C,0x28,
 0xFC,0x00,0x00,0x5F,0x10,0x1E,0xFC,0x00,0x00,0x33,0x0C,
 0x30,0xFC,0x00,0x00,0x4D,0x10,0x00,0xFC,0x00,0x00,0x33,
 0x4C,0x00,0xFC,0x00,0x00,0x57,0x10,0x1E,0xFC,0x00,0x00,
 0x15,0x04,0x00,0x54,0x0E,0xC8,0xFD,0x00,0x00,0x30,0x08,
 0x00,0xFD,0x00,0x00,0x24,0x06,0x38,0xFD,0x00,0x00,0x14,
 0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC8,0xFD,0x80,0x02,
 0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,0x00,0x38,0xFD,0x00,
 0x00,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,0x0E,0xC8,0xFD,
 0x80,0x02,0x44,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x38,
 0xFD,0x00,0x00,0x14,0x0E,0xCC,0x15,0x04,0x00,0x24,0x06,
 0xC8,0xFD,0x80,0x02,0x30,0x08,0x00,0x15,0x04,0x00,0xFC,
 0x00,0x38,0xFD,0x00,0x00,0x14,0x0E,0xCC,0x1D,0x04,0x00,
 0x4C,0x0E,0xC7,0x39,0x10,0x82,0x6A,0x8E,0x04,0xFD,0x00,
 0x00,0x1C,0x06,0x47,0x27,0x10,0x1E,0xFE,0x80,0x04,0x31,
 0x0C,0x00,0xFC,0x00,0xC7,0x4D,0x10,0x00,0x5E,0x8E,0x04,
 0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0xFE,0x80,
 0x04,0x33,0x0C,0x20,0xFF,0x00,0x00,0xFF,0x00,0x1E,0x4E,
 0x8E,0x04,0x33,0x0C,0x28,0xFC,0x00,0x00,0xFD,0x00,0x00,
 0x3A,0x8E,0x04,0x33,0x0C,0x30,0xFC,0x00,0x00,0x39,0x10,
 0x00,0x2E,0x8E,0x04,0x33,0x4C,0x00,0xFC,0x00,0x00,0x40,
 0xD0,0x08,0x1E,0x8E,0x04,0x15,0x04,0x00,0x54,0x0E,0xC8,
 0x44,0x06,0xCC,0x30,0x08,0x00,0xFD,0x00,0x00,0x24,0x06,
 0x38,0xFC,0x00,0xCC,0x14,0x0E,0xCC,0xFD,0x00,0x00,0xFC,
 0x00,0xC8,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x15,0x04,0x00,
 0xFC,0x00,0x38,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,
 0x00,0x24,0x0E,0xC8,0x44,0x0E,0xCC,0x44,0x06,0xCC,0x33,
 0x0C,0x10,0xFC,0x00,0x38,0xFC,0x00,0xCC,0x14,0x0E,0xCC,
 0x15,0x04,0x00,0x24,0x06,0xC8,0xFF,0x00,0x0C,0x30,0x08,
 0x00,0x15,0x04,0x00,0xFC,0x00,0x38,0xFC,0x00,0xCC,0x14,
 0x0E,0xCC,0x1D,0x04,0x00,0x4C,0x0E,0xC7,0x38,0x06,0xCC,
 0x6A,0x8E,0x04,0xFD,0x00,0x00,0x1C,0x06,0x47,0xFC,0x00,
 0xCC,0xFE,0x80,0x04,0x31,0x0C,0x00,0xFC,0x00,0xC7,0xFF,
 0x00,0x0C,0x5E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x47,
 0xFC,0x00,0xCC,0xFE,0x80,0x04,0x33,0x0C,0x20,0xFF,0x00,
 0x00,0x1C,0x06,0xCC,0x4E,0x8E,0x04,0x33,0x0C,0x28,0xFC,
 0x00,0x00,0xFC,0x00,0xCC,0x3A,0x8E,0x04,0x33,0x0C,0x30,
 0xFC,0x00,0x00,0x39,0x10,0x00,0x2E,0x8E,0x04,0x33,0x4C,
 0x00,0xFC,0x00,0x00,0x40,0xD0,0x08,0x1E,0x8E,0x04,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,
 0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,
 0x00,0xFC,0x00,0x00,0x25,0x04,0xA2,0x54,0x0E,0xC7,0x38,
 0x10,0x02,0x30,0x08,0x00,0xFD,0x00,0x00,0x24,0x06,0x37,
 0x41,0x10,0x00,0x10,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,
 0xC7,0xFD,0x00,0x00,0xFF,0x00,0x0C,0x25,0x04,0x00,0xFC,
 0x00,0x37,0x3B,0x10,0x1E,0xFC,0x00,0xCC,0x30,0x0C,0x00,
 0x24,0x0E,0xC7,0x55,0x10,0x00,0x40,0x06,0xCC,0x33,0x0C,
 0x10,0xFC,0x00,0x37,0x43,0x10,0x1E,0x10,0x0E,0xCC,0x25,
 0x04,0x00,0x24,0x06,0xC7,0x4D,0x10,0x00,0xFF,0x00,0x0C,
 0x25,0x04,0x00,0xFC,0x00,0x37,0x55,0x10,0x00,0xFC,0x00,
 0xCC,0x15,0x04,0x00,0xFC,0x00,0xC8,0xFD,0x00,0x00,0x14,
 0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0x38,0x4F,0x10,0x1E,
 0xFF,0x00,0x0C,0x15,0x04,0x00,0x24,0x0E,0xC8,0x57,0x10,
 0x1E,0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x38,0x4D,
 0x10,0x00,0x14,0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,0xC8,
 0x55,0x10,0x00,0x44,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,
 0x38,0x4F,0x10,0x1E,0x14,0x0E,0xCC,0x15,0x04,0x00,0xFC,
 0x00,0xC8,0x61,0x10,0x00,0xFF,0x00,0x0C,0xFD,0x00,0x00,
 0xFC,0x00,0x38,0x5C,0x10,0x01,0xFC,0x00,0xCC,0x1D,0x04,
 0x00,0x4C,0x0E,0xC7,0x60,0xD0,0x08,0x30,0x08,0x00,0xFD,
 0x00,0x00,0x1C,0x06,0x47,0xFC,0xC0,0x08,0x1C,0x0E,0xCC,
 0xFD,0x00,0x00,0xFC,0x00,0xC7,0x5D,0x10,0x00,0xFF,0x00,
 0x0C,0x1D,0x04,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0xFC,
 0x00,0xCC,0x30,0x0C,0x00,0x1C,0x0E,0xC7,0x63,0x10,0x1E,
 0x4C,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x47,0x4D,0x10,
 0x00,0x1C,0x0E,0xCC,0x1D,0x04,0x00,0x1C,0x06,0xC7,0x55,
 0x10,0x00,0x30,0x08,0x00,0x1D,0x04,0x00,0xFC,0x00,0x47,
 0xFD,0x00,0x00,0x2C,0x0E,0xCC,0x11,0x04,0x00,0xFC,0x00,
 0xC9,0x38,0x10,0x02,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,
 0x00,0x49,0x41,0x10,0x00,0xFC,0x00,0xCC,0x11,0x04,0x00,
 0x1C,0x0E,0xC9,0xFD,0x00,0x00,0xFC,0x00,0xCC,0xFD,0x00,
 0x00,0xFC,0x00,0x49,0x57,0x10,0x1E,0xFC,0x00,0xCC,0x30,
 0x0C,0x00,0x1C,0x06,0xC9,0x45,0x10,0x00,0x5C,0x06,0xCC,
 0x33,0x0C,0x10,0xFC,0x00,0x49,0x4D,0x10,0x00,0x2C,0x0E,
 0xCC,0x11,0x04,0x00,0xFC,0x00,0xC7,0xFD,0x00,0x00,0x30,
 0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x47,0x43,0x10,0x1E,
 0x1C,0x0E,0xCC,0x15,0x04,0xA2,0x54,0x0E,0xC8,0x40,0x10,
 0x01,0x30,0x08,0x00,0xFD,0x00,0x00,0x24,0x06,0x38,0x45,
 0x10,0x00,0x24,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC8,
 0xFD,0x00,0x00,0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,0x00,
 0x38,0x43,0x10,0x1E,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,
 0x0E,0xC8,0x31,0x10,0x00,0x54,0x06,0xCC,0x33,0x0C,0x10,
 0xFC,0x00,0x38,0xFD,0x00,0x00,0x24,0x0E,0xCC,0x15,0x04,
 0x00,0x24,0x06,0xC8,0x30,0x10,0x02,0xFF,0x00,0x0C,0x15,
 0x04,0x00,0xFC,0x00,0x38,0x39,0x10,0x00,0xFC,0x00,0xCC,
 0x09,0x04,0x00,0xFC,0x00,0xC5,0xFD,0x00,0x00,0x08,0x0E,
 0xCC,0xFD,0x00,0x00,0xFC,0x00,0x35,0x33,0x10,0x1E,0xFF,
 0x00,0x0C,0x09,0x04,0x00,0x24,0x0E,0xC5,0x39,0x10,0x00,
 0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x35,0xFD,0x00,
 0x00,0x08,0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,0xC5,0xFD,
 0x00,0x00,0x38,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x35,
 0x3B,0x10,0x1E,0x08,0x0E,0xCC,0x09,0x04,0x00,0xFC,0x00,
 0xC5,0x38,0x10,0x02,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,
 0x00,0x35,0x41,0x10,0x00,0xFC,0x00,0xCC,0x11,0x04,0x00,
 0x4C,0x0E,0xC9,0xFD,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,
 0x00,0x1C,0x06,0x49,0x3B,0x10,0x1E,0x10,0x0E,0xCC,0xFD,
 0x00,0x00,0xFC,0x00,0xC9,0x44,0x10,0x02,0xFF,0x00,0x0C,
 0x11,0x04,0x00,0xFC,0x00,0x49,0x4D,0x10,0x00,0xFC,0x00,
 0xCC,0x30,0x0C,0x00,0x1C,0x0E,0xC9,0xFD,0x00,0x00,0x40,
 0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x49,0x33,0x10,0x1E,
 0x10,0x0E,0xCC,0x11,0x04,0x00,0x1C,0x06,0xC9,0x39,0x10,
 0x00,0x30,0x08,0x00,0x11,0x04,0x00,0xFC,0x00,0x49,0x43,
 0x10,0x1E,0x1C,0x0E,0xCC,0x1D,0x04,0x00,0xFC,0x00,0xC7,
 0x4D,0x10,0x00,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,
 0x47,0x3B,0x10,0x1E,0xFC,0x00,0xCC,0x1D,0x04,0x00,0x1C,
 0x0E,0xC7,0x5D,0x10,0x00,0xFC,0x00,0xCC,0xFD,0x00,0x00,
 0xFC,0x00,0x47,0x4F,0x10,0x1E,0xFC,0x00,0xCC,0x30,0x0C,
 0x00,0x1C,0x06,0xC7,0x4D,0x10,0x00,0x4C,0x06,0xCC,0x33,
 0x0C,0x10,0xFC,0x00,0x47,0x5F,0x10,0x1E,0x1C,0x0E,0xCC,
 0x21,0x04,0x00,0xFC,0x00,0xC7,0x39,0x10,0x00,0x30,0x08,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x47,0x4F,0x10,0x1E,0x1C,
 0x0E,0xCC,0x25,0x04,0xA2,0x54,0x0E,0xC7,0x38,0x10,0x02,
 0x30,0x08,0x00,0xFD,0x00,0x00,0x24,0x06,0x37,0x41,0x10,
 0x00,0x10,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC7,0xFD,
 0x00,0x00,0xFF,0x00,0x0C,0x25,0x04,0x00,0xFC,0x00,0x37,
 0x3B,0x10,0x1E,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,0x0E,
 0xC7,0x55,0x10,0x00,0x40,0x06,0xCC,0x33,0x0C,0x10,0xFC,
 0x00,0x37,0x43,0x10,0x1E,0x10,0x0E,0xCC,0x25,0x04,0x00,
 0x24,0x06,0xC7,0x4D,0x10,0x00,0xFF,0x00,0x0C,0x25,0x04,
 0x00,0xFC,0x00,0x37,0x55,0x10,0x00,0xFC,0x00,0xCC,0x15,
 0x04,0x00,0xFC,0x00,0xC8,0xFD,0x00,0x00,0x14,0x0E,0xCC,
 0xFD,0x00,0x00,0xFC,0x00,0x38,0x4F,0x10,0x1E,0xFF,0x00,
 0x0C,0x15,0x04,0x00,0x24,0x0E,0xC8,0x57,0x10,0x1E,0x30,
 0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x38,0x4D,0x10,0x00,
 0x14,0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,0xC8,0x55,0x10,
 0x00,0x44,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x38,0x4F,
 0x10,0x1E,0x14,0x0E,0xCC,0x15,0x04,0x00,0xFC,0x00,0xC8,
 0x61,0x10,0x00,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,
 0x38,0x5C,0x10,0x01,0xFC,0x00,0xCC,0x1D,0x04,0x00,0x4C,
 0x0E,0xC7,0x60,0xD0,0x08,0x30,0x08,0x00,0xFD,0x00,0x00,
 0x1C,0x06,0x47,0xFC,0xC0,0x08,0x1C,0x0E,0xCC,0xFD,0x00,
 0x00,0xFC,0x00,0xC7,0x5D,0x10,0x00,0xFF,0x00,0x0C,0x1D,
 0x04,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0xFC,0x00,0xCC,
 0x30,0x0C,0x00,0x1C,0x0E,0xC7,0x63,0x10,0x1E,0x4C,0x06,
 0xCC,0x33,0x0C,0x10,0xFC,0x00,0x47,0x4D,0x10,0x00,0x1C,
 0x0E,0xCC,0x1D,0x04,0x00,0x1C,0x06,0xC7,0x55,0x10,0x00,
 0x30,0x08,0x00,0x1D,0x04,0x00,0xFC,0x00,0x47,0xFD,0x00,
 0x00,0x2C,0x0E,0xCC,0x11,0x04,0x00,0xFC,0x00,0xC9,0x38,
 0x10,0x02,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x49,
 0x41,0x10,0x00,0xFC,0x00,0xCC,0x11,0x04,0x00,0x1C,0x0E,
 0xC9,0xFD,0x00,0x00,0xFC,0x00,0xCC,0xFD,0x00,0x00,0xFC,
 0x00,0x49,0x57,0x10,0x1E,0xFC,0x00,0xCC,0x30,0x0C,0x00,
 0x1C,0x06,0xC9,0x45,0x10,0x00,0x5C,0x06,0xCC,0x33,0x0C,
 0x10,0xFC,0x00,0x49,0x4D,0x10,0x00,0x2C,0x0E,0xCC,0x11,
 0x04,0x00,0xFC,0x00,0xC7,0xFD,0x00,0x00,0x30,0x08,0x00,
 0xFD,0x00,0x00,0xFC,0x00,0x47,0x43,0x10,0x1E,0x1C,0x0E,
 0xCC,0x15,0x04,0xA2,0x54,0x0E,0xC8,0x40,0x10,0x01,0x30,
 0x08,0x00,0xFD,0x00,0x00,0x24,0x06,0x38,0x45,0x10,0x00,
 0x24,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC8,0xFD,0x00,
 0x00,0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,0x00,0x38,0x43,
 0x10,0x1E,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,0x0E,0xC8,
 0x31,0x10,0x00,0x54,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,
 0x38,0xFD,0x00,0x00,0x24,0x0E,0xCC,0x15,0x04,0x00,0x24,
 0x06,0xC8,0x30,0x10,0x02,0xFF,0x00,0x0C,0x15,0x04,0x00,
 0xFC,0x00,0x38,0x39,0x10,0x00,0xFC,0x00,0xCC,0x09,0x04,
 0x00,0xFC,0x00,0xC5,0xFD,0x00,0x00,0x08,0x0E,0xCC,0xFD,
 0x00,0x00,0xFC,0x00,0x35,0x33,0x10,0x1E,0xFF,0x00,0x0C,
 0x09,0x04,0x00,0x24,0x0E,0xC5,0x39,0x10,0x00,0x30,0x08,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x35,0xFD,0x00,0x00,0x08,
 0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,0xC5,0xFD,0x00,0x00,
 0x38,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x35,0x3B,0x10,
 0x1E,0x08,0x0E,0xCC,0x09,0x04,0x00,0xFC,0x00,0xC5,0x38,
 0x10,0x02,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x35,
 0x41,0x10,0x00,0xFC,0x00,0xCC,0x11,0x04,0x00,0x4C,0x0E,
 0xC9,0xFD,0x00,0x00,0x30,0x08,0x00,0xFD,0x00,0x00,0x1C,
 0x06,0x49,0x3B,0x10,0x1E,0x10,0x0E,0xCC,0xFD,0x00,0x00,
 0xFC,0x00,0xC9,0x41,0x90,0x06,0xFF,0x00,0x0C,0x11,0x04,
 0x00,0xFC,0x00,0x49,0xFD,0x80,0x06,0xFC,0x00,0xCC,0x30,
 0x0C,0x00,0x1C,0x0E,0xC9,0x39,0x90,0x05,0x40,0x06,0xCC,
 0x33,0x0C,0x10,0xFC,0x00,0x49,0xFD,0x80,0x05,0x10,0x0E,
 0xCC,0x11,0x04,0x00,0x1C,0x06,0xC9,0x31,0x90,0x04,0x30,
 0x08,0x00,0x11,0x04,0x00,0xFC,0x00,0x49,0xFD,0x80,0x04,
 0x1C,0x0E,0xCC,0x1D,0x04,0x00,0xFC,0x00,0xC7,0x2D,0x90,
 0x03,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,
 0x80,0x03,0xFC,0x00,0xCC,0x1D,0x04,0x00,0x1C,0x0E,0xC7,
 0x25,0x90,0x02,0xFC,0x00,0xCC,0xFD,0x00,0x00,0xFC,0x00,
 0x47,0xFD,0x80,0x02,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x1C,
 0x06,0xC7,0x1D,0x90,0x01,0x4C,0x06,0xCC,0x33,0x0C,0x10,
 0xFC,0x00,0x47,0xFD,0x80,0x01,0x1C,0x0E,0xCC,0x21,0x04,
 0x00,0xFC,0x00,0xC7,0x25,0x10,0x00,0x30,0x08,0x00,0xFF,
 0x40,0x16,0xFC,0x00,0x47,0xFD,0x00,0x00,0x1C,0x0E,0xCC,
 0x31,0x04,0xA2,0x30,0x06,0x47,0xFC,0xC0,0x08,0x02,0x8E,
 0x04,0xFD,0x00,0x00,0x30,0x0E,0x47,0xFD,0x00,0x82,0x12,
 0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,0x80,0x04,
 0x1E,0x8E,0x04,0x31,0x04,0x00,0xFC,0x00,0x47,0xFD,0x80,
 0x04,0x32,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x00,0x47,0x41,
 0x10,0x00,0x42,0x8E,0x04,0x33,0x0C,0x10,0xFC,0x00,0x47,
 0x43,0x10,0x1E,0x4E,0x8E,0x04,0x31,0x04,0x00,0x30,0x06,
 0x47,0x3B,0x90,0xC2,0x62,0x8E,0x04,0xFD,0x00,0x00,0x30,
 0x0E,0x47,0x33,0x90,0xC3,0x72,0x8E,0x04,0x1D,0x04,0x00,
 0xFC,0x00,0x47,0x39,0x10,0x00,0x7E,0x8E,0x04,0xFD,0x00,
 0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x72,0x8E,0x04,0x31,
 0x04,0x00,0xFC,0x00,0x47,0x43,0x10,0x1E,0x62,0x8E,0x04,
 0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x4E,0x8E,
 0x04,0x30,0x0C,0x00,0x30,0x06,0x47,0x1D,0x10,0x00,0x42,
 0x8E,0x04,0x33,0x0C,0x10,0x30,0x0E,0x47,0xFD,0x00,0x00,
 0x32,0x8E,0x04,0x31,0x04,0x00,0xFC,0x00,0x47,0x3B,0x10,
 0x1E,0x1E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,
 0x00,0x00,0x12,0x8E,0x04,0x21,0x04,0x00,0x30,0x06,0x38,
 0x21,0x10,0x00,0x02,0x8E,0x04,0xFD,0x00,0x00,0x30,0x0E,
 0x38,0xFD,0x00,0x00,0x0E,0x8E,0x04,0xFD,0x00,0x00,0xFC,
 0x00,0x38,0x1F,0x10,0x1E,0x22,0x8E,0x04,0x21,0x04,0x00,
 0xFC,0x00,0x38,0xFD,0x00,0x00,0x32,0x8E,0x04,0x30,0x0C,
 0x00,0xFC,0x00,0x38,0x3D,0x10,0x00,0x3E,0x8E,0x04,0x33,
 0x0C,0x10,0xFC,0x00,0x38,0x23,0x10,0x1E,0x52,0x8E,0x04,
 0x21,0x04,0x00,0x30,0x06,0x38,0x45,0x10,0x00,0x62,0x8E,
 0x04,0xFD,0x00,0x00,0x30,0x0E,0x38,0xFD,0x00,0x00,0x6E,
 0x8E,0x04,0x0D,0x04,0x00,0xFC,0x00,0x38,0x53,0x90,0xC3,
 0x82,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0x4F,0x90,
 0xC2,0x6E,0x8E,0x04,0x21,0x04,0x00,0xFC,0x00,0x38,0x50,
 0xD0,0x08,0x62,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,
 0xFC,0xC0,0x00,0x52,0x8E,0x04,0x30,0x0C,0x00,0x30,0x06,
 0x38,0x45,0x10,0x00,0x3E,0x8E,0x04,0x33,0x0C,0x10,0x30,
 0x0E,0x38,0xFD,0x00,0x00,0x32,0x8E,0x04,0x21,0x04,0x00,
 0xFC,0x00,0x38,0x3D,0x10,0x00,0x1E,0x8E,0x04,0xFD,0x00,
 0x00,0xFC,0x00,0x38,0x47,0x10,0x1E,0x0E,0x8E,0x04,0x15,
 0x04,0x00,0x24,0x06,0x38,0x2C,0x50,0x01,0x02,0x8E,0x04,
 0xFD,0x00,0x00,0x24,0x0E,0x38,0x30,0xD0,0x08,0x16,0x8E,
 0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,0x26,
 0x8E,0x04,0x15,0x04,0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,
 0x32,0x8E,0x04,0x31,0x0C,0x00,0xFC,0x00,0x38,0x47,0x10,
 0x1E,0x46,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFD,
 0x00,0x00,0x56,0x8E,0x04,0x15,0x04,0x00,0x24,0x06,0x38,
 0x31,0x10,0x00,0x62,0x8E,0x04,0xFD,0x00,0x00,0x24,0x0E,
 0x38,0x33,0x10,0x1E,0x76,0x8E,0x04,0x01,0x04,0x00,0xFC,
 0x00,0x38,0x1D,0x10,0x00,0x86,0x8E,0x04,0xFD,0x00,0x00,
 0xFC,0x00,0x38,0x33,0x10,0x1E,0x76,0x8E,0x04,0x15,0x04,
 0x00,0xFC,0x00,0x38,0x25,0x10,0x00,0x62,0x8E,0x04,0xFD,
 0x00,0x00,0xFC,0x00,0x38,0x1F,0x10,0x1E,0x56,0x8E,0x04,
 0x30,0x0C,0x00,0x24,0x06,0x38,0x31,0x10,0x00,0x46,0x8E,
 0x04,0x33,0x0C,0x10,0x24,0x0E,0x38,0x27,0x10,0x1E,0x32,
 0x8E,0x04,0x15,0x04,0x00,0xFC,0x00,0x38,0x24,0x50,0x01,
 0x26,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0x2C,0xD0,
 0x08,0x16,0x8E,0x04,0x1D,0x04,0x00,0x2C,0x06,0x38,0xFC,
 0xC0,0x00,0x0A,0x8E,0x04,0xFD,0x00,0x00,0x2C,0x0E,0x38,
 0xFC,0xC0,0x00,0x1E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,
 0x38,0xFC,0xC0,0x00,0x2E,0x8E,0x04,0x1D,0x04,0x00,0xFC,
 0x00,0x38,0xFC,0xC0,0x00,0x3A,0x8E,0x04,0x30,0x0C,0x00,
 0xFC,0x00,0x38,0xFD,0x80,0x04,0x4E,0x8E,0x04,0x33,0x0C,
 0x10,0xFC,0x00,0x38,0xFD,0x00,0x00,0x5E,0x8E,0x04,0x1D,
 0x04,0x00,0x2C,0x06,0x38,0x39,0x90,0x04,0x6A,0x8E,0x04,
 0xFD,0x00,0x00,0x2C,0x0E,0x38,0x31,0x10,0x00,0x7E,0x8E,
 0x04,0x09,0x04,0x00,0xFC,0x00,0x38,0x39,0x90,0x04,0x8E,
 0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFD,0x00,0x00,
 0x7E,0x8E,0x04,0x1D,0x04,0x00,0xFC,0x00,0x38,0xFD,0x80,
 0x04,0x6A,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFD,
 0x00,0x00,0x5E,0x8E,0x04,0x30,0x0C,0x00,0x2C,0x06,0x38,
 0x2D,0x90,0x04,0x4E,0x8E,0x04,0x33,0x0C,0x10,0x2C,0x0E,
 0x38,0xFD,0x00,0x00,0x3A,0x8E,0x04,0x21,0x04,0x00,0xFC,
 0x00,0x38,0xFD,0x80,0x08,0x2E,0x8E,0x04,0xFD,0x00,0x00,
 0xFC,0x00,0x38,0xFD,0x80,0x08,0x1E,0x8E,0x04,0x31,0x04,
 0xA2,0x30,0x06,0x47,0xFD,0x00,0x82,0x02,0x8E,0x04,0xFD,
 0x00,0x00,0x30,0x0E,0x47,0xFD,0x00,0x00,0x12,0x8E,0x04,
 0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x1E,0x8E,
 0x04,0x31,0x04,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x32,
 0x8E,0x04,0x30,0x0C,0x00,0xFC,0x00,0x47,0x41,0x10,0x00,
 0x42,0x8E,0x04,0x33,0x0C,0x10,0xFC,0x00,0x47,0x43,0x10,
 0x1E,0x4E,0x8E,0x04,0x31,0x04,0x00,0x30,0x06,0x47,0x3B,
 0x90,0xC2,0x62,0x8E,0x04,0xFD,0x00,0x00,0x30,0x0E,0x47,
 0x33,0x90,0xC3,0x72,0x8E,0x04,0x1D,0x04,0x00,0xFC,0x00,
 0x47,0x39,0x10,0x00,0x7E,0x8E,0x04,0xFD,0x00,0x00,0xFC,
 0x00,0x47,0xFD,0x00,0x00,0x72,0x8E,0x04,0x31,0x04,0x00,
 0xFC,0x00,0x47,0x43,0x10,0x1E,0x62,0x8E,0x04,0xFD,0x00,
 0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x4E,0x8E,0x04,0x30,
 0x0C,0x00,0x30,0x06,0x47,0x1D,0x10,0x00,0x42,0x8E,0x04,
 0x33,0x0C,0x10,0x30,0x0E,0x47,0xFD,0x00,0x00,0x32,0x8E,
 0x04,0x31,0x04,0x00,0xFC,0x00,0x47,0x3B,0x10,0x1E,0x1E,
 0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,
 0x12,0x8E,0x04,0x21,0x04,0x00,0x30,0x06,0x38,0x21,0x10,
 0x00,0x02,0x8E,0x04,0xFD,0x00,0x00,0x30,0x0E,0x38,0xFD,
 0x00,0x00,0x0E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,
 0x1F,0x10,0x1E,0x22,0x8E,0x04,0x21,0x04,0x00,0xFC,0x00,
 0x38,0xFD,0x00,0x00,0x32,0x8E,0x04,0x30,0x0C,0x00,0xFC,
 0x00,0x38,0x3D,0x10,0x00,0x3E,0x8E,0x04,0x33,0x0C,0x10,
 0xFC,0x00,0x38,0x23,0x10,0x1E,0x52,0x8E,0x04,0x21,0x04,
 0x00,0x30,0x06,0x38,0x45,0x10,0x00,0x62,0x8E,0x04,0xFD,
 0x00,0x00,0x30,0x0E,0x38,0xFD,0x00,0x00,0x6E,0x8E,0x04,
 0x0D,0x04,0x00,0xFC,0x00,0x38,0x53,0x90,0xC3,0x82,0x8E,
 0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0x4F,0x90,0xC2,0x6E,
 0x8E,0x04,0x21,0x04,0x00,0xFC,0x00,0x38,0x50,0xD0,0x08,
 0x62,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0xC0,
 0x00,0x52,0x8E,0x04,0x30,0x0C,0x00,0x30,0x06,0x38,0x45,
 0x10,0x00,0x3E,0x8E,0x04,0x33,0x0C,0x10,0x30,0x0E,0x38,
 0xFD,0x00,0x00,0x32,0x8E,0x04,0x21,0x04,0x00,0xFC,0x00,
 0x38,0x3D,0x10,0x00,0x1E,0x8E,0x04,0xFD,0x00,0x00,0xFC,
 0x00,0x38,0x47,0x10,0x1E,0x0E,0x8E,0x04,0x15,0x04,0x00,
 0x24,0x06,0x38,0x2C,0x50,0x01,0x02,0x8E,0x04,0xFD,0x00,
 0x00,0x24,0x0E,0x38,0x30,0xD0,0x08,0x16,0x8E,0x04,0xFD,
 0x00,0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,0x26,0x8E,0x04,
 0x15,0x04,0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,0x32,0x8E,
 0x04,0x31,0x0C,0x00,0xFC,0x00,0x38,0x47,0x10,0x1E,0x46,
 0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFD,0x00,0x00,
 0x56,0x8E,0x04,0x15,0x04,0x00,0x24,0x06,0x38,0x31,0x10,
 0x00,0x62,0x8E,0x04,0xFD,0x00,0x00,0x24,0x0E,0x38,0x33,
 0x10,0x1E,0x76,0x8E,0x04,0x01,0x04,0x00,0xFC,0x00,0x38,
 0x1D,0x10,0x00,0x86,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,
 0x38,0x33,0x10,0x1E,0x76,0x8E,0x04,0x15,0x04,0x00,0xFC,
 0x00,0x38,0x25,0x10,0x00,0x62,0x8E,0x04,0xFD,0x00,0x00,
 0xFC,0x00,0x38,0x1F,0x10,0x1E,0x56,0x8E,0x04,0x30,0x0C,
 0x00,0x24,0x06,0x38,0x31,0x10,0x00,0x46,0x8E,0x04,0x33,
 0x0C,0x10,0x24,0x0E,0x38,0x27,0x10,0x1E,0x32,0x8E,0x04,
 0x15,0x04,0x00,0xFC,0x00,0x38,0x30,0x50,0x01,0x26,0x8E,
 0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0x38,0xD0,0x08,0x16,
 0x8E,0x04,0x1D,0x04,0x00,0x2C,0x06,0x38,0xFC,0xC0,0x00,
 0x0A,0x8E,0x04,0xFD,0x00,0x00,0x2C,0x0E,0x38,0xFC,0xC0,
 0x00,0x1E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,
 0xC0,0x00,0x2E,0x8E,0x04,0x1D,0x04,0x00,0xFC,0x00,0x38,
 0xFC,0xC0,0x00,0x3A,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x00,
 0x38,0xFD,0x80,0x04,0x4E,0x8E,0x04,0x33,0x0C,0x10,0xFC,
 0x00,0x38,0xFD,0x00,0x00,0x5E,0x8E,0x04,0x1D,0x04,0x00,
 0x2C,0x06,0x38,0xFC,0x00,0x00,0x6A,0x8E,0x04,0xFD,0x00,
 0x00,0x2C,0x0E,0x38,0xFC,0x00,0x00,0x7E,0x8E,0x04,0x09,
 0x04,0x00,0xFF,0x00,0x00,0x39,0x10,0x00,0x8E,0x8E,0x04,
 0xFD,0x00,0x00,0xFC,0x00,0x00,0x3B,0x10,0x1E,0x7E,0x8E,
 0x04,0x31,0x0C,0x00,0xFC,0x00,0x00,0x31,0x10,0x00,0x6A,
 0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x00,0x3B,0x10,0x1E,
 0x5E,0x8E,0x04,0x30,0x0C,0x00,0x4C,0x86,0x10,0x39,0x10,
 0x00,0x4E,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x80,0x10,0x33,
 0x10,0x1E,0x3A,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x80,0x10,
 0x41,0x10,0x00,0x2E,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x80,
 0x10,0x3B,0x10,0x1E,0x1E,0x8E,0x04,0x31,0x04,0xA2,0x30,
 0x06,0x47,0xFD,0x00,0x82,0x02,0x8E,0x04,0xFD,0x00,0x00,
 0x30,0x0E,0x47,0xFD,0x00,0x00,0x12,0x8E,0x04,0xFD,0x00,
 0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x1E,0x8E,0x04,0x31,
 0x04,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x32,0x8E,0x04,
 0x30,0x0C,0x00,0xFC,0x00,0x47,0x41,0x10,0x00,0x42,0x8E,
 0x04,0x33,0x0C,0x10,0xFC,0x00,0x47,0x43,0x10,0x1E,0x4E,
 0x8E,0x04,0x31,0x04,0x00,0x30,0x06,0x47,0x3B,0x90,0xC2,
 0x62,0x8E,0x04,0xFD,0x00,0x00,0x30,0x0E,0x47,0x33,0x90,
 0xC3,0x72,0x8E,0x04,0x1D,0x04,0x00,0xFC,0x00,0x47,0x39,
 0x10,0x00,0x7E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x47,
 0xFD,0x00,0x00,0x72,0x8E,0x04,0x31,0x04,0x00,0xFC,0x00,
 0x47,0x43,0x10,0x1E,0x62,0x8E,0x04,0xFD,0x00,0x00,0xFC,
 0x00,0x47,0xFD,0x00,0x00,0x4E,0x8E,0x04,0x30,0x0C,0x00,
 0x30,0x06,0x47,0x1D,0x10,0x00,0x42,0x8E,0x04,0x33,0x0C,
 0x10,0x30,0x0E,0x47,0xFD,0x00,0x00,0x32,0x8E,0x04,0x31,
 0x04,0x00,0xFC,0x00,0x47,0x3B,0x10,0x1E,0x1E,0x8E,0x04,
 0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x12,0x8E,
 0x04,0x21,0x04,0x00,0x30,0x06,0x38,0x21,0x10,0x00,0x02,
 0x8E,0x04,0xFD,0x00,0x00,0x30,0x0E,0x38,0xFD,0x00,0x00,
 0x0E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0x1F,0x10,
 0x1E,0x22,0x8E,0x04,0x21,0x04,0x00,0xFC,0x00,0x38,0xFD,
 0x00,0x00,0x32,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x00,0x38,
 0x3D,0x10,0x00,0x3E,0x8E,0x04,0x33,0x0C,0x10,0xFC,0x00,
 0x38,0x23,0x10,0x1E,0x52,0x8E,0x04,0x21,0x04,0x00,0x30,
 0x06,0x38,0x45,0x10,0x00,0x62,0x8E,0x04,0xFD,0x00,0x00,
 0x30,0x0E,0x38,0xFD,0x00,0x00,0x6E,0x8E,0x04,0x0D,0x04,
 0x00,0xFC,0x00,0x38,0x53,0x90,0xC3,0x82,0x8E,0x04,0xFD,
 0x00,0x00,0xFC,0x00,0x38,0x4F,0x90,0xC2,0x6E,0x8E,0x04,
 0x21,0x04,0x00,0xFC,0x00,0x38,0x50,0xD0,0x08,0x62,0x8E,
 0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,0x52,
 0x8E,0x04,0x30,0x0C,0x00,0x30,0x06,0x38,0x45,0x10,0x00,
 0x3E,0x8E,0x04,0x33,0x0C,0x10,0x30,0x0E,0x38,0xFD,0x00,
 0x00,0x32,0x8E,0x04,0x21,0x04,0x00,0xFC,0x00,0x38,0x3D,
 0x10,0x00,0x1E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,
 0x47,0x10,0x1E,0x0E,0x8E,0x04,0x15,0x04,0x00,0x24,0x06,
 0x38,0x2C,0x50,0x01,0x02,0x8E,0x04,0xFD,0x00,0x00,0x24,
 0x0E,0x38,0x30,0xD0,0x08,0x16,0x8E,0x04,0xFD,0x00,0x00,
 0xFC,0x00,0x38,0xFC,0xC0,0x00,0x26,0x8E,0x04,0x15,0x04,
 0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,0x32,0x8E,0x04,0x31,
 0x0C,0x00,0xFC,0x00,0x38,0x47,0x10,0x1E,0x46,0x8E,0x04,
 0xFD,0x00,0x00,0xFC,0x00,0x38,0xFD,0x00,0x00,0x56,0x8E,
 0x04,0x15,0x04,0x00,0x24,0x06,0x38,0x31,0x10,0x00,0x62,
 0x8E,0x04,0xFD,0x00,0x00,0x24,0x0E,0x38,0x33,0x10,0x1E,
 0x76,0x8E,0x04,0x01,0x04,0x00,0xFC,0x00,0x38,0x1D,0x10,
 0x00,0x86,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0x33,
 0x10,0x1E,0x76,0x8E,0x04,0x15,0x04,0x00,0xFC,0x00,0x38,
 0x25,0x10,0x00,0x62,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,
 0x38,0x1F,0x10,0x1E,0x56,0x8E,0x04,0x30,0x0C,0x00,0x24,
 0x06,0x38,0x31,0x10,0x00,0x46,0x8E,0x04,0x33,0x0C,0x10,
 0x24,0x0E,0x38,0x27,0x10,0x1E,0x32,0x8E,0x04,0x15,0x04,
 0x00,0xFC,0x00,0x38,0x30,0x50,0x01,0x26,0x8E,0x04,0xFD,
 0x00,0x00,0xFC,0x00,0x38,0x38,0xD0,0x08,0x16,0x8E,0x04,
 0x1D,0x04,0x00,0x2C,0x06,0x38,0xFC,0xC0,0x00,0x0A,0x8E,
 0x04,0xFD,0x00,0x00,0x2C,0x0E,0x38,0xFC,0xC0,0x00,0x1E,
 0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,
 0x2E,0x8E,0x04,0x1D,0x04,0x00,0xFC,0x00,0x38,0xFC,0xC0,
 0x00,0x3A,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x00,0x38,0xFD,
 0x80,0x04,0x4E,0x8E,0x04,0x33,0x0C,0x10,0xFC,0x00,0x38,
 0xFD,0x00,0x00,0x5E,0x8E,0x04,0x1D,0x04,0x00,0x2C,0x06,
 0x38,0x2D,0x90,0x04,0x6A,0x8E,0x04,0xFD,0x00,0x00,0x2C,
 0x0E,0x38,0x25,0x10,0x00,0x7E,0x8E,0x04,0x09,0x04,0x00,
 0xFC,0x00,0x38,0x2D,0x90,0x04,0x8E,0x8E,0x04,0xFD,0x00,
 0x00,0xFC,0x00,0x38,0xFD,0x00,0x00,0x7E,0x8E,0x04,0x1D,
 0x04,0x00,0xFC,0x00,0x38,0xFD,0x80,0x04,0x6A,0x8E,0x04,
 0xFD,0x00,0x00,0xFC,0x00,0x38,0xFD,0x00,0x00,0x5E,0x8E,
 0x04,0x30,0x0C,0x00,0x2C,0x06,0x38,0x1D,0x90,0x04,0x4E,
 0x8E,0x04,0x33,0x0C,0x10,0x2C,0x0E,0x38,0xFD,0x00,0x00,
 0x3A,0x8E,0x04,0x21,0x04,0x00,0xFC,0x00,0x38,0xFD,0x80,
 0x08,0x2E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFD,
 0x80,0x08,0x1E,0x8E,0x04,0x25,0x04,0xA2,0x54,0x0E,0xC7,
 0x40,0x06,0xCC,0x30,0x08,0x00,0xFD,0x00,0x00,0x24,0x06,
 0x37,0xFC,0x00,0xCC,0x10,0x0E,0xCC,0xFD,0x00,0x00,0xFC,
 0x00,0xC7,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x25,0x04,0x00,
 0xFC,0x00,0x37,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,
 0x00,0x24,0x0E,0xC7,0x40,0x0E,0xCC,0x40,0x06,0xCC,0x33,
 0x0C,0x10,0xFC,0x00,0x37,0xFC,0x00,0xCC,0x10,0x0E,0xCC,
 0x25,0x04,0x00,0x24,0x06,0xC7,0xFF,0x00,0x0C,0xFF,0x00,
 0x0C,0x25,0x04,0x00,0xFC,0x00,0x37,0xFC,0x00,0xCC,0xFC,
 0x00,0xCC,0x15,0x04,0x00,0xFC,0x00,0xC8,0x44,0x06,0xCC,
 0x14,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0x00,
 0xCC,0xFF,0x00,0x0C,0x15,0x04,0x00,0x24,0x0E,0xC8,0xFF,
 0x00,0x0C,0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x38,
 0xFC,0x00,0xCC,0x14,0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,
 0xC8,0x44,0x0E,0xCC,0x44,0x06,0xCC,0x33,0x0C,0x10,0xFC,
 0x00,0x38,0xFC,0x00,0xCC,0x14,0x0E,0xCC,0x15,0x04,0x00,
 0xFC,0x00,0xC8,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0xFD,0x00,
 0x00,0xFC,0x00,0x38,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x1D,
 0x04,0x00,0x4C,0x0E,0xC7,0x4C,0x06,0xCC,0x30,0x08,0x00,
 0xFD,0x00,0x00,0x1C,0x06,0x47,0xFC,0x00,0xCC,0x1C,0x0E,
 0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC7,0xFF,0x00,0x0C,0xFF,
 0x00,0x0C,0x1D,0x04,0x00,0xFC,0x00,0x47,0xFC,0x00,0xCC,
 0xFC,0x00,0xCC,0x30,0x0C,0x00,0x1C,0x0E,0xC7,0x4C,0x0E,
 0xCC,0x4C,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x47,0xFC,
 0x00,0xCC,0x1C,0x0E,0xCC,0x1D,0x04,0x00,0x1C,0x06,0xC7,
 0xFF,0x00,0x0C,0x30,0x08,0x00,0x1D,0x04,0x00,0xFC,0x00,
 0x47,0xFC,0x00,0xCC,0x2C,0x0E,0xCC,0x11,0x04,0x00,0xFC,
 0x00,0xC9,0x5C,0x06,0xCC,0xFF,0x00,0x0C,0xFD,0x00,0x00,
 0xFC,0x00,0x49,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x11,0x04,
 0x00,0x1C,0x0E,0xC9,0xFF,0x00,0x0C,0xFC,0x00,0xCC,0xFD,
 0x00,0x00,0xFC,0x00,0x49,0xFC,0x00,0xCC,0xFC,0x00,0xCC,
 0x30,0x0C,0x00,0x1C,0x06,0xC9,0x5C,0x0E,0xCC,0x5C,0x06,
 0xCC,0x33,0x0C,0x10,0xFC,0x00,0x49,0xFC,0x00,0xCC,0x2C,
 0x0E,0xCC,0x11,0x04,0x00,0xFC,0x00,0xC7,0xFF,0x00,0x0C,
 0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFC,0x00,
 0xCC,0x1C,0x0E,0xCC,0x15,0x04,0xA2,0x54,0x0E,0xC8,0x54,
 0x06,0xCC,0x30,0x08,0x00,0xFD,0x00,0x00,0x24,0x06,0x38,
 0xFC,0x00,0xCC,0x24,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,
 0xC8,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,
 0x00,0x38,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,0x00,
 0x24,0x0E,0xC8,0x54,0x0E,0xCC,0x54,0x06,0xCC,0x33,0x0C,
 0x10,0xFC,0x00,0x38,0xFC,0x00,0xCC,0x24,0x0E,0xCC,0x15,
 0x04,0x00,0x24,0x06,0xC8,0xFF,0x00,0x0C,0xFF,0x00,0x0C,
 0x15,0x04,0x00,0xFC,0x00,0x38,0xFC,0x00,0xCC,0xFC,0x00,
 0xCC,0x09,0x04,0x00,0xFC,0x00,0xC5,0x38,0x10,0xCC,0x08,
 0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0x35,0xFC,0x00,0xCC,
 0xFF,0x00,0x0C,0x09,0x04,0x00,0x24,0x0E,0xC5,0xFF,0x00,
 0x0C,0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x35,0xFC,
 0x00,0xCC,0x08,0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,0xC5,
 0x38,0x10,0xCC,0x38,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,
 0x35,0xFC,0x00,0xCC,0x08,0x0E,0xCC,0x09,0x04,0x00,0xFC,
 0x00,0xC5,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0xFD,0x00,0x00,
 0xFC,0x00,0x35,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x11,0x04,
 0x00,0x4C,0x0E,0xC9,0x4C,0x06,0xCC,0x30,0x08,0x00,0xFD,
 0x00,0x00,0x1C,0x06,0x49,0xFC,0x00,0xCC,0x10,0x0E,0xCC,
 0xFD,0x00,0x00,0xFC,0x00,0xC9,0xFF,0x00,0x0C,0xFF,0x00,
 0x0C,0x11,0x04,0x00,0xFC,0x00,0x49,0xFC,0x00,0xCC,0xFC,
 0x00,0xCC,0x30,0x0C,0x00,0x1C,0x0E,0xC9,0x4C,0x0E,0xCC,
 0x40,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x49,0xFC,0x00,
 0xCC,0x10,0x0E,0xCC,0x11,0x04,0x00,0x1C,0x06,0xC9,0xFF,
 0x00,0x0C,0x30,0x08,0x00,0x11,0x04,0x00,0xFC,0x00,0x49,
 0xFC,0x00,0xCC,0x1C,0x0E,0xCC,0x1D,0x04,0x00,0xFC,0x00,
 0xC7,0x38,0x06,0xCC,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,
 0x00,0x47,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x1D,0x04,0x00,
 0x1C,0x0E,0xC7,0xFF,0x00,0x0C,0xFC,0x00,0xCC,0xFD,0x00,
 0x00,0xFC,0x00,0x47,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,
 0x0C,0x00,0x1C,0x06,0xC7,0x38,0x0E,0xCC,0x4C,0x06,0xCC,
 0x33,0x0C,0x10,0xFC,0x00,0x47,0xFC,0x00,0xCC,0x1C,0x0E,
 0xCC,0x21,0x04,0x00,0xFC,0x00,0xC7,0xFF,0x00,0x0C,0x30,
 0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFC,0x00,0xCC,
 0x1C,0x0E,0xCC,0x25,0x04,0xA2,0x54,0x0E,0xC7,0x30,0x06,
 0xCC,0x30,0x08,0x00,0xFD,0x00,0x00,0x24,0x06,0x37,0xFC,
 0x00,0xCC,0x10,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC7,
 0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x25,0x04,0x00,0xFC,0x00,
 0x37,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,
 0x0E,0xC7,0x30,0x0E,0xCC,0x40,0x06,0xCC,0x33,0x0C,0x10,
 0xFC,0x00,0x37,0xFC,0x00,0xCC,0x10,0x0E,0xCC,0x25,0x04,
 0x00,0x24,0x06,0xC7,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x25,
 0x04,0x00,0xFC,0x00,0x37,0xFC,0x00,0xCC,0xFC,0x00,0xCC,
 0x15,0x04,0x00,0xFC,0x00,0xC8,0x30,0x06,0xCC,0x14,0x0E,
 0xCC,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0x00,0xCC,0xFF,
 0x00,0x0C,0x15,0x04,0x00,0x24,0x0E,0xC8,0xFF,0x00,0x0C,
 0x30,0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0x00,
 0xCC,0x14,0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,0xC8,0x30,
 0x0E,0xCC,0x44,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x38,
 0xFC,0x00,0xCC,0x14,0x0E,0xCC,0x15,0x04,0x00,0xFC,0x00,
 0xC8,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,
 0x00,0x38,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x1D,0x04,0x00,
 0x4C,0x0E,0xC7,0x2C,0x06,0xCC,0x30,0x08,0x00,0xFD,0x00,
 0x00,0x1C,0x06,0x47,0xFC,0x00,0xCC,0x1C,0x0E,0xCC,0xFD,
 0x00,0x00,0xFC,0x00,0xC7,0xFF,0x00,0x0C,0xFF,0x00,0x0C,
 0x1D,0x04,0x00,0xFC,0x00,0x47,0xFC,0x00,0xCC,0xFC,0x00,
 0xCC,0x30,0x0C,0x00,0x1C,0x0E,0xC7,0x2C,0x0E,0xCC,0x4C,
 0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x47,0xFC,0x00,0xCC,
 0x1C,0x0E,0xCC,0x1D,0x04,0x00,0x1C,0x06,0xC7,0xFF,0x00,
 0x0C,0x30,0x08,0x00,0x1D,0x04,0x00,0xFC,0x00,0x47,0xFC,
 0x00,0xCC,0x2C,0x0E,0xCC,0x11,0x04,0x00,0xFC,0x00,0xC9,
 0x2C,0x06,0xCC,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,
 0x49,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x11,0x04,0x00,0x1C,
 0x0E,0xC9,0xFF,0x00,0x0C,0xFC,0x00,0xCC,0xFD,0x00,0x00,
 0xFC,0x00,0x49,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,
 0x00,0x1C,0x06,0xC9,0x2C,0x0E,0xCC,0x5C,0x06,0xCC,0x33,
 0x0C,0x10,0xFC,0x00,0x49,0xFC,0x00,0xCC,0x2C,0x0E,0xCC,
 0x11,0x04,0x00,0xFC,0x00,0xC7,0xFF,0x00,0x0C,0x30,0x08,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFC,0x00,0xCC,0x1C,
 0x0E,0xCC,0x15,0x04,0xA2,0x54,0x0E,0xC8,0x30,0x06,0xCC,
 0x30,0x08,0x00,0xFD,0x00,0x00,0x24,0x06,0x38,0xFC,0x00,
 0xCC,0x24,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC8,0xFF,
 0x00,0x0C,0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,0x00,0x38,
 0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,0x0E,
 0xC8,0x30,0x0E,0xCC,0x54,0x06,0xCC,0x33,0x0C,0x10,0xFC,
 0x00,0x38,0xFC,0x00,0xCC,0x24,0x0E,0xCC,0x15,0x04,0x00,
 0x24,0x06,0xC8,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x15,0x04,
 0x00,0xFC,0x00,0x38,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x09,
 0x04,0x00,0xFC,0x00,0xC5,0x38,0x06,0xCC,0x08,0x0E,0xCC,
 0xFD,0x00,0x00,0xFC,0x00,0x35,0xFC,0x00,0xCC,0xFF,0x00,
 0x0C,0x09,0x04,0x00,0x24,0x0E,0xC5,0xFF,0x00,0x0C,0x30,
 0x08,0x00,0xFD,0x00,0x00,0xFC,0x00,0x35,0xFC,0x00,0xCC,
 0x08,0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,0xC5,0x38,0x0E,
 0xCC,0x38,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x35,0xFC,
 0x00,0xCC,0x08,0x0E,0xCC,0x09,0x04,0x00,0xFC,0x00,0xC5,
 0xFF,0x00,0x0C,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,
 0x35,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x11,0x04,0x00,0x4C,
 0x0E,0xC9,0x40,0x06,0xCC,0x30,0x08,0x00,0xFD,0x00,0x00,
 0x1C,0x06,0x49,0xFC,0x00,0xCC,0x10,0x0E,0xCC,0xFD,0x00,
 0x00,0xFC,0x00,0xC9,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x11,
 0x04,0x00,0xFC,0x00,0x49,0xFC,0x00,0xCC,0xFC,0x00,0xCC,
 0x30,0x0C,0x00,0x1C,0x0E,0xC9,0x40,0x0E,0xCC,0x40,0x06,
 0xCC,0x33,0x0C,0x10,0xFC,0x00,0x49,0xFC,0x00,0xCC,0x10,
 0x0E,0xCC,0x11,0x04,0x00,0x1C,0x06,0xC9,0xFF,0x00,0x0C,
 0x30,0x08,0x00,0x11,0x04,0x00,0xFC,0x00,0x49,0xFC,0x00,
 0xCC,0x1C,0x0E,0xCC,0x1D,0x04,0x00,0xFC,0x00,0xC7,0x4C,
 0x06,0xCC,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x47,
 0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x1D,0x04,0x00,0x1C,0x0E,
 0xC7,0xFF,0x00,0x0C,0xFC,0x00,0xCC,0xFD,0x00,0x00,0xFC,
 0x00,0x47,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,0x00,
 0x1C,0x06,0xC7,0x4C,0x0E,0xCC,0x4C,0x06,0xCC,0x33,0x0C,
 0x10,0xFC,0x00,0x47,0xFC,0x00,0xCC,0x1C,0x0E,0xCC,0x21,
 0x04,0x00,0xFC,0x00,0xC7,0xFF,0x00,0x0C,0x30,0x08,0x00,
 0xFD,0x00,0x00,0xFC,0x00,0x47,0xFC,0x00,0xCC,0x1C,0x0E,
 0xCC,0x25,0x04,0xA2,0x54,0x0E,0xC7,0x30,0x06,0xCC,0x30,
 0x08,0x00,0xFD,0x00,0x00,0x24,0x06,0x37,0xFC,0x00,0xCC,
 0x10,0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC7,0xFF,0x00,
 0x0C,0xFF,0x00,0x0C,0x25,0x04,0x00,0xFC,0x00,0x37,0xFC,
 0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,0x0E,0xC7,
 0x30,0x0E,0xCC,0x40,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,
 0x37,0xFC,0x00,0xCC,0x10,0x0E,0xCC,0x25,0x04,0x00,0x24,
 0x06,0xC7,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x25,0x04,0x00,
 0xFC,0x00,0x37,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x15,0x04,
 0x00,0xFC,0x00,0xC8,0x30,0x06,0xCC,0x14,0x0E,0xCC,0xFD,
 0x00,0x00,0xFC,0x00,0x38,0xFC,0x00,0xCC,0xFF,0x00,0x0C,
 0x15,0x04,0x00,0x24,0x0E,0xC8,0xFF,0x00,0x0C,0x30,0x08,
 0x00,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0x00,0xCC,0x14,
 0x0E,0xCC,0x30,0x0C,0x00,0x24,0x06,0xC8,0x30,0x0E,0xCC,
 0x44,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x38,0xFC,0x00,
 0xCC,0x14,0x0E,0xCC,0x15,0x04,0x00,0xFC,0x00,0xC8,0xFF,
 0x00,0x0C,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x38,
 0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x1D,0x04,0x00,0x4C,0x0E,
 0xC7,0x2C,0x06,0xCC,0x30,0x08,0x00,0xFD,0x00,0x00,0x1C,
 0x06,0x47,0xFC,0x00,0xCC,0x1C,0x0E,0xCC,0xFD,0x00,0x00,
 0xFC,0x00,0xC7,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x1D,0x04,
 0x00,0xFC,0x00,0x47,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,
 0x0C,0x00,0x1C,0x0E,0xC7,0x2C,0x0E,0xCC,0x4C,0x06,0xCC,
 0x33,0x0C,0x10,0xFC,0x00,0x47,0xFC,0x00,0xCC,0x1C,0x0E,
 0xCC,0x1D,0x04,0x00,0x1C,0x06,0xC7,0xFF,0x00,0x0C,0x30,
 0x08,0x00,0x1D,0x04,0x00,0xFC,0x00,0x47,0xFC,0x00,0xCC,
 0x2C,0x0E,0xCC,0x11,0x04,0x00,0xFC,0x00,0xC9,0x2C,0x06,
 0xCC,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x49,0xFC,
 0x00,0xCC,0xFC,0x00,0xCC,0x11,0x04,0x00,0x1C,0x0E,0xC9,
 0xFF,0x00,0x0C,0xFC,0x00,0xCC,0xFD,0x00,0x00,0xFC,0x00,
 0x49,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x1C,
 0x06,0xC9,0x2C,0x0E,0xCC,0x5C,0x06,0xCC,0x33,0x0C,0x10,
 0xFC,0x00,0x49,0xFC,0x00,0xCC,0x2C,0x0E,0xCC,0x11,0x04,
 0x00,0xFC,0x00,0xC7,0xFF,0x00,0x0C,0x30,0x08,0x00,0xFD,
 0x00,0x00,0xFC,0x00,0x47,0xFC,0x00,0xCC,0x1C,0x0E,0xCC,
 0x15,0x04,0xA2,0x54,0x0E,0xC8,0x30,0x06,0xCC,0x30,0x08,
 0x00,0xFD,0x00,0x00,0x24,0x06,0x38,0xFC,0x00,0xCC,0x24,
 0x0E,0xCC,0xFD,0x00,0x00,0xFC,0x00,0xC8,0xFF,0x00,0x0C,
 0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,0x00,0x38,0xFC,0x00,
 0xCC,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x24,0x0E,0xC8,0x30,
 0x0E,0xCC,0x54,0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x38,
 0xFC,0x00,0xCC,0x24,0x0E,0xCC,0x15,0x04,0x00,0x24,0x06,
 0xC8,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x15,0x04,0x00,0xFC,
 0x00,0x38,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x09,0x04,0x00,
 0xFC,0x00,0xC5,0x38,0x06,0xCC,0x08,0x0E,0xCC,0xFD,0x00,
 0x00,0xFC,0x00,0x35,0xFC,0x00,0xCC,0xFF,0x00,0x0C,0x09,
 0x04,0x00,0x24,0x0E,0xC5,0xFF,0x00,0x0C,0x30,0x08,0x00,
 0xFD,0x00,0x00,0xFC,0x00,0x35,0xFC,0x00,0xCC,0x08,0x0E,
 0xCC,0x30,0x0C,0x00,0x24,0x06,0xC5,0x38,0x0E,0xCC,0x38,
 0x06,0xCC,0x33,0x0C,0x10,0xFC,0x00,0x35,0xFC,0x00,0xCC,
 0x08,0x0E,0xCC,0x09,0x04,0x00,0xFC,0x00,0xC5,0xFF,0x00,
 0x0C,0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x35,0xFC,
 0x00,0xCC,0xFC,0x00,0xCC,0x11,0x04,0x00,0x4C,0x0E,0xC9,
 0x40,0x06,0xCC,0x30,0x08,0x00,0xFD,0x00,0x00,0x1C,0x06,
 0x49,0xFC,0x00,0xCC,0x10,0x0E,0xCC,0xFD,0x00,0x00,0xFC,
 0x00,0xC9,0xFF,0x00,0x0C,0xFF,0x00,0x0C,0x11,0x04,0x00,
 0xFC,0x00,0x49,0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,
 0x00,0x1C,0x0E,0xC9,0x40,0x0E,0xCC,0x40,0x06,0xCC,0x33,
 0x0C,0x10,0xFC,0x00,0x49,0xFC,0x00,0xCC,0x10,0x0E,0xCC,
 0x11,0x04,0x00,0x1C,0x06,0xC9,0xFF,0x00,0x0C,0x30,0x08,
 0x00,0x11,0x04,0x00,0xFC,0x00,0x49,0xFC,0x00,0xCC,0x1C,
 0x0E,0xCC,0x1D,0x04,0x00,0xFC,0x00,0xC7,0x4C,0x06,0xCC,
 0xFF,0x00,0x0C,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFC,0x00,
 0xCC,0xFC,0x00,0xCC,0x1D,0x04,0x00,0x1C,0x0E,0xC7,0xFF,
 0x00,0x0C,0xFC,0x00,0xCC,0xFD,0x00,0x00,0xFC,0x00,0x47,
 0xFC,0x00,0xCC,0xFC,0x00,0xCC,0x30,0x0C,0x00,0x1C,0x06,
 0xC7,0x4C,0x0E,0xCC,0x4C,0x06,0xCC,0x33,0x0C,0x10,0xFC,
 0x00,0x47,0xFC,0x00,0xCC,0x1C,0x0E,0xCC,0x21,0x04,0x00,
 0xFC,0x00,0xC7,0xFF,0x00,0x0C,0x30,0x08,0x00,0xFF,0x40,
 0x32,0xFC,0x00,0x47,0xFC,0x00,0xCC,0x1C,0x0E,0xCC,0x31,
 0x04,0xA2,0x30,0x06,0x47,0xFD,0x00,0x82,0x02,0x8E,0x04,
 0xFD,0x00,0x00,0x30,0x0E,0x47,0xFD,0x00,0x00,0x12,0x8E,
 0x04,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x1E,
 0x8E,0x04,0x31,0x04,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,
 0x32,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x00,0x47,0x41,0x10,
 0x00,0x42,0x8E,0x04,0x33,0x0C,0x10,0xFC,0x00,0x47,0x43,
 0x10,0x1E,0x4E,0x8E,0x04,0x31,0x04,0x00,0x30,0x06,0x47,
 0x3B,0x90,0xC2,0x62,0x8E,0x04,0xFD,0x00,0x00,0x30,0x0E,
 0x47,0x33,0x90,0xC3,0x72,0x8E,0x04,0x1D,0x04,0x00,0xFC,
 0x00,0x47,0x39,0x10,0x00,0x7E,0x8E,0x04,0xFD,0x00,0x00,
 0xFC,0x00,0x47,0xFD,0x00,0x00,0x72,0x8E,0x04,0x31,0x04,
 0x00,0xFC,0x00,0x47,0x43,0x10,0x1E,0x62,0x8E,0x04,0xFD,
 0x00,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x4E,0x8E,0x04,
 0x30,0x0C,0x00,0x30,0x06,0x47,0x1D,0x10,0x00,0x42,0x8E,
 0x04,0x33,0x0C,0x10,0x30,0x0E,0x47,0xFD,0x00,0x00,0x32,
 0x8E,0x04,0x31,0x04,0x00,0xFC,0x00,0x47,0x3B,0x10,0x1E,
 0x1E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,0x00,
 0x00,0x12,0x8E,0x04,0x21,0x04,0x00,0x30,0x06,0x38,0x21,
 0x10,0x00,0x02,0x8E,0x04,0xFD,0x00,0x00,0x30,0x0E,0x38,
 0xFD,0x00,0x00,0x0E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,
 0x38,0x1F,0x10,0x1E,0x22,0x8E,0x04,0x21,0x04,0x00,0xFC,
 0x00,0x38,0xFD,0x00,0x00,0x32,0x8E,0x04,0x30,0x0C,0x00,
 0xFC,0x00,0x38,0x3D,0x10,0x00,0x3E,0x8E,0x04,0x33,0x0C,
 0x10,0xFC,0x00,0x38,0x23,0x10,0x1E,0x52,0x8E,0x04,0x21,
 0x04,0x00,0x30,0x06,0x38,0x45,0x10,0x00,0x62,0x8E,0x04,
 0xFD,0x00,0x00,0x30,0x0E,0x38,0xFD,0x00,0x00,0x6E,0x8E,
 0x04,0x0D,0x04,0x00,0xFC,0x00,0x38,0x53,0x90,0xC3,0x82,
 0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0x4F,0x90,0xC2,
 0x6E,0x8E,0x04,0x21,0x04,0x00,0xFC,0x00,0x38,0x50,0xD0,
 0x08,0x62,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,
 0xC0,0x00,0x52,0x8E,0x04,0x30,0x0C,0x00,0x30,0x06,0x38,
 0x45,0x10,0x00,0x3E,0x8E,0x04,0x33,0x0C,0x10,0x30,0x0E,
 0x38,0xFD,0x00,0x00,0x32,0x8E,0x04,0x21,0x04,0x00,0xFC,
 0x00,0x38,0x3D,0x10,0x00,0x1E,0x8E,0x04,0xFD,0x00,0x00,
 0xFC,0x00,0x38,0x47,0x10,0x1E,0x0E,0x8E,0x04,0x15,0x04,
 0x00,0x24,0x06,0x38,0x2C,0x50,0x01,0x02,0x8E,0x04,0xFD,
 0x00,0x00,0x24,0x0E,0x38,0x30,0xD0,0x08,0x16,0x8E,0x04,
 0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,0x26,0x8E,
 0x04,0x15,0x04,0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,0x32,
 0x8E,0x04,0x31,0x0C,0x00,0xFC,0x00,0x38,0x47,0x10,0x1E,
 0x46,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFD,0x00,
 0x00,0x56,0x8E,0x04,0x15,0x04,0x00,0x24,0x06,0x38,0x31,
 0x10,0x00,0x62,0x8E,0x04,0xFD,0x00,0x00,0x24,0x0E,0x38,
 0x33,0x10,0x1E,0x76,0x8E,0x04,0x01,0x04,0x00,0xFC,0x00,
 0x38,0x1D,0x10,0x00,0x86,0x8E,0x04,0xFD,0x00,0x00,0xFC,
 0x00,0x38,0x33,0x10,0x1E,0x76,0x8E,0x04,0x15,0x04,0x00,
 0xFC,0x00,0x38,0x25,0x10,0x00,0x62,0x8E,0x04,0xFD,0x00,
 0x00,0xFC,0x00,0x38,0x1F,0x10,0x1E,0x56,0x8E,0x04,0x30,
 0x0C,0x00,0x24,0x06,0x38,0x31,0x10,0x00,0x46,0x8E,0x04,
 0x33,0x0C,0x10,0x24,0x0E,0x38,0x27,0x10,0x1E,0x32,0x8E,
 0x04,0x15,0x04,0x00,0xFC,0x00,0x38,0x30,0x50,0x01,0x26,
 0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0x38,0xD0,0x08,
 0x16,0x8E,0x04,0x1D,0x04,0x00,0x2C,0x06,0x38,0xFC,0xC0,
 0x00,0x0A,0x8E,0x04,0xFD,0x00,0x00,0x2C,0x0E,0x38,0xFC,
 0xC0,0x00,0x1E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,
 0xFC,0xC0,0x00,0x2E,0x8E,0x04,0x1D,0x04,0x00,0xFC,0x00,
 0x38,0xFC,0xC0,0x00,0x3A,0x8E,0x04,0x30,0x0C,0x00,0xFC,
 0x00,0x38,0xFD,0x80,0x04,0x4E,0x8E,0x04,0x33,0x0C,0x10,
 0xFC,0x00,0x38,0xFD,0x00,0x00,0x5E,0x8E,0x04,0x1D,0x04,
 0x00,0x2C,0x06,0x38,0xFD,0x80,0x04,0x6A,0x8E,0x04,0xFD,
 0x00,0x00,0x2C,0x0E,0x38,0xFD,0x80,0x04,0x7E,0x8E,0x04,
 0x09,0x04,0x00,0xFF,0x00,0x00,0x39,0x10,0x00,0x8E,0x8E,
 0x04,0xFD,0x00,0x00,0xFC,0x00,0x00,0x3B,0x10,0x1E,0x7E,
 0x8E,0x04,0x31,0x0C,0x00,0xFC,0x00,0x00,0x31,0x10,0x00,
 0x6A,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x00,0x3B,0x10,
 0x1E,0x5E,0x8E,0x04,0x30,0x0C,0x00,0x4C,0x86,0x10,0x39,
 0x10,0x00,0x4E,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x80,0x10,
 0x33,0x10,0x1E,0x3A,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x80,
 0x10,0x41,0x10,0x00,0x2E,0x8E,0x04,0x32,0xCC,0x05,0xFC,
 0x80,0x10,0x3B,0x10,0x1E,0x1E,0x8E,0x04,0x31,0x04,0xA2,
 0x30,0x06,0x47,0xFD,0x00,0x82,0x02,0x8E,0x04,0xFD,0x00,
 0x00,0x30,0x0E,0x47,0xFD,0x00,0x00,0x12,0x8E,0x04,0xFD,
 0x00,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x1E,0x8E,0x04,
 0x31,0x04,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x32,0x8E,
 0x04,0x30,0x0C,0x00,0xFC,0x00,0x47,0x41,0x10,0x00,0x42,
 0x8E,0x04,0x33,0x0C,0x10,0xFC,0x00,0x47,0x43,0x10,0x1E,
 0x4E,0x8E,0x04,0x31,0x04,0x00,0x30,0x06,0x47,0x3B,0x90,
 0xC2,0x62,0x8E,0x04,0xFD,0x00,0x00,0x30,0x0E,0x47,0x33,
 0x90,0xC3,0x72,0x8E,0x04,0x1D,0x04,0x00,0xFC,0x00,0x47,
 0x39,0x10,0x00,0x7E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,
 0x47,0xFD,0x00,0x00,0x72,0x8E,0x04,0x31,0x04,0x00,0xFC,
 0x00,0x47,0x43,0x10,0x1E,0x62,0x8E,0x04,0xFD,0x00,0x00,
 0xFC,0x00,0x47,0xFD,0x00,0x00,0x4E,0x8E,0x04,0x30,0x0C,
 0x00,0x30,0x06,0x47,0x1D,0x10,0x00,0x42,0x8E,0x04,0x33,
 0x0C,0x10,0x30,0x0E,0x47,0xFD,0x00,0x00,0x32,0x8E,0x04,
 0x31,0x04,0x00,0xFC,0x00,0x47,0x3B,0x10,0x1E,0x1E,0x8E,
 0x04,0xFD,0x00,0x00,0xFC,0x00,0x47,0xFD,0x00,0x00,0x12,
 0x8E,0x04,0x21,0x04,0x00,0x30,0x06,0x38,0x21,0x10,0x00,
 0x02,0x8E,0x04,0xFD,0x00,0x00,0x30,0x0E,0x38,0xFD,0x00,
 0x00,0x0E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0x1F,
 0x10,0x1E,0x22,0x8E,0x04,0x21,0x04,0x00,0xFC,0x00,0x38,
 0xFD,0x00,0x00,0x32,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x00,
 0x38,0x3D,0x10,0x00,0x3E,0x8E,0x04,0x33,0x0C,0x10,0xFC,
 0x00,0x38,0x23,0x10,0x1E,0x52,0x8E,0x04,0x21,0x04,0x00,
 0x30,0x06,0x38,0x45,0x10,0x00,0x62,0x8E,0x04,0xFD,0x00,
 0x00,0x30,0x0E,0x38,0xFD,0x00,0x00,0x6E,0x8E,0x04,0x0D,
 0x04,0x00,0xFC,0x00,0x38,0x53,0x90,0xC3,0x82,0x8E,0x04,
 0xFD,0x00,0x00,0xFC,0x00,0x38,0x4F,0x90,0xC2,0x6E,0x8E,
 0x04,0x21,0x04,0x00,0xFC,0x00,0x38,0x50,0xD0,0x08,0x62,
 0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,
 0x52,0x8E,0x04,0x30,0x0C,0x00,0x30,0x06,0x38,0x45,0x10,
 0x00,0x3E,0x8E,0x04,0x33,0x0C,0x10,0x30,0x0E,0x38,0xFD,
 0x00,0x00,0x32,0x8E,0x04,0x21,0x04,0x00,0xFC,0x00,0x38,
 0x3D,0x10,0x00,0x1E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,
 0x38,0x47,0x10,0x1E,0x0E,0x8E,0x04,0x15,0x04,0x00,0x24,
 0x06,0x38,0x2C,0x50,0x01,0x02,0x8E,0x04,0xFD,0x00,0x00,
 0x24,0x0E,0x38,0x30,0xD0,0x08,0x16,0x8E,0x04,0xFD,0x00,
 0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,0x26,0x8E,0x04,0x15,
 0x04,0x00,0xFC,0x00,0x38,0xFC,0xC0,0x00,0x32,0x8E,0x04,
 0x31,0x0C,0x00,0xFC,0x00,0x38,0x47,0x10,0x1E,0x46,0x8E,
 0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFD,0x00,0x00,0x56,
 0x8E,0x04,0x15,0x04,0x00,0x24,0x06,0x38,0x31,0x10,0x00,
 0x62,0x8E,0x04,0xFD,0x00,0x00,0x24,0x0E,0x38,0x33,0x10,
 0x1E,0x76,0x8E,0x04,0x01,0x04,0x00,0xFC,0x00,0x38,0x1D,
 0x10,0x00,0x86,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,
 0x33,0x10,0x1E,0x76,0x8E,0x04,0x15,0x04,0x00,0xFC,0x00,
 0x38,0x25,0x10,0x00,0x62,0x8E,0x04,0xFD,0x00,0x00,0xFC,
 0x00,0x38,0x1F,0x10,0x1E,0x56,0x8E,0x04,0x30,0x0C,0x00,
 0x24,0x06,0x38,0x31,0x10,0x00,0x46,0x8E,0x04,0x33,0x0C,
 0x10,0x24,0x0E,0x38,0x27,0x10,0x1E,0x32,0x8E,0x04,0x15,
 0x04,0x00,0xFC,0x00,0x38,0x30,0x50,0x01,0x26,0x8E,0x04,
 0xFD,0x00,0x00,0xFC,0x00,0x38,0x38,0xD0,0x08,0x16,0x8E,
 0x04,0x1D,0x04,0x00,0x2C,0x06,0x38,0xFC,0xC0,0x00,0x0A,
 0x8E,0x04,0xFD,0x00,0x00,0x2C,0x0E,0x38,0xFC,0xC0,0x00,
 0x1E,0x8E,0x04,0xFD,0x00,0x00,0xFC,0x00,0x38,0xFC,0xC0,
 0x00,0x2E,0x8E,0x04,0x1D,0x04,0x00,0xFC,0x00,0x38,0xFC,
 0xC0,0x00,0x3A,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x00,0x38,
 0xFD,0x80,0x04,0x4E,0x8E,0x04,0x33,0x0C,0x10,0xFC,0x00,
 0x38,0xFD,0x00,0x00,0x5E,0x8E,0x04,0x1D,0x04,0x00,0x2C,
 0x06,0x38,0xFD,0x80,0x04,0x6A,0x8E,0x04,0xFD,0x00,0x00,
 0x2C,0x0E,0x38,0xFD,0x80,0x04,0x7E,0x8E,0x04,0x09,0x04,
 0x00,0xFF,0x00,0x00,0x38,0x06,0xCC,0x8E,0x8E,0x04,0xFD,
 0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0xCC,0x7E,0x8E,0x04,
 0x31,0x0C,0x00,0xFC,0x00,0x00,0xFF,0x00,0x0C,0x6A,0x8E,
 0x04,0xFD,0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0xCC,0x5E,
 0x8E,0x04,0x30,0x0C,0x00,0x4C,0x86,0x10,0x38,0x0E,0xCC,
 0x4E,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x80,0x10,0xFC,0x00,
 0xCC,0x3A,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x80,0x10,0xFF,
 0x00,0x0C,0x2E,0x8E,0x04,0x30,0x0C,0x00,0xFC,0x80,0x10,
 0xFC,0x00,0xCC,0x1E,0x8E,0x04,0x16,0x00,0x2C,0x16,0x34,
 0x00,0x2C,0xF0,0xE2,0xE2,0x16,0x6E,0xB0,0x00,0xE2,0x00,
 0x6E,0x16,0x04,0x40,0xE8,0x6E,0xAC,0x38,0xE2,0xCE,0xE2,
 0xBE,0xF0,0xBE,0x16,0xE2,0x04,0xDC,0x4E,0xCE,0x4E,0xCE,
 0xF6,0x00,0x00,0xF6,0x98,0x6A,0xBE,0xE2,0x26,0x2C,0xE2,
 0x1E,0x26,0xE2,0x00,0x12,0x08,0x08,0xE8,0x00,0x00,0x2C,
 0xF0,0xF0,0x00,0x38,0x1E,0x08,0x04,0x00,0x00,0xD4,0x16,
 0x00,0x00,0x1E,0xE8,0x5C,0x1E,0x08,0x00,0xE2,0x2C,0xBE,
 0x16,0x12,0x00,0xE8,0x38,0x04,0x1E,0x00,0x04,0x98,0x9C,
 0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,
 0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,
 0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,
 0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,
 0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x98,
 0x64,0x66,0x66,0x66,0x67,0x69,0x6B,0x6B,0x6B,0x6C,0x6C,
 0x6D,0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,
 0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,0x6E,
 0x6E,0x6E,0x6E,0x6C,0x6C,0x6B,0x69,0x67,0x64,0x61,0x5C,
 0x5A,0x50,0x9D,0x97,0x97,0x97,0x97,0x97,0x97,0x97,0x97,
 0x97,0x06,0x01,0xEE,0xE6,0xC8,0xC5,0x2C,0x28,0x1D,0x10,
 0x0E,0x06,0xFF,0xFA,0xEA,0xEA,0xEA,0xEA,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x30,0x30,0x30,
 0x30,0x30,0x30,0x30,0x30,0xE4,0xB0,0x80,0xC4,0x88,0xAC,
 0xC8,0xBC,0xF0,0x20,0x7F,0xFC,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x3C,0x7F,0xD8,0xEC,0x80,0x80,0xCC,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0xD4,
 0x80,0xF0,0xDC,0xCC,0xFC,0x0C,0x58,0x48,0x7F,0x60,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,
 0x40,0x7F,0x68,0x2C,0x20,0xF4,0xD0,0x94,0xD0,0xAC,0x90,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
 0x80,0x80,0x80,0x80,0x80,0x90,0x8C,0x90,0xB0,0xB4,0xDC,
 0x98,0x98,0x99,0x99,0x99,0x99,0x99,0x99,0x99,0x99,0x99,
 0x99,0x99,0x99,0x99,0x99,0x98,0x98,0x98,0x98,0x62,0x62,
 0x63,0x63,0x63,0x63,0x65,0x65,0x63,0x63,0x63,0x63,0x63,
 0x63,0x63,0x63,0x63,0x63,0x63,0x63,0x63,0x99,0x99,0x99,
 0x99,0x9A,0x92,0x91,0x91,0x91,0x91,0x8E,0x8E,0x8E,0x8E,
 0x8E,0x8E,0x8E,0x8E,0x8E,0x8E,0x5A,0x5A,0x5A,0x5A,0x5A,
 0x6C,0x6C,0x6C,0x6D,0x6D,0x6C,0x6C,0x6C,0x6D,0x6D,0x6D,
 0x6D,0xC4,0x92,0x94,0x9F,0xA7,0xB0,0xB8,0xC4,0xCA,0xD3,
 0xDD,0xE3,0xEC,0xF5,0xFB,0x03,0x0B,0x13,0x18,0x34,0x3A,
 0x41,0x4C,0x53,0x5A,0x63,0x65,0x5E,0x54,0x4E,0x4D,0x45,
 0x3C,0x35,0x2A,0x23,0x1A,0x13,0x0B,0x04,0xEB,0xE5,0xDB,
 0xD1,0xCA,0xC0,0xB9,0xB0,0xA9,0x9F,0x89,0x92,0x9A,0xA3,
 0xAA,0xB3,0xB9,0xC4,0xCC,0xD5,0xEC,0xF5,0xFD,0x03,0x0B,
 0x16,0x1B,0x26,0x2E,0x36,0x3D,0x58,0x5F,0x68,0x72,0x6C,
 0x62,0x4E,0x43,0x3A,0x30,0x28,0x22,0x18,0x11,0x09,0x02,
 0xFD,0xF4,0xEC,0xE5,0xD0,0xC6,0xBF,0xB7,0xB0,0xA7,0xA1,
 0x98,0x9A,0xA3,0xAB,0xB6,0xBE,0xC8,0xCF,0xD7,0xDE,0xE5,
 0x0D,0xEC,0x47,0x5A,0xF8,0x3A,0x10,0x04,0x2E,0x53,0xB7,
 0xCF,0x34,0x46,0xFD,0xC4,0x35,0xDF,0xC9,0xB2,0x18,0x9C,
 0xD8,0xAB,0x0F,0x3A,0xB7,0x3A,0xB1,0x52,0x4C,0xD1,0xCC,
 0xB1,0xFA,0x36,0xE5,0xEF,0x56,0xB8,0x2D,0x0D,0xEC,0x22,
 0x14,0xD0,0x0D,0xB2,0xCF,0x43,0xFC,0x36,0x0A,0x4F,0xD1,
 0x46,0x37,0xB9,0xA3,0xAF,0xA7,0xD5,0x3A,0xBD,0x0A,0x0F,
 0xAC,0x29,0x05,0xEF,0x9C,0xEC,0xDD,0xF1,0x3F,0x28,0xFD,
 0x37,0xC4,0x1B,0x0D,0xA6,0xBF,0xD5,0xDC,0x3F,0xB6,0x1B,
 0xB0,0xCC,0xD5,0xA4,0xD5,0xF4,0x22,0x48,0xF2,0x11,0x62,
 0x9F,0x56,0xBD,0x35,0xBE,0xCF,0x23,0x4F,0xA4,0x0F,0xE2,
 0xE4,0x04,0xD5,0x48,0x0F,0x0D,0xB6,0xC6,0xDB,0x2F,0x36,
 0x22,0xC0,0xB3,0xFA,0xB2,0x3C,0xEF,0x3A,0x54,0x1A,0x40,
 0x56,0xB6,0x20,0xF2,0x03,0x13,0x39,0xE4,0x5A,0x1E,0xD8,
 0xDE,0x55,0x08,0x27,0xAC,0xDF,0x40,0xC4,0x14,0xD1,0xF1,
 0x2D,0x39,0xF8,0x46,0xAC,0xC4,0x9D,0xE3,0xB2,0x56,0xBE,
 0x00,0xCA,0x08,0xC4,0x13,0x43,0x34,0xE4,0xCE,0xCC,0xE5,
 0x4E,0xB7,0xC8,0xB3,0xF4,0x00,0x56,0x5A,0x1C,0xAA,0x00,
 0xBA,0x05,0xCC,0x4C,0xC2,0x56,0x3D,0xBE,0xF5,0x05,0x54,
 0x22,0xC6,0x13,0xD8,0xD8,0x02,0xE2,0xF4,0x40,0xF5,0xA3,
 0xA1,0xB8,0x36,0x0F,0xC6,0x23,0xE5,0x30,0xC8,0x2A,0xEC,
 0x45,0x02,0x23,0x1B,0x1A,0x54,0xFC,0x41,0x46,0x22,0xD6,
 0xFC,0xAA,0xC5,0x22,0x9C,0xE5,0xC4,0xA6,0xD0,0xBF,0xF2,
 0xE3,0x3D,0xEA,0xD6,0x2A,0x4C,0xC9,0x02,0x21,0xDF,0xD8,
 0x0F,0xCA,0xD6,0x11,0xF5,0x3F,0x23,0x05,0xCF,0x1A,0x17,
 0x1A,0xBF,0x00,0x34,0xDC,0x17,0x00,0x0F,0xC6,0xB0,0x13,
 0xEE,0xA3,0x02,0xCA,0xEC,0xB1,0x02,0x3A,0x34,0x35,0x47,
 0xF5,0x0F,0x09,0x0A,0xB3,0xD3,0x0B,0x2F,0x34,0xD3,0xD6,
 0xF2,0x11,0xD5,0xFC,0xD5,0xDD,0xBA,0xF2,0x17,0xF1,0xC5,
 0xF2,0x0F,0x02,0x3A,0xEE,0x02,0x22,0xCC,0xDC,0x2E,0xC0,
 0xDB,0xE3,0xE7,0xF5,0xD5,0x0B,0xD7,0xBE,0xF5,0xEB,0xD8,
 0xE3,0x34,0xB8,0x22,0x39,0x01,0x0D,0x0D,0x1B,0xD0,0x08,
 0x0F,0xDE,0x1B,0x22,0xAC,0x11,0xAB,0xE5,0xB2,0xF8,0x1A,
 0x2D,0xF6,0x28,0xD3,0x1C,0x21,0xC5,0x1B,0xE8,0xD8,0x11,
 0x39,0x43,0x10,0x03,0x29,0xD8,0x21,0xDE,0x2E,0x0D,0xDB,
 0x01,0x53,0xB3,0x00,0x00,0xDC,0xDC,0xDC,0xE8,0xDC,0xDC,
 0x1F,0x1F,0x1F,0x17,0x12,0x07,0xFF,0xD7,0xD6,0xCC,0xBE,
 0xB9,0xAC,0x90,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
};
# 13 ".././hardmod.c" 2




u16 realdac;



u32 dacPeriod;





struct sections_s sections;
u8 order[128];

struct vibrato_s
{
 u8 speed;
 u8 depth;
 u8 waveform;
 s8 pos;
 s16 slide;
};

static const u8 vibratoTab[32] =
{
       0, 24, 49, 74, 97,120,141,161,
     180,197,212,224,235,244,250,253,
     255,253,250,244,235,224,212,197,
     180,161,141,120, 97, 74, 49, 24
};

struct channel_s
{
 u8 inst;
 s8 volume;
 u8 pan;
 u8 note;
 u8 effect;
 u8 param;
 u16 freq;
 u8 arptick;
 u8 retrigtick;

 u8 portaspeed;
 u16 portaperiod;

 s8 looprow;
 u8 loopcount;

 struct vibrato_s vib;
 struct vibrato_s trem;
}channel[4];

struct audiochannel_s
{
 u16 offset;
 u32 pos;
 u16 inc;
 u8 volume;
 u8 pan;
 u32 length;
 u32 looplength;
}mixchn[4];

struct inst_s
{
 u16 length;
 s8 finetune;
 u8 volume;
 s16 loopstart;
 s16 looplength;
}inst[31];

u16 sample[31];
u16 bpmtab[256-32];



u8 curorder;
s8 currow;
u8 curtick;

u8 nextorder;
s8 breakrow;



u8 breakjump;

struct note_s
{
 u8 number;
 u8 effect;
 u8 inst;
 u8 param;
};

struct pattern_s
{
 u8 number;
 u16 offset;
 u16 index;
}curpattern;
# 127 ".././hardmod.c"
struct update_s
{
 struct channel_s* chn;
 struct audiochannel_s* sndchn;

 struct note_s note;

 u8 flags;
};



volatile u8 song_state;

u8 speed;
u16 bpm;
u8 realbpm;
volatile u8 playtick;
volatile u16 ticktimer;

# 1 ".././effects.h" 1
void efx0_row(struct update_s*);
void efx1_row(struct update_s*);
void efx2_row(struct update_s*);
void efx3_row(struct update_s*);
void efx4_row(struct update_s*);
void efx5_row(struct update_s*);
void efx6_row(struct update_s*);
void efx7_row(struct update_s*);
void efx8_row(struct update_s*);
void efx9_row(struct update_s*);
void efxA_row(struct update_s*);
void efxB_row(struct update_s*);
void efxC_row(struct update_s*);
void efxD_row(struct update_s*);
void efxE_row(struct update_s*);
void efxF_row(struct update_s*);
void efx0_tick(struct update_s*);
void efx1_tick(struct update_s*);
void efx2_tick(struct update_s*);
void efx3_tick(struct update_s*);
void efx4_tick(struct update_s*);
void efx5_tick(struct update_s*);
void efx6_tick(struct update_s*);
void efx7_tick(struct update_s*);
void efx8_tick(struct update_s*);
void efx9_tick(struct update_s*);
void efxA_tick(struct update_s*);
void efxB_tick(struct update_s*);
void efxC_tick(struct update_s*);
void efxD_tick(struct update_s*);
void efxE_tick(struct update_s*);
void efxF_tick(struct update_s*);

typedef void (*pEffect)(struct update_s*);
pEffect roweffect[16] =
{
 efx0_row,
 ((void*)0),
 ((void*)0),
 efx3_row,
 efx4_row,
 ((void*)0),
 ((void*)0),
 ((void*)0),
 efx8_row,
 ((void*)0),
 ((void*)0),
 efxB_row,
 efxC_row,
 efxD_row,
 efxE_row,
 efxF_row
};
pEffect tickeffect[16] =
{
 efx0_tick,
 efx1_tick,
 efx2_tick,
 efx3_tick,
 efx4_tick,
 efx5_tick,
 efx6_tick,
 ((void*)0),
 ((void*)0),
 ((void*)0),
 efxA_tick,
 ((void*)0),
 ((void*)0),
 ((void*)0),
 efxE_tick,
 ((void*)0)
};
# 148 ".././hardmod.c" 2

inline u8 readsongbyte(u16 offset)
{
 return (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(&songdata[0] + offset)); uint8_t __result; __asm__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; }));
}

inline s8 readsongbytesigned(u16 offset)
{
 return (s8)(__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(&songdata[0] + offset)); uint8_t __result; __asm__ ( "lpm %0, Z" "\n\t" : "=r" (__result) : "z" (__addr16) ); __result; }));
}

inline u16 readsongword(u16 offset)
{
 return (__extension__({ uint16_t __addr16 = (uint16_t)((uint16_t)(&songdata[0] + offset)); uint16_t __result; __asm__ ( "lpm %A0, Z+" "\n\t" "lpm %B0, Z" "\n\t" : "=r" (__result), "=z" (__addr16) : "1" (__addr16) ); __result; }));
}

inline void readsongblock(u16 offset, void* dest, u16 num)
{
 u16 n;
 u8* block;

 block = (u8*)dest;
 for( n=0; n<num; ++n )
 {
  block[n] = readsongbyte(offset+n);
 }
}

u8 havevalidsong()
{
 s8 sig[4];

 readsongblock(0, sig, 4);
 if( (sig[0] == 'A') && (sig[1] == 'V') && (sig[2] == 'R') && (sig[3] == 'M') )
 {
  return 1;
 }

 return 0;
}

inline u8 setpattern(struct pattern_s* pat, u8 n, u8 row)
{
 if(n >= sections.numpatterns)
 {
  return 0;
 }

 pat->number = n;
 pat->offset = sections.offsetpatterns + (n*( 3 * 4 * 64 ));
 pat->index = 3 * 4 * row;

 return 1;
}

inline s16 pitchslide(s16 period, s8 slide)
{
 period += slide;
 if(period > 856)
 {
  period = 856;
 }
 else if(period < 113)
 {
  period = 113;
 }

 return period;
}

u8 seek(u8 order, s8 row);

void initmodule()
{
 u8 idx;
 u16 offset;


 readsongblock(4, &sections, sizeof(struct sections_s));


 readsongblock(sections.offsetorders, order, sections.numorders * sizeof(u8));


 readsongblock(sections.offsetinsts, inst, sections.numinsts * sizeof(struct inst_s));


 offset = sections.offsetsamples;
 for( idx=0; idx<sections.numinsts; ++idx )
 {
  sample[idx] = offset;
  offset += (inst[idx].length<<1);
 }


 for( idx=0; idx<256-32; ++idx )
 {
  bpmtab[idx] = 22050 / ((((u16)idx+32)<<1)/5);
 }

 dacPeriod = (((u16)(7159091UL / 22050))>>1)<<8;







 seek(0, 0);

 curtick = 6;
 speed = 0;
 bpm = (bpmtab[125 -32]);
 realbpm = 125;

 breakjump = 0;

 for(idx = 0; idx < 4; ++idx)
 {
  channel[idx].note = 0x3Fu;
  channel[idx].portaperiod = 0xFFFF;
  channel[idx].looprow = 0;
  channel[idx].loopcount = 0;
  mixchn[idx].offset = 0;
  if((idx % 2) == 0)
   channel[idx].pan = mixchn[idx].pan = 48;
  else
   channel[idx].pan = mixchn[idx].pan = 16;
 }


 song_state = 1;
}

inline void unpacknote(u16 offset, struct note_s* note)
{
 u8 notepacked[3];

 readsongblock(offset, notepacked, 3);
# 301 ".././hardmod.c"
 note->number = notepacked[0]>>2;
 note->effect = ((notepacked[0]&0b00000011)<<2) | (notepacked[1]>>6);
 note->inst = (notepacked[1]>>1)&0b00011111;
 note->param = notepacked[2];
}

void playnote(struct update_s* upd)
{
 struct inst_s* cur;

 if(upd->chn->inst == 0xFFu)
 {
  return;
 }

 cur = &inst[upd->chn->inst];

 upd->chn->freq = periodTable[upd->chn->note];
 if(upd->chn->freq > 856)
 {
  upd->chn->freq = 856;
 }

 upd->sndchn->offset = sample[upd->chn->inst];
 upd->sndchn->pos = 0;

 upd->flags |= 0b00000010;

 upd->sndchn->length = (cur->looplength)?(((u32)(cur->loopstart+cur->looplength))<<9):(((u32)cur->length)<<9);
 upd->sndchn->looplength = (u32)(cur->looplength)<<9;
}

           void update(struct update_s* upd)
{
 if((upd->note.number != 0x3Fu) && (upd->flags & 0b00010000))
 {
  playnote(upd);
 }

 if(upd->flags & 0b00000001)
 {
  upd->sndchn->volume = upd->chn->volume;
 }

 if(upd->flags & 0b00001000)
 {
  upd->sndchn->pan = upd->chn->pan;
 }

 if(upd->flags & 0b00000010)
 {
  u16 period = upd->chn->freq;

  if(upd->chn->vib.slide != 0)
  {
   period = pitchslide(period, upd->chn->vib.slide);
   upd->chn->vib.slide = 0;
  }

  upd->sndchn->inc = (dacPeriod/period);
 }
}

void row()
{
 u8 n;
 struct update_s upd = {((void*)0), ((void*)0), {0x3Fu, 0x00u, 0, 0}, 0b00010000};

 for( n=0; n<4; ++n )
 {
  upd.chn = &channel[n];
  upd.sndchn = &mixchn[n];

  unpacknote(curpattern.offset + curpattern.index, &upd.note);

  upd.chn->effect = upd.note.effect;
  upd.chn->param = upd.note.param;

  if(upd.note.inst != 0x00u)
  {
   upd.chn->inst = upd.note.inst-1;
   upd.chn->volume = inst[upd.chn->inst].volume;
   upd.flags |= 0b00000001;
  }

  if(upd.note.number != 0x3Fu)
  {
   upd.chn->note = upd.note.number;
  }


  if(upd.chn->arptick != 0) {
   upd.chn->arptick = 0;
   upd.chn->freq = periodTable[upd.chn->note];
   upd.flags |= 0b00000010;
  }


  if(upd.note.effect || upd.note.param)
  {
   if(roweffect[upd.note.effect])
   {
    roweffect[upd.note.effect](&upd);
   }
  }

  update(&upd);
  curpattern.index += 3;
 }
}

void tickefx()
{
 u8 n;
 struct update_s upd = {((void*)0), ((void*)0), {0x3Fu, 0xFFu, 0, 0}, 0b00000000};

 for( n=0; n<4; ++n )
 {
  upd.chn = &channel[n];
  if(upd.chn->effect || upd.chn->param)
  {
   upd.sndchn = &mixchn[n];

   if(tickeffect[upd.chn->effect])
   {
    tickeffect[upd.chn->effect](&upd);
    update(&upd);
   }
  }
 }
}

u8 seek(u8 ord, s8 row)
{
 curorder = ord;
 if(curorder >= sections.numorders)
 {


  curorder = 0;
  currow = 0;
 }

 currow = row;
 if(currow >= 64)
 {
  currow = 0;
 }

 nextorder = curorder + 1;
 breakrow = 0;
 breakjump = 0;

 setpattern(&curpattern, order[curorder], currow);

 return 1;
}

void tick()
{
 if(++curtick >= speed)
 {
  curtick = 0;
  if(currow++ >= 64)
  {
   if(!seek(nextorder, breakrow))
   {
    return;
   }

   currow++;
  }
  row();
 }
 else
 {
  tickefx();
 }
}

void efx0_row(struct update_s* upd)
{
 upd->chn->arptick = 0;
}
void efx1_row(struct update_s* upd)
{
}
void efx2_row(struct update_s* upd)
{
}
void efx3_row(struct update_s* upd)
{
 if (upd->note.number != 0x3Fu) {
  upd->chn->portaperiod = periodTable[upd->note.number];
  upd->flags &= ~0b00010000;
 }
 if (upd->chn->param > 0) {
  upd->chn->portaspeed = upd->chn->param;
 }

 if (upd->chn->inst == 0xFFu) {
  upd->chn->param = upd->chn->effect = 0;
 }
}
void efx4_row(struct update_s* upd)
{
 u8 paramx = upd->note.param >> 4;
 u8 paramy = upd->note.param & 0x0F;

 if(paramx)
 {
  upd->chn->vib.speed = paramx;
 }
 if(paramy)
 {
  upd->chn->vib.depth = paramy;
 }

 if(upd->chn->vib.waveform < 4 && upd->note.number != 0x3Fu)
 {
  upd->chn->vib.pos = 0;
 }
}
void efx5_row(struct update_s* upd)
{
}
void efx6_row(struct update_s* upd)
{
}
void efx7_row(struct update_s* upd)
{
}
void efx8_row(struct update_s* upd)
{
 upd->chn->pan = upd->chn->param;
 upd->flags |= 0b00001000;
}
void efx9_row(struct update_s* upd)
{
}
void efxA_row(struct update_s* upd)
{
}
void efxB_row(struct update_s* upd)
{
 nextorder = upd->chn->param;
 currow = 64;
 breakrow = 0;

 breakjump |= 0b00000010;
}
void efxC_row(struct update_s* upd)
{
 upd->chn->volume = upd->note.param;
 upd->flags |= 0b00000001;
}
void efxD_row(struct update_s* upd)
{
 breakrow = ((upd->chn->param>>4) * 10) + (upd->chn->param&0x0F);
 if((~breakjump) & (0b00000001 + 0b00000010))
 {
  currow = 64;
  nextorder = curorder + 1;
 }
 breakjump |= 0b00000001;
}
void efxE_row(struct update_s* upd)
{
 u8 param = upd->chn->param & 0x0F;
 switch(upd->chn->param>>4)
 {
  case 0x0:
  break;

  case 0x1:
   upd->chn->freq = pitchslide(upd->chn->freq, param);
   upd->flags |= 0b00000010;
  break;

  case 0x2:
   upd->chn->freq = pitchslide(upd->chn->freq, -(s8)param);
   upd->flags |= 0b00000010;
  break;

  case 0x3:
  break;

  case 0x4:
   if(param <= 7)
   {
    upd->chn->vib.waveform = param;
   }
   else
   {
    upd->chn->vib.waveform = 0;
   }
  break;

  case 0x5:
   inst[upd->note.inst].finetune = param;
  break;

  case 0x6:
   if(param == 0)
   {
    upd->chn->looprow = currow;
   }
   else
   {
    if(upd->chn->loopcount == 0)
    {
     upd->chn->loopcount = param;
    }
    else
    {
     upd->chn->loopcount--;
    }

    if(upd->chn->loopcount > 0)
    {
     breakrow = upd->chn->looprow-1;
     currow = 64;
     nextorder = curorder;
    }
   }
  break;

  case 0x7:
  break;

  case 0x8:
  break;

  case 0x9:
   upd->chn->retrigtick = 0;
  break;

  case 0xA:
   if((upd->chn->volume += param) > 63)
   {
    upd->chn->volume = 63;
   }
   upd->flags |= 0b00000001;
  break;

  case 0xB:
   if((upd->chn->volume -= param) > 63)
   {
    upd->chn->volume = 0;
   }
   upd->flags |= 0b00000001;
  break;

  case 0xC:
  break;

  case 0xD:
  break;

  case 0xE:
  break;

  case 0xF:
  break;
 }
}
void efxF_row(struct update_s* upd)
{
 if(upd->note.param <= 31)
 {
  speed = upd->note.param;
 }
 else
 {
  realbpm = upd->note.param;
  bpm = (bpmtab[realbpm-32]);
 }
}
void efx0_tick(struct update_s* upd)
{
 u8 arpnote = upd->chn->note;

 if(++upd->chn->arptick > 2)
 {
  upd->chn->arptick = 0;
 }

 switch(upd->chn->arptick)
 {
  default:
  case 0: break;
  case 1: arpnote += (upd->chn->param>>4); break;
  case 2: arpnote += (upd->chn->param&0x0F); break;
 }

 if(arpnote >= (12*3))
 {
  arpnote = (12*3)-1;
 }

 upd->chn->freq = periodTable[arpnote];
 upd->flags |= 0b00000010;
}

void efx1_tick(struct update_s* upd)
{
 upd->chn->freq = pitchslide((s16)upd->chn->freq, -(s8)upd->chn->param);
 upd->flags |= 0b00000010;
}
void efx2_tick(struct update_s* upd)
{
 upd->chn->freq = pitchslide(upd->chn->freq, (s8)upd->chn->param);
 upd->flags |= 0b00000010;
}

           void portanote(struct update_s* upd)
{
 if(upd->chn->freq < upd->chn->portaperiod)
 {
  upd->chn->freq = pitchslide(upd->chn->freq, (s8)upd->chn->portaspeed);
  if(upd->chn->freq > upd->chn->portaperiod)
  {
   upd->chn->freq = upd->chn->portaperiod;
  }
 }
 else if (upd->chn->freq > upd->chn->portaperiod)
 {
  upd->chn->freq = pitchslide(upd->chn->freq, -(s8)upd->chn->portaspeed);
  if(upd->chn->freq < upd->chn->portaperiod)
  {
   upd->chn->freq = upd->chn->portaperiod;
  }
 }

 upd->flags |= 0b00000010;
}
void efx3_tick(struct update_s* upd)
{
 portanote(upd);
}

inline void vibrato(struct update_s* upd)
{
 u8 abspos;
 u16 delta;

 if(upd->chn->vib.pos > 31)
 {
  upd->chn->vib.pos -= 63;
 }

 abspos = ((upd->chn->vib.pos > 0) ? upd->chn->vib.pos : -upd->chn->vib.pos);

 delta = vibratoTab[abspos];
 delta *= upd->chn->vib.depth;
 delta >>= 7;

 upd->chn->vib.slide = delta;
 if(upd->chn->vib.pos < 0)
 {
  upd->chn->vib.slide = -upd->chn->vib.slide;
 }

 upd->chn->vib.pos += upd->chn->vib.speed;

 upd->flags |= 0b00000010;
}
void efx4_tick(struct update_s* upd)
{
 vibrato(upd);
}
void volslide(struct update_s* upd);
void efx5_tick(struct update_s* upd)
{
 portanote(upd);
 volslide(upd);
}
void efx6_tick(struct update_s* upd)
{
 vibrato(upd);
 volslide(upd);
}
void efx7_tick(struct update_s* upd)
{
}
void efx8_tick(struct update_s* upd)
{
}
void efx9_tick(struct update_s* upd)
{
}
void volslide(struct update_s* upd)
{
 u8 paramx = upd->chn->param>>4;
 u8 paramy = upd->chn->param&0xF;

 if (!((paramx > 0) && (paramy > 0))) {
  if (paramx > 0) {
   if ((upd->chn->volume += paramx) > 63) {
    upd->chn->volume = 63;
   }
  } else {
   if ((upd->chn->volume -= paramy) < 0)
   {
    upd->chn->volume = 0;
   }
  }

  upd->flags |= 0b00000001;
 }
}
void efxA_tick(struct update_s* upd)
{
 volslide(upd);
}
void efxB_tick(struct update_s* upd)
{
}
void efxC_tick(struct update_s* upd)
{
}
void efxD_tick(struct update_s* upd)
{
}
void efxE_tick(struct update_s* upd)
{
 u8 param = upd->chn->param & 0x0F;
 switch(upd->chn->param>>4)
 {
  case 0x0:
  break;

  case 0x1:
  break;

  case 0x2:
  break;

  case 0x3:
  break;

  case 0x4:
  break;

  case 0x5:
  break;

  case 0x6:
  break;

  case 0x7:
  break;

  case 0x8:
  break;

  case 0x9:
   if(++upd->chn->retrigtick >= param)
   {
    upd->note.number = upd->chn->note;
    upd->flags |= 0b00010000;
    upd->chn->retrigtick = 0;
   }
  break;

  case 0xA:
  break;

  case 0xB:
  break;

  case 0xC:
   if(param >= curtick)
   {
    upd->chn->volume = 0;
    upd->flags |= 0b00000001;
   }
  break;

  case 0xD:
  break;

  case 0xE:
  break;

  case 0xF:
  break;
 }
}
void efxF_tick(struct update_s* upd)
{
}


void play()
{
 asm("cli");
 (*(volatile uint8_t *)(0x61)) = 0x80;
 (*(volatile uint8_t *)(0x61)) = 0x80;

 initmodule();

 (*(volatile uint8_t *)((0x24) + 0x20)) =(1<<1);
 (*(volatile uint8_t *)((0x25) + 0x20)) =(1<<1);
 (*(volatile uint8_t *)((0x27) + 0x20)) =(16000000L >> 3) / 22050;
# 918 ".././hardmod.c"
     (*(volatile uint8_t *)(0x80)) =(1<<7)|(1<<5)|(1<<3)|(1<<0);
 (*(volatile uint8_t *)(0x80)) &= (~(1<<4) | ~(1<<1));
     (*(volatile uint8_t *)(0x81)) =(1<<0);

     (*(volatile uint8_t *)(0xB0)) =(1<<7)|(1<<5)|(1<<1)|(1<<0);
     (*(volatile uint8_t *)(0xB1)) =(1<<0);

 (*(volatile uint8_t *)(0x6E)) =(1<<1);

 (*(volatile uint8_t *)((0x0A) + 0x20)) |= 0b11111000;
 (*(volatile uint8_t *)((0x0A) + 0x20)) &= ~0b00000100;

 (*(volatile uint8_t *)((0x04) + 0x20)) = 0b11111111;

 playtick = 1;

 asm("sei");

 for(;;)
 {
  if(playtick > 0)
  {
   playtick--;
   tick();
  }
 }
}

void __vector_14 (void) __attribute__ ((signal,used, externally_visible)) ; void __vector_14 (void)
{
 static u8 lastsampleleft = 0x7f;
 static u8 lastsampleright = 0x7f;
 s8 thissample;
 s8 nextsample;
 s8 diff;
 s8 newsample;
 s16 sampleleft;
 s16 sampleright;
 u8 idx;
 struct audiochannel_s* cur;

 u8 lights = 0;


 (*(volatile uint8_t *)((0x0B) + 0x20)) = 0;

 (*(volatile uint16_t *)(0x8A)) = lastsampleleft;
 (*(volatile uint8_t *)(0xB4)) = lastsampleright;


 if(song_state == 1)
 {
  if(++ticktimer > bpm)
  {
   if(!((*(volatile uint8_t *)((0x09) + 0x20))>>2&1))
   {
    if(realbpm <= 5)
     realbpm = 125;
    else
     realbpm -= 5;

    bpm = (bpmtab[realbpm-32]);
   }
   ++playtick;
   ticktimer = 0;
  }
 }


 sampleleft = sampleright = 0;
 for( idx=0; idx<4; ++idx )
 {
  cur = &mixchn[idx];
  if(cur->offset)
  {


   thissample = readsongbytesigned(cur->offset+(cur->pos>>8));

   if(cur->volume > 0)
   {
    lights |= 1<<(idx+4);
   }

   if((cur->pos += cur->inc) >= cur->length)
   {
    if(cur->looplength)
    {
     cur->pos -= cur->looplength;
    }
    else
    {
     cur->offset = 0;
     cur->length = 0;
     cur->looplength = 0;
    }
   }



   newsample = thissample;


   sampleleft += (((63-cur->pan)*newsample)>>6) * cur->volume;
   sampleright += (((cur->pan)*newsample)>>6) * cur->volume;
  }
 }


 lastsampleleft = 128 + (sampleleft >> 8);
 lastsampleright = 128 + (sampleright >> 8);
 (*(volatile uint8_t *)((0x0B) + 0x20)) |= (lights);
}

int main(void)
{

 if(havevalidsong())
 {
  play();
 }


 while(1)
 {

 }
}
